definitions:
  CategoriesResponse:
    properties:
      categories:
        items:
          type: string
        type: array
    required:
    - categories
    type: object
  ChangePasswordRequest:
    properties:
      currentPassword:
        type: string
      newPassword:
        type: string
    required:
    - currentPassword
    - newPassword
    type: object
  ChangePasswordResponse:
    properties:
      complete:
        default: false
        type: boolean
      currentPasswordMessage:
        default: ''
        type: string
      msg:
        default: ''
        type: string
        x-nullable: true
      newPasswordMessage:
        default: ''
        type: string
    type: object
  ForgotPasswordRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  ForgotPasswordResponse:
    properties:
      complete:
        default: false
        type: boolean
      emailMessage:
        default: ''
        type: string
      msg:
        default: ''
        type: string
        x-nullable: true
    type: object
  IndividualShiftDeleteResponse:
    properties:
      msg:
        default: ''
        type: string
        x-nullable: true
    type: object
  IndividualShiftGetResponse:
    properties:
      owner:
        type: boolean
      shift:
        $ref: '#/definitions/Shift'
    required:
    - owner
    type: object
  IndividualShiftPatchRequest:
    properties:
      data:
        additionalProperties:
          type: string
        type: object
    required:
    - data
    type: object
  IndividualShiftPatchResponse:
    properties:
      msg:
        default: ''
        type: string
        x-nullable: true
    type: object
  IndividualUserDeleteResponse:
    properties:
      msg:
        default: ''
        type: string
        x-nullable: true
    type: object
  IndividualUserGetResponse:
    properties:
      owner:
        type: boolean
      user:
        $ref: '#/definitions/User'
    required:
    - owner
    type: object
  IndividualUserPatchRequest:
    properties:
      data:
        additionalProperties:
          type: string
        type: object
    required:
    - data
    type: object
  IndividualUserPatchResponse:
    properties:
      msg:
        default: ''
        type: string
        x-nullable: true
    type: object
  InferenceRequest:
    properties:
      prebuiltShiftModel:
        default: ''
        type: string
      shiftUUID:
        type: string
      training:
        default: false
        type: boolean
      usePTM:
        default: false
        type: boolean
    required:
    - shiftUUID
    type: object
  InferenceResponse:
    properties:
      msg:
        default: ''
        type: string
        x-nullable: true
    type: object
  InferenceStatusResponse:
    properties:
      baseMediaFilename:
        default: null
        type: string
        x-nullable: true
      maskMediaFilename:
        default: null
        type: string
        x-nullable: true
      mediaFilename:
        default: null
        type: string
        x-nullable: true
      msg:
        default: ''
        type: string
        x-nullable: true
      stopped:
        default: false
        type: boolean
        x-nullable: true
    type: object
  LoadDataResponse:
    properties:
      msg:
        default: ''
        type: string
        x-nullable: true
      shiftUUID:
        default: ''
        type: string
    type: object
  LoginRequest:
    properties:
      password:
        type: string
      usernameOrEmail:
        type: string
    required:
    - password
    - usernameOrEmail
    type: object
  LoginResponse:
    properties:
      accessToken:
        default: ''
        type: string
      msg:
        default: ''
        type: string
        x-nullable: true
      passwordMessage:
        default: ''
        type: string
      usernameMessage:
        default: ''
        type: string
    type: object
  LogoutResponse:
    properties:
      msg:
        default: ''
        type: string
        x-nullable: true
    type: object
  NewShiftsResponse:
    properties:
      shifts:
        items:
          $ref: '#/definitions/Shift'
        type: array
    type: object
  PopularShiftsResponse:
    properties:
      shifts:
        items:
          $ref: '#/definitions/Shift'
        type: array
    type: object
  RefreshResponse:
    properties:
      accessToken:
        default: ''
        type: string
      msg:
        default: ''
        type: string
        x-nullable: true
    type: object
  RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  RegisterResponse:
    properties:
      accessToken:
        default: ''
        type: string
      emailMessage:
        default: ''
        type: string
      msg:
        default: ''
        type: string
        x-nullable: true
      passwordMessage:
        default: ''
        type: string
      usernameMessage:
        default: ''
        type: string
    type: object
  ResetPasswordRequest:
    properties:
      password:
        type: string
    required:
    - password
    type: object
  ResetPasswordResponse:
    properties:
      complete:
        default: false
        type: boolean
      msg:
        default: ''
        type: string
        x-nullable: true
      newPasswordMessage:
        default: ''
        type: string
    type: object
  Shift:
    properties:
      author:
        $ref: '#/definitions/User'
      baseMediaFilename:
        type: string
      dateCreated:
        type: string
      id: {}
      maskMediaFilename:
        type: string
      mediaFilename:
        type: string
      private:
        type: boolean
      title:
        type: string
      uuid:
        format: uuid
        type: string
      verified:
        type: boolean
      views:
        type: integer
    required:
    - author
    - title
    - uuid
    type: object
  ShiftCategoryResponse:
    properties:
      shifts:
        items:
          $ref: '#/definitions/Shift'
        type: array
    type: object
  StopTrainResponse:
    properties:
      msg:
        default: ''
        type: string
        x-nullable: true
    type: object
  TrainRequest:
    properties:
      prebuiltShiftModel:
        default: ''
        type: string
      shiftTitle:
        default: New Shift
        type: string
      shiftUUID:
        type: string
      trainType:
        default: basic
        type: string
      usePTM:
        default: false
        type: boolean
    required:
    - shiftUUID
    type: object
  TrainResponse:
    properties:
      msg:
        default: ''
        type: string
        x-nullable: true
    type: object
  TrainStatusResponse:
    properties:
      exhibit:
        default: null
        items:
          type: string
        type: array
        x-nullable: true
      msg:
        default: ''
        type: string
        x-nullable: true
      stopped:
        default: false
        type: boolean
        x-nullable: true
    type: object
  UpdatePictureResponse:
    properties:
      msg:
        default: ''
        type: string
        x-nullable: true
    type: object
  User:
    properties:
      admin:
        type: boolean
      canTrain:
        type: boolean
      dateCreated:
        type: string
      email:
        type: string
      id: {}
      mediaFilename:
        type: string
      username:
        type: string
      verified:
        type: boolean
    required:
    - email
    - username
    type: object
  UserShiftsResponse:
    properties:
      shifts:
        items:
          $ref: '#/definitions/Shift'
        type: array
    type: object
host: \
info:
  description: Shift Server API documentation
  title: Shift
  version: 1.0.0
paths:
  /api/loadData:
    post:
      consumes:
      - multipart/form-data
      description: Given training data Shift specializes a model for the training
        data. Yeilds more relaisitic results than just an inference though it takes
        longer.
      operationId: loadData
      parameters:
      - collectionFormat: multi
        in: formData
        items:
          format: binary
          type: string
        name: requestFiles
        required: true
        type: array
      - collectionFormat: multi
        in: header
        items:
          type: string
        name: trainingDataTypes
        required: true
        type: array
      responses:
        default:
          description: Given training data Shift specializes a model for the training
            data. Yeilds more relaisitic results than just an inference though it
            takes longer.
          schema:
            $ref: '#/definitions/LoadDataResponse'
      security:
      - Bearer: []
      tags:
      - Load
  /api/train:
    post:
      description: Given training data Shift specializes a model for the training
        data. Yeilds more relaisitic results than just an inference though it takes
        longer.
      operationId: train
      parameters:
      - description: The uuid of the shift model being inferenced with, the title
          of the shift that is being trained, whether or not the the PTM is being
          used, the uuid of the prebuilt shift model if one is being used, the amount
          of epochs inbetween the training status updates, and the type of trainign
          to send four pictures or one picture for front end.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/TrainRequest'
      responses:
        default:
          description: Whether the training has started or not.
          schema:
            $ref: '#/definitions/TrainResponse'
      security:
      - Bearer: []
      tags:
      - Train
  /api/trainStatus:
    post:
      description: The status of of the current training task if called while training
        the task will switch to give an update image. After a certain amount of time
        the training will be completed automatically to allow for multiple users to
        train.
      operationId: trainStatus
      parameters:
      - description: The uuid of the shift model being inferenced with, the title
          of the shift that is being trained, whether or not the the PTM is being
          used, the uuid of the prebuilt shift model if one is being used, the amount
          of epochs inbetween the training status updates, and the type of trainign
          to send four pictures or one picture for front end.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/TrainRequest'
      responses:
        default:
          description: The status of the current shift training, whether the training
            has stopped, and encoded images to view on the front end.
          schema:
            $ref: '#/definitions/TrainStatusResponse'
      security:
      - Bearer: []
      tags:
      - Train
  /api/stopTraining:
    post:
      description: Stop the training with the UUID of the shift model being trained.
      operationId: stopTrain
      parameters:
      - description: The uuid of the shift model being inferenced with, the title
          of the shift that is being trained, whether or not the the PTM is being
          used, the uuid of the prebuilt shift model if one is being used, the amount
          of epochs inbetween the training status updates, and the type of trainign
          to send four pictures or one picture for front end.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/TrainRequest'
      responses:
        default:
          description: Whether the stop train signal was accepted.
          schema:
            $ref: '#/definitions/StopTrainResponse'
      security:
      - Bearer: []
      tags:
      - Train
  /api/authenticate/login:
    post:
      description: The login for the user.
      operationId: login
      parameters:
      - description: The username or email of the user logging in, the password associated
          with the username of the user logging in, and whether or not the user should
          be remebered when they are logged in.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/LoginRequest'
      responses:
        default:
          description: The status of the login attempt, an access token to use for
            protected routes, a specific message for the username and a specific message
            for the password.
          schema:
            $ref: '#/definitions/LoginResponse'
      security:
      - Bearer: []
      tags:
      - Authenticate
  /api/authenticate/logout:
    get:
      description: Logs the user out.
      operationId: logout
      parameters: []
      responses:
        default:
          description: The status of the user logging out.
          schema:
            $ref: '#/definitions/LogoutResponse'
      security:
      - Bearer: []
      tags:
      - Authenticate
  /api/authenticate/refresh:
    get:
      description: Refreshes the users access token.
      operationId: refresh
      parameters:
      - in: header
        name: csrf_refresh_token
        required: true
        type: string
      - in: header
        name: refresh_token_cookie
        required: true
        type: string
      responses:
        default:
          description: The status of the refresh attempt, an access token to use for
            protected routes.
          schema:
            $ref: '#/definitions/RefreshResponse'
      security:
      - Refresh: []
      - CSRF_Refresh: []
      tags:
      - Authenticate
  /api/authenticate/register:
    post:
      description: The regitration for the user.
      operationId: register
      parameters:
      - description: The name the user has picked for their account, the password
          associated with the username of the user logging in, and the email to be
          registered with the new account.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/RegisterRequest'
      responses:
        default:
          description: The status of the register attempt, an access token to use
            for access to protected routes, a specific message for the username, a
            specific message for the email, and a specific message for the password.
          schema:
            $ref: '#/definitions/RegisterResponse'
      security:
      - Bearer: []
      tags:
      - Authenticate
  /api/user/{username}/shifts:
    get:
      description: The shifts associated with the queried user.
      operationId: userShifts
      parameters:
      - in: path
        name: username
        required: true
        type: string
      responses:
        default:
          description: The shifts for the user who is logged in.
          schema:
            $ref: '#/definitions/UserShiftsResponse'
      tags:
      - User
  /api/user/resetPassword/{token}:
    patch:
      description: Updates/modifies users password.
      operationId: resetPassword
      parameters:
      - description: The password to reset with.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ResetPasswordRequest'
      - in: path
        name: token
        required: true
        type: string
      responses:
        default:
          description: The status message pertaing to the patch, the current password
            message and whether the reset was completed.
          schema:
            $ref: '#/definitions/ResetPasswordResponse'
      security:
      - Bearer: []
      tags:
      - User
  /api/user/data/updatePicture:
    put:
      consumes:
      - multipart/form-data
      description: Changes the users profile picture to the uploaded picture.
      operationId: updatePicture
      parameters:
      - in: formData
        name: requestFile
        required: true
        type: file
      responses:
        default:
          description: Whether the picture has been updated or not.
          schema:
            $ref: '#/definitions/UpdatePictureResponse'
      security:
      - Bearer: []
      tags:
      - User
  /api/user/{username}:
    delete:
      description: Deletes the queried user.
      operationId: deleteIndivdualUser
      parameters:
      - in: path
        name: username
        required: true
        type: string
      responses:
        default:
          description: The status message pertaing to the delete.
          schema:
            $ref: '#/definitions/IndividualUserDeleteResponse'
      security:
      - Bearer: []
      tags:
      - User
    get:
      description: The queried user.
      operationId: getIndivdualUser
      parameters:
      - in: path
        name: username
        required: true
        type: string
      responses:
        default:
          description: The requested user.
          schema:
            $ref: '#/definitions/IndividualUserGetResponse'
      security:
      - Bearer: []
      tags:
      - User
    patch:
      description: Updates/modifies the queried user.
      operationId: patchIndivdualUser
      parameters:
      - description: The field name and updated value to update the queried user.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IndividualUserPatchRequest'
      - in: path
        name: username
        required: true
        type: string
      responses:
        default:
          description: The status message pertaing to the patch.
          schema:
            $ref: '#/definitions/IndividualUserPatchResponse'
      security:
      - Bearer: []
      tags:
      - User
  /api/user/changePassword:
    patch:
      description: Updates/modifies users password.
      operationId: changePassword
      parameters:
      - description: The users current password to check and the new password to update
          to.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ChangePasswordRequest'
      responses:
        default:
          description: The status message pertaing to the patch, the current password
            message, and the new password message.
          schema:
            $ref: '#/definitions/ChangePasswordResponse'
      security:
      - Bearer: []
      tags:
      - User
  /api/user/forgotPassword:
    post:
      description: Updates/modifies users password.
      operationId: forgotPassword
      parameters:
      - description: The email of the user to send the reset password token to.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ForgotPasswordRequest'
      responses:
        default:
          description: The status message pertaing to the patch, the new email message,
            and whether the request was completed.
          schema:
            $ref: '#/definitions/ForgotPasswordResponse'
      security:
      - Bearer: []
      tags:
      - User
  /api/inference:
    post:
      description: Inferencing based on a specialized pretrained model(PTM) where,
        the input is the face to be put on the media and inferenced with PTM. Alternativley
        inferencing with a given base video and shift face with a non specialized
        PTM.
      operationId: inference
      parameters:
      - description: The uuid of the shift model being inferenced with, whether or
          not to use the pre trained model(PTM), and if using a prebuilt shift model
          the uuid of that shift.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/InferenceRequest'
      responses:
        default:
          description: Whether the shifting/inferencing went according to plan.
          schema:
            $ref: '#/definitions/InferenceResponse'
      security:
      - Bearer: []
      tags:
      - Inference
  /api/inference/content/{filename}:
    get:
      description: The CDN to get non trained Shifted images.
      operationId: inferenceCDN
      parameters:
      - in: path
        name: filename
        required: true
        type: string
      responses:
        default:
          description: ''
          schema: {}
      tags:
      - Inference
  /api/inferenceStatus:
    post:
      description: The status of the current shift model while inferencing on the
        original media and whether or not it has stopped inferencing.
      operationId: inferenceStatus
      parameters:
      - description: The uuid of the shift model being inferenced with, whether or
          not to use the pre trained model(PTM), and if using a prebuilt shift model
          the uuid of that shift.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/InferenceRequest'
      responses:
        default:
          description: A msg describing the current state of inferencing on the original
            media, whether or not the inferencing has been stopped or finished, and
            the image path to pass to the cdn for the shifted media, and the base
            and the mask previews.
          schema:
            $ref: '#/definitions/InferenceStatusResponse'
      security:
      - Bearer: []
      tags:
      - Inference
  /api/content/image/{filename}:
    get:
      description: The image portion of the Shift CDN.
      operationId: image
      parameters:
      - in: path
        name: filename
        required: true
        type: string
      responses:
        default:
          description: ''
          schema: {}
      tags:
      - CDN
  /api/content/video/{filename}:
    get:
      description: The video portion of the Shift CDN.
      operationId: getVideo
      parameters:
      - in: path
        name: filename
        required: true
        type: string
      responses:
        default:
          description: ''
          schema: {}
      tags:
      - CDN
  /api/content/image/{filename}/{download}:
    get:
      description: The image portion of the Shift CDN.
      operationId: getImageDownload
      parameters:
      - in: path
        name: filename
        required: true
        type: string
      - in: path
        name: download
        required: true
        type: string
      responses:
        default:
          description: ''
          schema: {}
      tags:
      - CDN
  /api/content/video/{filename}/{download}:
    get:
      description: The video portion of the Shift CDN.
      operationId: getVideoDownload
      parameters:
      - in: path
        name: filename
        required: true
        type: string
      - in: path
        name: download
        required: true
        type: string
      responses:
        default:
          description: ''
          schema: {}
      tags:
      - CDN
  /api/shift/category/new:
    get:
      description: The new shifts to display on the home page.
      operationId: new
      parameters: []
      responses:
        default:
          description: The newest shifts.
          schema:
            $ref: '#/definitions/NewShiftsResponse'
      tags:
      - Category
  /api/shift/category/categories/{maximum}:
    get:
      description: The shifts for the queried category to display on the home page.
      operationId: Categories
      parameters:
      - format: int32
        in: path
        name: maximum
        required: true
        type: integer
      responses:
        default:
          description: The category names for the requested amount of categories.
          schema:
            $ref: '#/definitions/CategoriesResponse'
      tags:
      - Category
  /api/shift/category/popular:
    get:
      description: The popular shifts to display on the home page.
      operationId: popular
      parameters: []
      responses:
        default:
          description: The top 10 most popular shifts.
          schema:
            $ref: '#/definitions/PopularShiftsResponse'
      tags:
      - Category
  /api/shift/category/{categoryName}:
    get:
      description: The shifts for the queried category to display on the home page.
      operationId: Category
      parameters:
      - in: path
        name: categoryName
        required: true
        type: string
      responses:
        default:
          description: The shifts for the queried category.
          schema:
            $ref: '#/definitions/ShiftCategoryResponse'
      tags:
      - Category
  /api/shift/{uuid}:
    delete:
      description: Deletes the queried shift.
      operationId: deleteIndivdualShift
      parameters:
      - in: path
        name: uuid
        required: true
        type: string
      responses:
        default:
          description: The status message pertaing to the delete.
          schema:
            $ref: '#/definitions/IndividualShiftDeleteResponse'
      security:
      - Bearer: []
      tags:
      - Shift
    get:
      description: The queried shift
      operationId: getIndivdualShift
      parameters:
      - in: path
        name: uuid
        required: true
        type: string
      responses:
        default:
          description: The requested shift.
          schema:
            $ref: '#/definitions/IndividualShiftGetResponse'
      security:
      - Bearer: []
      tags:
      - Shift
    patch:
      description: Updates/modifies the queried shift.
      operationId: patchIndivdualShift
      parameters:
      - description: The field name and updated value to update the queried shift.
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IndividualShiftPatchRequest'
      - in: path
        name: uuid
        required: true
        type: string
      responses:
        default:
          description: The status message pertaing to the update/modify.
          schema:
            $ref: '#/definitions/IndividualShiftPatchResponse'
      security:
      - Bearer: []
      tags:
      - Shift
schemes:
- http
- https
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
  CSRF_Refresh:
    in: cookie
    name: refresh_token_cookie
    type: apiKey
  Refresh:
    in: cookie
    name: csrf_refresh_token
    type: apiKey
swagger: '2.0'
