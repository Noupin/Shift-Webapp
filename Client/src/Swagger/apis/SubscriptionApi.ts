/* tslint:disable */
/* eslint-disable */
/**
 * Shift
 * Shift Server API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    StripeCreateCheckoutSessionResponse,
    StripeCreateCheckoutSessionResponseFromJSON,
    StripeCreateCheckoutSessionResponseToJSON,
    StripePublishableKeyResponse,
    StripePublishableKeyResponseFromJSON,
    StripePublishableKeyResponseToJSON,
} from '../models';

/**
 * 
 */
export class SubscriptionApi extends runtime.BaseAPI {

    /**
     * Sends the publishable stripe key.
     */
    async createCheckoutSessionRaw(): Promise<runtime.ApiResponse<StripeCreateCheckoutSessionResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/subscription/create-checkout-session`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => StripeCreateCheckoutSessionResponseFromJSON(jsonValue));
    }

    /**
     * Sends the publishable stripe key.
     */
    async createCheckoutSession(): Promise<StripeCreateCheckoutSessionResponse> {
        const response = await this.createCheckoutSessionRaw();
        return await response.value();
    }

    /**
     * Sends the publishable stripe key.
     */
    async getStripePublishableKeyRaw(): Promise<runtime.ApiResponse<StripePublishableKeyResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/subscription/stripe-publishable-key`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => StripePublishableKeyResponseFromJSON(jsonValue));
    }

    /**
     * Sends the publishable stripe key.
     */
    async getStripePublishableKey(): Promise<StripePublishableKeyResponse> {
        const response = await this.getStripePublishableKeyRaw();
        return await response.value();
    }

}
