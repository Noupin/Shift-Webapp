[{"C:\\Coding\\Projects\\Shift Webapp\\src\\App.tsx":"1","C:\\Coding\\Projects\\Shift Webapp\\src\\reportWebVitals.ts":"2","C:\\Coding\\Projects\\Shift Webapp\\src\\index.tsx":"3","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Register.tsx":"4","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Login.tsx":"5","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Button\\Button.tsx":"6","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\TextBox\\TextBox.tsx":"7","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Checkbox\\Checkbox.tsx":"8","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Account.tsx":"9","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\ForgotPassword.tsx":"10","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\Navbar.tsx":"11","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Load\\Load.tsx":"12","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\Train.tsx":"13","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Shift\\Shift.tsx":"14","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Media\\Media.tsx":"15","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Image\\Image.tsx":"16","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Video\\Video.tsx":"17","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\MediaList\\MediaList.tsx":"18","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\AdvancedTrain.tsx":"19","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\FileDialog\\FileDialog.tsx":"20","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\UserElements.tsx":"21","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\dragAndDrop.ts":"22","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Files.ts":"23","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Arrays.ts":"24","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Authenticate.ts":"25","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Fetch.ts":"26","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Images.ts":"27","C:\\Coding\\Projects\\Shift Webapp\\src\\constants.tsx":"28"},{"size":4565,"mtime":1610136339233,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":1606695268610,"results":"31","hashOfConfig":"30"},{"size":501,"mtime":1607455320057,"results":"32","hashOfConfig":"30"},{"size":4312,"mtime":1610133836332,"results":"33","hashOfConfig":"30"},{"size":4404,"mtime":1610129754322,"results":"34","hashOfConfig":"30"},{"size":580,"mtime":1610064201558,"results":"35","hashOfConfig":"30"},{"size":658,"mtime":1609779161561,"results":"36","hashOfConfig":"30"},{"size":645,"mtime":1609779978263,"results":"37","hashOfConfig":"30"},{"size":1130,"mtime":1610119404144,"results":"38","hashOfConfig":"30"},{"size":2911,"mtime":1610133912809,"results":"39","hashOfConfig":"30"},{"size":1410,"mtime":1610055193056,"results":"40","hashOfConfig":"30"},{"size":7616,"mtime":1610137761186,"results":"41","hashOfConfig":"30"},{"size":3135,"mtime":1610136283749,"results":"42","hashOfConfig":"30"},{"size":3083,"mtime":1610136308340,"results":"43","hashOfConfig":"30"},{"size":1792,"mtime":1610136255524,"results":"44","hashOfConfig":"30"},{"size":507,"mtime":1609894222749,"results":"45","hashOfConfig":"30"},{"size":664,"mtime":1609894227238,"results":"46","hashOfConfig":"30"},{"size":1103,"mtime":1609894281598,"results":"47","hashOfConfig":"30"},{"size":4251,"mtime":1610136303299,"results":"48","hashOfConfig":"30"},{"size":869,"mtime":1609891206709,"results":"49","hashOfConfig":"30"},{"size":2642,"mtime":1610121607401,"results":"50","hashOfConfig":"30"},{"size":1140,"mtime":1610138003249,"results":"51","hashOfConfig":"30"},{"size":213,"mtime":1610135240682,"results":"52","hashOfConfig":"30"},{"size":169,"mtime":1610067728782,"results":"53","hashOfConfig":"30"},{"size":987,"mtime":1610133067300,"results":"54","hashOfConfig":"30"},{"size":831,"mtime":1610133079440,"results":"55","hashOfConfig":"30"},{"size":1142,"mtime":1610133093108,"results":"56","hashOfConfig":"30"},{"size":277,"mtime":1610135361351,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1hd1ldu",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Coding\\Projects\\Shift Webapp\\src\\App.tsx",["123"],"C:\\Coding\\Projects\\Shift Webapp\\src\\reportWebVitals.ts",[],["124","125"],"C:\\Coding\\Projects\\Shift Webapp\\src\\index.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Register.tsx",["126","127","128","129","130"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { TextBox } from '../../Components/TextBox/TextBox';\r\nimport { useAuthenticate } from '../../Helpers/Authenticate';\r\nimport { useFetch } from '../../Helpers/Fetch';\r\nimport { IAuthRequestReturn } from '../../Interfaces/Authenticate';\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\n\r\n\r\ninterface registerRequestReturn {\r\n  msg: string\r\n}\r\n\r\n\r\nexport const Register = (props: IElevatedPageState) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [registerResponse, setRegisterResponse] = useState<registerRequestReturn>();\r\n  const [authenticating, setAuthenticating] = useState(false);\r\n  const [authenticatedResponse, setAuthenticatedResponse] = useState<IAuthRequestReturn>();\r\n\r\n  const history = useHistory();\r\n\r\n\r\n  let requestOptions: RequestInit = {};\r\n\r\n\r\n  const apiFetch = useFetch(setFetching, props.setError, setRegisterResponse, `/api/users/register`, () => requestOptions, registerResponse)\r\n  const auth = useAuthenticate(setAuthenticating, props.setError, setAuthenticatedResponse)\r\n\r\n\r\n  useEffect(() => {\r\n    if(!fetching) return;\r\n\r\n    if (password !== confirmPassword){\r\n      props.setMsg(\"Passwords do not match\");\r\n      setFetching(false)\r\n      return;\r\n    }\r\n\r\n    requestOptions = {\r\n      method: 'POST',\r\n      credentials: \"include\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ username: username, password: password, email: email})\r\n    };\r\n\r\n    apiFetch()\r\n    setAuthenticating(true)\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if(!authenticating || !registerResponse) return;\r\n\r\n    props.setMsg(registerResponse!.msg);\r\n    auth()\r\n  }, [authenticating, registerResponse]);\r\n\r\n  useEffect(() => {\r\n    if(!authenticatedResponse) return;\r\n    props.setAuthenticated(authenticatedResponse.authenticated)\r\n  }, [authenticatedResponse]);\r\n\r\n  useEffect(() => {\r\n    if(!props.authenticated()) return;\r\n    history.push(\"/\")\r\n  }, [props.authenticated()]);\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <Row className=\"mt-auto mb-auto\">\r\n        <Col xs={3}></Col>\r\n        <Col xs={6}>\r\n          <Row className=\"justify-content-center\">\r\n            <h2>Sign Up</h2>\r\n          </Row>\r\n\r\n          <br/>\r\n\r\n          <Row>\r\n            <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"text\" placeholder=\"Username\" onBlur={(event) => setUsername(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"email\" placeholder=\"Email\" onBlur={(event) => setEmail(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"Password\" onBlur={(event) => setPassword(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"Confirm Password\" onBlur={(event) => setConfirmPassword(event.target.value)}/>\r\n          </Row>\r\n\r\n          <Row className=\"align-items-center\">\r\n            <Col xs={2}></Col>\r\n            <Col xs={8}>\r\n              <Button className=\"p-2 mt-4 mb-2 borderRadius-2 w-100\" disabled={fetching || authenticating} onClick={() => {setFetching(true)}}>Register &#10140;</Button>\r\n            </Col>\r\n            <Col xs={2}></Col>\r\n          </Row>\r\n\r\n          <br/>\r\n        </Col>\r\n        <Col xs={3}></Col>\r\n      </Row>\r\n\r\n      <Row className=\"mt-auto mb-3\">\r\n        <Col xs={4}></Col>\r\n        <Col xs={4}>\r\n          <Link to=\"/login\" className=\"w-100\">\r\n            <Button className=\"p-2 mb-2 borderRadius-2 w-100\">Already Have An Account?</Button>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={4}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Login.tsx",["131","132","133","134","135"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { TextBox } from '../../Components/TextBox/TextBox';\r\nimport { Checkbox } from '../../Components/Checkbox/Checkbox';\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { IAuthRequestReturn } from \"../../Interfaces/Authenticate\";\r\nimport { useFetch } from \"../../Helpers/Fetch\";\r\nimport { useAuthenticate } from '../../Helpers/Authenticate';\r\n\r\n\r\ninterface loginRequestReturn {\r\n  msg: string\r\n}\r\n\r\n\r\nexport const Login = (props: IElevatedPageState) => {\r\n  const [usernameOrEmail, setUsernameOrEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [loginResponse, setLoginResponse] = useState<loginRequestReturn>();\r\n  const [authenticating, setAuthenticating] = useState(false);\r\n  const [authenticatedResponse, setAuthenticatedResponse] = useState<IAuthRequestReturn>();\r\n\r\n  const history = useHistory();\r\n\r\n  let requestOptions: RequestInit = {};\r\n\r\n  const apiFetch = useFetch(setFetching, props.setError, setLoginResponse, `/api/users/login`, () => requestOptions, loginResponse);\r\n  const auth = useAuthenticate(setAuthenticating, props.setError, setAuthenticatedResponse);\r\n\r\n\r\n  useEffect(() => {\r\n    if(!fetching) return;\r\n\r\n    requestOptions = {\r\n      method: 'POST',\r\n      credentials: \"include\",\r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify({usernameOrEmail: usernameOrEmail,\r\n                            password: password,\r\n                            remember: rememberMe})\r\n    };\r\n\r\n    apiFetch()\r\n    setAuthenticating(true)\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if(!authenticating || !loginResponse) return;\r\n    props.setMsg(loginResponse!.msg)\r\n    auth()\r\n  }, [authenticating, loginResponse]);\r\n\r\n  useEffect(() => {\r\n    if(!authenticatedResponse) return;\r\n    props.setAuthenticated(authenticatedResponse.authenticated)\r\n  }, [authenticatedResponse]);\r\n\r\n  useEffect(() => {\r\n    if(!props.authenticated()) return;\r\n    history.push(\"/\")\r\n  }, [props.authenticated()]);\r\n\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <Row className=\"mt-auto mb-auto\">\r\n        <Col xs={3}></Col>\r\n        <Col xs={6}>\r\n          <Row className=\"justify-content-center\">\r\n            <h2>Login</h2>\r\n          </Row>\r\n\r\n          <br/>\r\n\r\n          <Row>\r\n            <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"text\" placeholder=\"Username/Email\" onBlur={(event) => setUsernameOrEmail(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n           <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"Password\" onBlur={(event) => setPassword(event.target.value)}/>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs={2}></Col>\r\n            <Col xs={8}>\r\n              <Button className=\"p-2 mt-4 mb-2 borderRadius-2 w-100\" disabled={fetching || authenticating} onClick={() => {setFetching(true)}}>Login &#10140;</Button>\r\n            </Col>\r\n            <Col xs={2}></Col>\r\n          </Row>\r\n\r\n          <br/>\r\n\r\n          <Row className=\"align-items-center\">\r\n            <Col xs={1}></Col>\r\n            <Col xs={3} className=\"pr-1 text-right\">\r\n              Remember Me\r\n            </Col>\r\n            <Col xs={1} className=\"p-2\">\r\n              <Checkbox checked={rememberMe} onChange={() => setRememberMe(!rememberMe)}/>\r\n            </Col>\r\n            <Col xs={2}></Col>\r\n            <Col xs={1}></Col>\r\n            <Col xs={3}>\r\n              <Link to=\"/forgotPassword\">Forgot Password?</Link>\r\n            </Col>\r\n            <Col xs={1}></Col>\r\n          </Row>\r\n\r\n          <br/>\r\n        </Col>\r\n        <Col xs={3}></Col>\r\n      </Row>\r\n\r\n      <Row className=\"mt-auto mb-3\">\r\n        <Col xs={4}></Col>\r\n        <Col xs={4}>\r\n          <Link to=\"/register\" className=\"w-100\">\r\n            <Button className=\"p-2 mb-2 borderRadius-2 w-100\">Don't Have An Account?</Button>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={4}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Button\\Button.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\TextBox\\TextBox.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Checkbox\\Checkbox.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Account.tsx",["136"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n//First Party Imports\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { useFetch } from \"../../Helpers/Fetch\";\r\n\r\n\r\ninterface accountRequestReturn {\r\n  username: string,\r\n}\r\n\r\n\r\nexport const Account = (props: IElevatedPageState) => {\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  const [fetching, setFetching] = useState(true);\r\n  const [accountResponse, setAccountResponse] = useState<accountRequestReturn>()\r\n\r\n  const requestOptions: RequestInit = {\r\n    method: 'GET',\r\n    credentials: \"include\",\r\n    headers: { 'Content-Type': 'application/json' }\r\n  };\r\n\r\n\r\n  const apiFetch = useFetch(setFetching, props.setError, setAccountResponse, `/api/users/account`, () => requestOptions, accountResponse)\r\n\r\n  useEffect(() => {\r\n    if(!fetching) return;\r\n    apiFetch()\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if(!accountResponse) return;\r\n    setUsername(accountResponse!.username);\r\n  }, [accountResponse]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <h2>{username}</h2>\r\n      <p>Your account page.</p>\r\n    </>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\ForgotPassword.tsx",["137","138"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n//First Party Imports\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { TextBox } from '../../Components/TextBox/TextBox';\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { useFetch } from \"../../Helpers/Fetch\";\r\n\r\n\r\ninterface resetPasswordRequestReturn {\r\n  msg: string\r\n}\r\n\r\n\r\nexport const ForgotPassword = (props: IElevatedPageState) => {\r\n\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [registerResponse, setRegisterResponse] = useState<resetPasswordRequestReturn>();\r\n\r\n  let requestOptions: RequestInit = {};\r\n\r\n\r\n  const apiFetch = useFetch(setFetching, props.setError, setRegisterResponse, `/api/users/resetPassword`, () => requestOptions, registerResponse)\r\n\r\n  useEffect(() => {\r\n    if(fetching) return;\r\n\r\n    if (password !== confirmPassword){\r\n      props.setMsg(\"Passwords do not match\");\r\n      setFetching(false)\r\n      return;\r\n    }\r\n\r\n    requestOptions = {\r\n      method: 'POST',\r\n      credentials: \"include\",\r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify({currentPassword: currentPassword, password: password})\r\n    };\r\n\r\n    apiFetch()\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if(!registerResponse) return;\r\n    props.setMsg(registerResponse!.msg)\r\n  }, [registerResponse]);\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <Row className=\"mt-auto mb-auto\">\r\n        <Col xs={3}></Col>\r\n        <Col xs={6}>\r\n          <Row className=\"justify-content-center\">\r\n            <h2>Reset Password</h2>\r\n          </Row>\r\n\r\n          <br/>\r\n\r\n          <Row>\r\n            <TextBox className=\"m-2 p-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"Current Password\" onBlur={(event) => setCurrentPassword(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"m-2 p-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"New Password\" onBlur={(event) => setPassword(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"m-2 p-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"Confirm Password\" onBlur={(event) => setConfirmPassword(event.target.value)}/>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs={2}></Col>\r\n            <Col xs={8}>\r\n              <Button className=\"mt-3 m-2 p-2 borderRadius-2 w-100\" onClick={() => setFetching(true)}>Update &#10140;</Button>\r\n            </Col>\r\n            <Col xs={2}></Col>\r\n          </Row>\r\n\r\n          <br/>\r\n        </Col>\r\n        <Col xs={3}></Col>\r\n      </Row>\r\n\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\Navbar.tsx",["139","140"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\n\r\n//First Party Imports\r\nimport './Navbar.scss'\r\nimport Logo from '../../Assets/icon.png'\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { UserElements } from \"./UserElements\";\r\n\r\n\r\nexport const NavBar = (props: IElevatedPageState) => {\r\n  const imageStyle = {height: \"auto\", width: \"auto\", maxHeight: \"30px\", maxWidth: \"30px\"}\r\n\r\n\r\n  return (\r\n    <div className=\"neumorphic borderRadius-2 mx-2 mt-2 w-100\">\r\n      <Navbar sticky=\"top\" expand=\"lg\">\r\n        <Navbar.Brand>\r\n          <NavLink to=\"/\" className=\"pl-2 borderRadius-2\">\r\n            <img style={imageStyle} src={Logo} alt=\"Shift\"/>\r\n          </NavLink>\r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link>\r\n              <NavLink to=\"/load\" activeClassName=\"navSelected\" className=\"nav-link borderRadius-2\">\r\n                Load\r\n              </NavLink>\r\n            </Nav.Link>\r\n          </Nav>\r\n          <Nav className=\"justify-content-end\" key={`${props.authenticated}`}>\r\n            <UserElements {...props}/>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Load\\Load.tsx",["141","142","143","144"],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\Train.tsx",["145","146","147","148","149"],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Shift\\Shift.tsx",["150","151","152"],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Media\\Media.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Image\\Image.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Video\\Video.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\MediaList\\MediaList.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\AdvancedTrain.tsx",["153","154","155","156","157","158","159","160"],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\FileDialog\\FileDialog.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\UserElements.tsx",["161","162","163","164"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\n\r\n//First Party Imports\r\nimport './Navbar.scss'\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { useFetch } from \"../../Helpers/Fetch\";\r\nimport { useAuthenticate } from '../../Helpers/Authenticate';\r\nimport { IAuthRequestReturn } from '../../Interfaces/Authenticate';\r\n\r\n\r\ninterface logoutRequestReturn {\r\n  msg: string\r\n}\r\n\r\n\r\nexport const UserElements = (props: IElevatedPageState) => {\r\n  const [authenticating, setAuthenticating] = useState(false);\r\n  const [authenticatedResponse, setAuthenticatedResponse] = useState<IAuthRequestReturn>()\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [logoutResponse, setLogoutResponse] = useState<logoutRequestReturn>();\r\n\r\n  const requestOptions: RequestInit = {\r\n    method: 'GET',\r\n    credentials: \"include\",\r\n    headers: { 'Content-Type': 'application/json'}\r\n  };\r\n\r\n  const auth = useAuthenticate(setAuthenticating, props.setError, setAuthenticatedResponse)\r\n  const apiFetch = useFetch(setFetching, props.setError, setLogoutResponse, `/api/users/logout`, () => requestOptions, logoutResponse)\r\n\r\n  useEffect(() => {\r\n    if(!fetching) return;\r\n    apiFetch()\r\n    setAuthenticating(true)\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if (!authenticating || !logoutResponse) return;\r\n    props.setMsg(logoutResponse!.msg)\r\n    auth()\r\n  }, [authenticating, logoutResponse]);\r\n\r\n  useEffect(() => {\r\n    if (!authenticatedResponse) return;\r\n    props.setAuthenticated(authenticatedResponse!.authenticated)\r\n  }, [authenticatedResponse]);\r\n\r\n\r\n  if(props.authenticated()){\r\n    return (\r\n      <>\r\n      <Nav.Link>\r\n        <NavLink to=\"/account\" activeClassName=\"navSelected\" className=\"nav-link borderRadius-2\">\r\n          Account\r\n        </NavLink>\r\n      </Nav.Link>\r\n      <Nav.Link>\r\n        <Button className=\"neumorphic borderRadius-2 py-2 px-3 w-100\" onClick={() => setFetching(true)} disabled={fetching || authenticating}>\r\n          Logout\r\n        </Button>\r\n      </Nav.Link>\r\n      </>\r\n    );\r\n  }\r\n  else{\r\n    return (\r\n      <>\r\n      <Nav.Link>\r\n        <NavLink to=\"/login\" activeClassName=\"navSelected\" className=\"nav-link borderRadius-2\">\r\n          Login\r\n        </NavLink>\r\n      </Nav.Link>\r\n      <Nav.Link>\r\n        <NavLink to=\"/register\" activeClassName=\"navSelected\" className=\"nav-link borderRadius-2\">\r\n          Register\r\n        </NavLink>\r\n      </Nav.Link>\r\n      </>\r\n    );\r\n  }\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\dragAndDrop.ts",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Files.ts",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Arrays.ts",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Authenticate.ts",["165"],"//First Party Imports\r\nimport { IAuthRequestReturn } from '../Interfaces/Authenticate'\r\n\r\n\r\nconst authRequestOptions: RequestInit = {\r\n  method: 'GET',\r\n  credentials: \"include\",\r\n  headers: { 'Content-Type': 'application/json' }\r\n};\r\n\r\nasync function returnFetch(url: string, options: RequestInit){\r\n  return await fetch(url, options)\r\n}\r\n\r\nexport function useAuthenticate(setLoading: React.Dispatch<React.SetStateAction<boolean>>,\r\n                                setError: React.Dispatch<React.SetStateAction<Error>>,\r\n                                setData: React.Dispatch<React.SetStateAction<IAuthRequestReturn | undefined>>){\r\n\r\n  async function call(){\r\n    setLoading(true);\r\n\r\n    try{\r\n      const response = await fetch(`/api/users/isAuthenticated`, authRequestOptions);\r\n      const json = await response.json();\r\n\r\n      setData(json);\r\n      setLoading(false);\r\n    }\r\n    catch (error){\r\n      setLoading(false);\r\n      setError(error);\r\n    }\r\n  }\r\n\r\n  return call\r\n}\r\n","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Fetch.ts",["166"],"\r\nasync function returnFetch(url: string, options: RequestInit){\r\n  return await fetch(url, options)\r\n}\r\n\r\nexport function useFetch<T>(setLoading: React.Dispatch<React.SetStateAction<boolean>>,\r\n                            setError: React.Dispatch<React.SetStateAction<Error>>,\r\n                            setData: React.Dispatch<React.SetStateAction<T>>,\r\n                            url: string, requestOptions: () => RequestInit,\r\n                            defaultResponse: T): () => Promise<void>{\r\n\r\n  async function call(){\r\n    setLoading(true);\r\n\r\n    try{\r\n      const response = await fetch(url, requestOptions());\r\n      const json = await response.json();\r\n\r\n      setData(json);\r\n      setLoading(false);\r\n    }\r\n    catch (error){\r\n      setLoading(false);\r\n      setError(error);\r\n    }\r\n  }\r\n\r\n  return call\r\n}\r\n","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Images.ts",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\constants.tsx",["167","168","169","170","171"],{"ruleId":"172","severity":1,"message":"173","line":50,"column":6,"nodeType":"174","endLine":50,"endColumn":16,"suggestions":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"172","severity":1,"message":"180","line":50,"column":22,"nodeType":"181","endLine":55,"endColumn":6},{"ruleId":"172","severity":1,"message":"182","line":66,"column":6,"nodeType":"174","endLine":66,"endColumn":40,"suggestions":"183"},{"ruleId":"172","severity":1,"message":"184","line":71,"column":6,"nodeType":"174","endLine":71,"endColumn":29,"suggestions":"185"},{"ruleId":"172","severity":1,"message":"186","line":76,"column":6,"nodeType":"174","endLine":76,"endColumn":29,"suggestions":"187"},{"ruleId":"172","severity":1,"message":"188","line":76,"column":7,"nodeType":"189","endLine":76,"endColumn":28},{"ruleId":"172","severity":1,"message":"180","line":42,"column":22,"nodeType":"181","endLine":49,"endColumn":6},{"ruleId":"172","severity":1,"message":"182","line":59,"column":6,"nodeType":"174","endLine":59,"endColumn":37,"suggestions":"190"},{"ruleId":"172","severity":1,"message":"184","line":64,"column":6,"nodeType":"174","endLine":64,"endColumn":29,"suggestions":"191"},{"ruleId":"172","severity":1,"message":"186","line":69,"column":6,"nodeType":"174","endLine":69,"endColumn":29,"suggestions":"192"},{"ruleId":"172","severity":1,"message":"188","line":69,"column":7,"nodeType":"189","endLine":69,"endColumn":28},{"ruleId":"172","severity":1,"message":"193","line":32,"column":6,"nodeType":"174","endLine":32,"endColumn":16,"suggestions":"194"},{"ruleId":"172","severity":1,"message":"180","line":40,"column":22,"nodeType":"181","endLine":45,"endColumn":6},{"ruleId":"172","severity":1,"message":"184","line":53,"column":6,"nodeType":"174","endLine":53,"endColumn":24,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":2,"column":17,"nodeType":"198","messageId":"199","endLine":2,"endColumn":25},{"ruleId":"196","severity":1,"message":"200","line":2,"column":27,"nodeType":"198","messageId":"199","endLine":2,"endColumn":36},{"ruleId":"172","severity":1,"message":"180","line":57,"column":22,"nodeType":"181","endLine":61,"endColumn":6},{"ruleId":"172","severity":1,"message":"184","line":78,"column":6,"nodeType":"174","endLine":78,"endColumn":20,"suggestions":"201"},{"ruleId":"172","severity":1,"message":"202","line":83,"column":6,"nodeType":"174","endLine":83,"endColumn":25,"suggestions":"203"},{"ruleId":"172","severity":1,"message":"188","line":83,"column":7,"nodeType":"189","endLine":83,"endColumn":24},{"ruleId":"196","severity":1,"message":"204","line":25,"column":10,"nodeType":"198","messageId":"199","endLine":25,"endColumn":20},{"ruleId":"172","severity":1,"message":"180","line":36,"column":22,"nodeType":"181","endLine":45,"endColumn":6},{"ruleId":"172","severity":1,"message":"184","line":55,"column":6,"nodeType":"174","endLine":55,"endColumn":21,"suggestions":"205"},{"ruleId":"172","severity":1,"message":"206","line":60,"column":5,"nodeType":"174","endLine":60,"endColumn":18,"suggestions":"207"},{"ruleId":"172","severity":1,"message":"208","line":71,"column":6,"nodeType":"174","endLine":71,"endColumn":13,"suggestions":"209"},{"ruleId":"172","severity":1,"message":"180","line":40,"column":20,"nodeType":"181","endLine":47,"endColumn":4},{"ruleId":"172","severity":1,"message":"184","line":57,"column":5,"nodeType":"174","endLine":57,"endColumn":20,"suggestions":"210"},{"ruleId":"172","severity":1,"message":"206","line":62,"column":5,"nodeType":"174","endLine":62,"endColumn":18,"suggestions":"211"},{"ruleId":"196","severity":1,"message":"212","line":16,"column":5,"nodeType":"198","messageId":"199","endLine":16,"endColumn":39},{"ruleId":"196","severity":1,"message":"213","line":24,"column":22,"nodeType":"198","messageId":"199","endLine":24,"endColumn":35},{"ruleId":"196","severity":1,"message":"214","line":25,"column":21,"nodeType":"198","messageId":"199","endLine":25,"endColumn":32},{"ruleId":"196","severity":1,"message":"215","line":26,"column":22,"nodeType":"198","messageId":"199","endLine":26,"endColumn":35},{"ruleId":"172","severity":1,"message":"180","line":43,"column":22,"nodeType":"181","endLine":52,"endColumn":6},{"ruleId":"172","severity":1,"message":"216","line":61,"column":6,"nodeType":"174","endLine":61,"endColumn":21,"suggestions":"217"},{"ruleId":"172","severity":1,"message":"206","line":66,"column":5,"nodeType":"174","endLine":66,"endColumn":18,"suggestions":"218"},{"ruleId":"172","severity":1,"message":"208","line":77,"column":6,"nodeType":"174","endLine":77,"endColumn":52,"suggestions":"219"},{"ruleId":"196","severity":1,"message":"220","line":4,"column":10,"nodeType":"198","messageId":"199","endLine":4,"endColumn":16},{"ruleId":"172","severity":1,"message":"193","line":41,"column":6,"nodeType":"174","endLine":41,"endColumn":16,"suggestions":"221"},{"ruleId":"172","severity":1,"message":"182","line":47,"column":6,"nodeType":"174","endLine":47,"endColumn":38,"suggestions":"222"},{"ruleId":"172","severity":1,"message":"184","line":52,"column":6,"nodeType":"174","endLine":52,"endColumn":29,"suggestions":"223"},{"ruleId":"196","severity":1,"message":"224","line":11,"column":16,"nodeType":"198","messageId":"199","endLine":11,"endColumn":27},{"ruleId":"196","severity":1,"message":"224","line":2,"column":16,"nodeType":"198","messageId":"199","endLine":2,"endColumn":27},{"ruleId":"225","severity":1,"message":"226","line":1,"column":42,"nodeType":"227","messageId":"228","endLine":1,"endColumn":43,"suggestions":"229"},{"ruleId":"225","severity":1,"message":"230","line":1,"column":54,"nodeType":"227","messageId":"228","endLine":1,"endColumn":55,"suggestions":"231"},{"ruleId":"225","severity":1,"message":"232","line":1,"column":63,"nodeType":"227","messageId":"228","endLine":1,"endColumn":64,"suggestions":"233"},{"ruleId":"225","severity":1,"message":"234","line":1,"column":72,"nodeType":"227","messageId":"228","endLine":1,"endColumn":73,"suggestions":"235"},{"ruleId":"225","severity":1,"message":"234","line":1,"column":84,"nodeType":"227","messageId":"228","endLine":1,"endColumn":85,"suggestions":"236"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["237"],"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"Assignments to the 'requestOptions' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","React Hook useEffect has missing dependencies: 'auth' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["240"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["241"],"React Hook useEffect has missing dependencies: 'history' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["242"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression",["243"],["244"],["245"],"React Hook useEffect has a missing dependency: 'apiFetch'. Either include it or remove the dependency array.",["246"],["247"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["248"],"React Hook useEffect has missing dependencies: 'history', 'prevShiftUUID', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["249"],"'converting' is assigned a value but never used.",["250"],"React Hook useEffect has a missing dependency: 'convertImage'. Either include it or remove the dependency array.",["251"],"React Hook useEffect has missing dependencies: 'history' and 'stopTrain'. Either include them or remove the dependency array.",["252"],["253"],["254"],"'trainResponse' is assigned a value but never used.","'setBaseRemake' is assigned a value but never used.","'setMaskmage' is assigned a value but never used.","'setMaskRemake' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'converting'. Either include it or remove the dependency array.",["255"],["256"],["257"],"'Navbar' is defined but never used.",["258"],["259"],["260"],"'returnFetch' is defined but never used.","no-useless-escape","Unnecessary escape character: \\U.","Literal","unnecessaryEscape",["261","262"],"Unnecessary escape character: \\O.",["263","264"],"Unnecessary escape character: \\P.",["265","266"],"Unnecessary escape character: \\C.",["267","268"],["269","270"],{"desc":"271","fix":"272"},"no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"275","fix":"281"},{"desc":"277","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"293","fix":"299"},{"desc":"300","fix":"301"},{"desc":"293","fix":"302"},{"desc":"303","fix":"304"},{"desc":"283","fix":"305"},{"desc":"306","fix":"307"},{"desc":"275","fix":"308"},{"messageId":"309","fix":"310","desc":"311"},{"messageId":"312","fix":"313","desc":"314"},{"messageId":"309","fix":"315","desc":"311"},{"messageId":"312","fix":"316","desc":"314"},{"messageId":"309","fix":"317","desc":"311"},{"messageId":"312","fix":"318","desc":"314"},{"messageId":"309","fix":"319","desc":"311"},{"messageId":"312","fix":"320","desc":"314"},{"messageId":"309","fix":"321","desc":"311"},{"messageId":"312","fix":"322","desc":"314"},"Update the dependencies array to be: [auth, fetching]",{"range":"323","text":"324"},"Update the dependencies array to be: [auth, authenticating, props, registerResponse]",{"range":"325","text":"326"},"Update the dependencies array to be: [authenticatedResponse, props]",{"range":"327","text":"328"},"Update the dependencies array to be: [history, props]",{"range":"329","text":"330"},"Update the dependencies array to be: [auth, authenticating, loginResponse, props]",{"range":"331","text":"332"},{"range":"333","text":"328"},{"range":"334","text":"330"},"Update the dependencies array to be: [apiFetch, fetching]",{"range":"335","text":"336"},"Update the dependencies array to be: [props, registerResponse]",{"range":"337","text":"338"},"Update the dependencies array to be: [loadResponse, props]",{"range":"339","text":"340"},"Update the dependencies array to be: [history, prevShiftUUID, props]",{"range":"341","text":"342"},"Update the dependencies array to be: [props, trainResponse]",{"range":"343","text":"344"},"Update the dependencies array to be: [convertImage, imageString]",{"range":"345","text":"346"},"Update the dependencies array to be: [history, image, stopTrain]",{"range":"347","text":"348"},"Update the dependencies array to be: [props, shiftResponse]",{"range":"349","text":"350"},{"range":"351","text":"346"},"Update the dependencies array to be: [converting, trainResponse]",{"range":"352","text":"353"},{"range":"354","text":"346"},"Update the dependencies array to be: [baseImage, baseRemake, history, maskImage, maskRemake, stopTrain]",{"range":"355","text":"356"},{"range":"357","text":"336"},"Update the dependencies array to be: [auth, authenticating, logoutResponse, props]",{"range":"358","text":"359"},{"range":"360","text":"328"},"removeEscape",{"range":"361","text":"362"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"363","text":"364"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"365","text":"362"},{"range":"366","text":"364"},{"range":"367","text":"362"},{"range":"368","text":"364"},{"range":"369","text":"362"},{"range":"370","text":"364"},{"range":"371","text":"362"},{"range":"372","text":"364"},[2143,2153],"[auth, fetching]",[2138,2172],"[auth, authenticating, props, registerResponse]",[2309,2332],"[authenticatedResponse, props]",[2427,2450],"[history, props]",[2072,2103],"[auth, authenticating, loginResponse, props]",[2240,2263],[2358,2381],[888,898],"[apiFetch, fetching]",[1591,1609],"[props, registerResponse]",[2571,2585],"[loadResponse, props]",[2721,2740],"[history, prevShiftUUID, props]",[1973,1988],"[props, trainResponse]",[2065,2078],"[convertImage, imageString]",[2270,2277],"[history, image, stopTrain]",[1712,1727],"[props, shiftResponse]",[1803,1816],[2226,2241],"[converting, trainResponse]",[2318,2331],[2527,2573],"[baseImage, baseRemake, history, maskImage, maskRemake, stopTrain]",[1417,1427],[1563,1595],"[auth, authenticating, logoutResponse, props]",[1734,1757],[41,42],"",[41,41],"\\",[53,54],[53,53],[62,63],[62,62],[71,72],[71,71],[83,84],[83,83]]