[{"C:\\Coding\\Projects\\Shift Webapp\\src\\App.tsx":"1","C:\\Coding\\Projects\\Shift Webapp\\src\\reportWebVitals.ts":"2","C:\\Coding\\Projects\\Shift Webapp\\src\\index.tsx":"3","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Register.tsx":"4","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Login.tsx":"5","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Button\\Button.tsx":"6","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\TextBox\\TextBox.tsx":"7","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Checkbox\\Checkbox.tsx":"8","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Account.tsx":"9","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\ForgotPassword.tsx":"10","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\Navbar.tsx":"11","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Load\\Load.tsx":"12","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\Train.tsx":"13","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Shift\\Shift.tsx":"14","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Media\\Media.tsx":"15","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Image\\Image.tsx":"16","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Video\\Video.tsx":"17","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\MediaList\\MediaList.tsx":"18","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\AdvancedTrain.tsx":"19","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\FileDialog\\FileDialog.tsx":"20","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\UserElements.tsx":"21","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Fetch.tsx":"22","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Authenticate.tsx":"23","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\dragAndDrop.ts":"24","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Files.ts":"25","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Arrays.ts":"26","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Images.tsx":"27","C:\\Coding\\Projects\\Shift Webapp\\src\\Constants\\defaultMedia.tsx":"28"},{"size":4525,"mtime":1610131068590,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":1606695268610,"results":"31","hashOfConfig":"30"},{"size":501,"mtime":1607455320057,"results":"32","hashOfConfig":"30"},{"size":4311,"mtime":1610129797585,"results":"33","hashOfConfig":"30"},{"size":4404,"mtime":1610129754322,"results":"34","hashOfConfig":"30"},{"size":580,"mtime":1610064201558,"results":"35","hashOfConfig":"30"},{"size":658,"mtime":1609779161561,"results":"36","hashOfConfig":"30"},{"size":645,"mtime":1609779978263,"results":"37","hashOfConfig":"30"},{"size":1130,"mtime":1610119404144,"results":"38","hashOfConfig":"30"},{"size":2910,"mtime":1610119223301,"results":"39","hashOfConfig":"30"},{"size":1410,"mtime":1610055193056,"results":"40","hashOfConfig":"30"},{"size":5660,"mtime":1610124336963,"results":"41","hashOfConfig":"30"},{"size":3148,"mtime":1610132936124,"results":"42","hashOfConfig":"30"},{"size":3052,"mtime":1610132844279,"results":"43","hashOfConfig":"30"},{"size":1531,"mtime":1610130821931,"results":"44","hashOfConfig":"30"},{"size":507,"mtime":1609894222749,"results":"45","hashOfConfig":"30"},{"size":664,"mtime":1609894227238,"results":"46","hashOfConfig":"30"},{"size":1103,"mtime":1609894281598,"results":"47","hashOfConfig":"30"},{"size":4176,"mtime":1610132934690,"results":"48","hashOfConfig":"30"},{"size":869,"mtime":1609891206709,"results":"49","hashOfConfig":"30"},{"size":2642,"mtime":1610121607401,"results":"50","hashOfConfig":"30"},{"size":899,"mtime":1610130292795,"results":"51","hashOfConfig":"30"},{"size":1055,"mtime":1610080964274,"results":"52","hashOfConfig":"30"},{"size":556,"mtime":1610067717228,"results":"53","hashOfConfig":"30"},{"size":213,"mtime":1610067690532,"results":"54","hashOfConfig":"30"},{"size":169,"mtime":1610067728782,"results":"55","hashOfConfig":"30"},{"size":1210,"mtime":1610132860810,"results":"56","hashOfConfig":"30"},{"size":179,"mtime":1610067075616,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"1hd1ldu",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"61"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"61"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"61"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"61"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"61"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"61"},"C:\\Coding\\Projects\\Shift Webapp\\src\\App.tsx",["131"],"//Third Party Imports\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\nimport { BrowserRouter as Router,\n         Switch, Route } from \"react-router-dom\";\nimport { Container, Row, Col, Alert } from \"react-bootstrap\";\n\n//First Party Imports\nimport { IElevatedPageState } from \"./Interfaces/PageState\";\nimport { IAuthRequestReturn } from \"./Interfaces/Authenticate\"\nimport { Register } from \"./Modules/User/Register\";\nimport { Login } from \"./Modules/User/Login\";\nimport { Account } from './Modules/User/Account';\nimport { ForgotPassword } from \"./Modules/User/ForgotPassword\";\nimport { NavBar } from \"./Components/Navbar/Navbar\";\nimport { Load } from \"./Modules/Load/Load\"\nimport { Train } from \"./Modules/Train/Train\";\nimport { AdvancedTrain } from \"./Modules/Train/AdvancedTrain\";\nimport { Shift } from \"./Modules/Shift/Shift\";\nimport { Button } from \"./Components/Button/Button\";\nimport { useAuthenticate } from \"./Helpers/Authenticate\";\n\n\nexport default function App() {\n  const [authenticated, setAuthenticated] = useState(false)\n  const [shiftUUID, setShiftUUID] = useState(sessionStorage.getItem('shiftUUID') || \"\");\n  const [error, setError] = useState(new Error())\n  const [msg, setMsg] = useState(\"\");\n  const [showMsg, setShowMsg] = useState(false);\n\n  const [fetching, setFetching] = useState(true)\n  const [authenticatedResponse, setAuthenticatedResponse] = useState<IAuthRequestReturn>()\n\n  const pageState: IElevatedPageState = {shiftUUID: () => shiftUUID,\n                                         setShiftUUID: setShiftUUID,\n                                         setMsg: setMsg,\n                                         epochs: 10,\n                                         user: \"\",\n                                         authenticated: () => authenticated,\n                                         setAuthenticated: setAuthenticated,\n                                         setError: setError};\n  \n    \n  const auth = useAuthenticate(setFetching, setError, setAuthenticatedResponse)\n\n  useEffect(() => {\n    if(!fetching) return;\n    auth()\n  }, [fetching]);\n\n  useEffect(() => {\n    if(!authenticatedResponse) return;\n    setAuthenticated(authenticatedResponse!.authenticated)\n  }, [authenticatedResponse]);\n\n  useEffect(() => {\n    if(!msg) return;\n\n    setShowMsg(true);\n  }, [msg]);\n\n  useEffect(() => {\n    if(!shiftUUID) return;\n    sessionStorage.setItem(\"shiftUUID\", shiftUUID);\n  }, [shiftUUID]);\n\n  useEffect(() => {\n    if(!error) return;\n    console.error(error);\n  }, [error]);\n\n  return (\n    <Router>\n      <Container fluid className=\"flex h-100\">\n        <Row className=\"justify-content-center h-100\">\n          <Col>\n            <div className=\"h-100 d-flex flex-column\">\n              <Row className=\"justify-content-center\">\n                <NavBar {...pageState} key={`${authenticated}`}/>\n              </Row>\n\n              <Alert show={showMsg} variant=\"primary\">\n                <Row className=\"flex-grow-1\">\n                  <Col xs={9}>{msg}</Col>\n                  <Col xs={3}>\n                    <Button className=\"borderRadius-2 p-2 w-100\" onClick={() => {setShowMsg(false);setMsg(\"\")}}>Close</Button>\n                  </Col>\n                </Row>\n              </Alert>\n\n              <Switch>\n                <Route path=\"/register\">\n                  <Register {...pageState}></Register>\n                </Route>\n                <Route path=\"/login\">\n                  <Login {...pageState}></Login>\n                </Route>\n                <Route path=\"/account\">\n                  <Account {...pageState}></Account>\n                </Route>\n                <Route path=\"/forgotPassword\">\n                  <ForgotPassword {...pageState}></ForgotPassword>\n                </Route>\n                <Route path=\"/load\">\n                  <Load {...pageState}></Load>\n                </Route>\n                <Route path=\"/train\">\n                  <Train {...pageState}></Train>\n                </Route>\n                <Route path=\"/advancedTrain\">\n                  <AdvancedTrain {...pageState}></AdvancedTrain>\n                </Route>\n                <Route path=\"/shift\">\n                  <Shift {...pageState}></Shift>\n                </Route>\n                <Route path=\"/\">\n                  <Home />\n                </Route>\n              </Switch>\n\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}",["132","133"],"C:\\Coding\\Projects\\Shift Webapp\\src\\reportWebVitals.ts",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\index.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Register.tsx",["134","135","136","137","138"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { TextBox } from '../../Components/TextBox/TextBox';\r\nimport { useAuthenticate } from '../../Helpers/Authenticate';\r\nimport { useFetch } from '../../Helpers/Fetch';\r\nimport { IAuthRequestReturn } from '../../Interfaces/Authenticate';\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\n\r\n\r\ninterface registerRequestReturn {\r\n  msg: string\r\n}\r\n\r\n\r\nexport const Register = (props: IElevatedPageState) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [registerResponse, setRegisterResponse] = useState<registerRequestReturn>();\r\n  const [authenticating, setAuthenticating] = useState(false);\r\n  const [authenticatedResponse, setAuthenticatedResponse] = useState<IAuthRequestReturn>();\r\n\r\n  const history = useHistory();\r\n\r\n\r\n  let requestOptions: RequestInit = {};\r\n\r\n\r\n  const apiFetch = useFetch(setFetching, props.setError, setRegisterResponse, `/api/users/register`, () => requestOptions, registerResponse)\r\n  const auth = useAuthenticate(setAuthenticating, props.setError, setAuthenticatedResponse)\r\n\r\n\r\n  useEffect(() => {\r\n    if(!fetching) return;\r\n\r\n    if (password !== confirmPassword){\r\n      console.log(\"Passwords do not match\");\r\n      setFetching(false)\r\n      return;\r\n    }\r\n\r\n    requestOptions = {\r\n      method: 'POST',\r\n      credentials: \"include\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ username: username, password: password, email: email})\r\n    };\r\n\r\n    apiFetch()\r\n    setAuthenticating(true)\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if(!authenticating || !registerResponse) return;\r\n\r\n    props.setMsg(registerResponse!.msg);\r\n    auth()\r\n  }, [authenticating, registerResponse]);\r\n\r\n  useEffect(() => {\r\n    if(!authenticatedResponse) return;\r\n    props.setAuthenticated(authenticatedResponse.authenticated)\r\n  }, [authenticatedResponse]);\r\n\r\n  useEffect(() => {\r\n    if(!props.authenticated()) return;\r\n    history.push(\"/\")\r\n  }, [props.authenticated()]);\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <Row className=\"mt-auto mb-auto\">\r\n        <Col xs={3}></Col>\r\n        <Col xs={6}>\r\n          <Row className=\"justify-content-center\">\r\n            <h2>Sign Up</h2>\r\n          </Row>\r\n\r\n          <br/>\r\n\r\n          <Row>\r\n            <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"text\" placeholder=\"Username\" onBlur={(event) => setUsername(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"email\" placeholder=\"Email\" onBlur={(event) => setEmail(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"Password\" onBlur={(event) => setPassword(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"Confirm Password\" onBlur={(event) => setConfirmPassword(event.target.value)}/>\r\n          </Row>\r\n\r\n          <Row className=\"align-items-center\">\r\n            <Col xs={2}></Col>\r\n            <Col xs={8}>\r\n              <Button className=\"p-2 mt-4 mb-2 borderRadius-2 w-100\" disabled={fetching || authenticating} onClick={() => {setFetching(true)}}>Register &#10140;</Button>\r\n            </Col>\r\n            <Col xs={2}></Col>\r\n          </Row>\r\n\r\n          <br/>\r\n        </Col>\r\n        <Col xs={3}></Col>\r\n      </Row>\r\n\r\n      <Row className=\"mt-auto mb-3\">\r\n        <Col xs={4}></Col>\r\n        <Col xs={4}>\r\n          <Link to=\"/login\" className=\"w-100\">\r\n            <Button className=\"p-2 mb-2 borderRadius-2 w-100\">Already Have An Account?</Button>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={4}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Login.tsx",["139","140","141","142","143"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { TextBox } from '../../Components/TextBox/TextBox';\r\nimport { Checkbox } from '../../Components/Checkbox/Checkbox';\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { IAuthRequestReturn } from \"../../Interfaces/Authenticate\";\r\nimport { useFetch } from \"../../Helpers/Fetch\";\r\nimport { useAuthenticate } from '../../Helpers/Authenticate';\r\n\r\n\r\ninterface loginRequestReturn {\r\n  msg: string\r\n}\r\n\r\n\r\nexport const Login = (props: IElevatedPageState) => {\r\n  const [usernameOrEmail, setUsernameOrEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [loginResponse, setLoginResponse] = useState<loginRequestReturn>();\r\n  const [authenticating, setAuthenticating] = useState(false);\r\n  const [authenticatedResponse, setAuthenticatedResponse] = useState<IAuthRequestReturn>();\r\n\r\n  const history = useHistory();\r\n\r\n  let requestOptions: RequestInit = {};\r\n\r\n  const apiFetch = useFetch(setFetching, props.setError, setLoginResponse, `/api/users/login`, () => requestOptions, loginResponse);\r\n  const auth = useAuthenticate(setAuthenticating, props.setError, setAuthenticatedResponse);\r\n\r\n\r\n  useEffect(() => {\r\n    if(!fetching) return;\r\n\r\n    requestOptions = {\r\n      method: 'POST',\r\n      credentials: \"include\",\r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify({usernameOrEmail: usernameOrEmail,\r\n                            password: password,\r\n                            remember: rememberMe})\r\n    };\r\n\r\n    apiFetch()\r\n    setAuthenticating(true)\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if(!authenticating || !loginResponse) return;\r\n    props.setMsg(loginResponse!.msg)\r\n    auth()\r\n  }, [authenticating, loginResponse]);\r\n\r\n  useEffect(() => {\r\n    if(!authenticatedResponse) return;\r\n    props.setAuthenticated(authenticatedResponse.authenticated)\r\n  }, [authenticatedResponse]);\r\n\r\n  useEffect(() => {\r\n    if(!props.authenticated()) return;\r\n    history.push(\"/\")\r\n  }, [props.authenticated()]);\r\n\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <Row className=\"mt-auto mb-auto\">\r\n        <Col xs={3}></Col>\r\n        <Col xs={6}>\r\n          <Row className=\"justify-content-center\">\r\n            <h2>Login</h2>\r\n          </Row>\r\n\r\n          <br/>\r\n\r\n          <Row>\r\n            <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"text\" placeholder=\"Username/Email\" onBlur={(event) => setUsernameOrEmail(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n           <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"Password\" onBlur={(event) => setPassword(event.target.value)}/>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs={2}></Col>\r\n            <Col xs={8}>\r\n              <Button className=\"p-2 mt-4 mb-2 borderRadius-2 w-100\" disabled={fetching || authenticating} onClick={() => {setFetching(true)}}>Login &#10140;</Button>\r\n            </Col>\r\n            <Col xs={2}></Col>\r\n          </Row>\r\n\r\n          <br/>\r\n\r\n          <Row className=\"align-items-center\">\r\n            <Col xs={1}></Col>\r\n            <Col xs={3} className=\"pr-1 text-right\">\r\n              Remember Me\r\n            </Col>\r\n            <Col xs={1} className=\"p-2\">\r\n              <Checkbox checked={rememberMe} onChange={() => setRememberMe(!rememberMe)}/>\r\n            </Col>\r\n            <Col xs={2}></Col>\r\n            <Col xs={1}></Col>\r\n            <Col xs={3}>\r\n              <Link to=\"/forgotPassword\">Forgot Password?</Link>\r\n            </Col>\r\n            <Col xs={1}></Col>\r\n          </Row>\r\n\r\n          <br/>\r\n        </Col>\r\n        <Col xs={3}></Col>\r\n      </Row>\r\n\r\n      <Row className=\"mt-auto mb-3\">\r\n        <Col xs={4}></Col>\r\n        <Col xs={4}>\r\n          <Link to=\"/register\" className=\"w-100\">\r\n            <Button className=\"p-2 mb-2 borderRadius-2 w-100\">Don't Have An Account?</Button>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={4}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Button\\Button.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\TextBox\\TextBox.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Checkbox\\Checkbox.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Account.tsx",["144"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n//First Party Imports\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { useFetch } from \"../../Helpers/Fetch\";\r\n\r\n\r\ninterface accountRequestReturn {\r\n  username: string,\r\n}\r\n\r\n\r\nexport const Account = (props: IElevatedPageState) => {\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  const [fetching, setFetching] = useState(true);\r\n  const [accountResponse, setAccountResponse] = useState<accountRequestReturn>()\r\n\r\n  const requestOptions: RequestInit = {\r\n    method: 'GET',\r\n    credentials: \"include\",\r\n    headers: { 'Content-Type': 'application/json' }\r\n  };\r\n\r\n\r\n  const apiFetch = useFetch(setFetching, props.setError, setAccountResponse, `/api/users/account`, () => requestOptions, accountResponse)\r\n\r\n  useEffect(() => {\r\n    if(!fetching) return;\r\n    apiFetch()\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if(!accountResponse) return;\r\n    setUsername(accountResponse!.username);\r\n  }, [accountResponse]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <h2>{username}</h2>\r\n      <p>Your account page.</p>\r\n    </>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\ForgotPassword.tsx",["145","146"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n//First Party Imports\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { TextBox } from '../../Components/TextBox/TextBox';\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { useFetch } from \"../../Helpers/Fetch\";\r\n\r\n\r\ninterface resetPasswordRequestReturn {\r\n  msg: string\r\n}\r\n\r\n\r\nexport const ForgotPassword = (props: IElevatedPageState) => {\r\n\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [registerResponse, setRegisterResponse] = useState<resetPasswordRequestReturn>();\r\n\r\n  let requestOptions: RequestInit = {};\r\n\r\n\r\n  const apiFetch = useFetch(setFetching, props.setError, setRegisterResponse, `/api/users/resetPassword`, () => requestOptions, registerResponse)\r\n\r\n  useEffect(() => {\r\n    if(fetching) return;\r\n\r\n    if (password !== confirmPassword){\r\n      console.log(\"Passwords do not match\");\r\n      setFetching(false)\r\n      return;\r\n    }\r\n\r\n    requestOptions = {\r\n      method: 'POST',\r\n      credentials: \"include\",\r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify({currentPassword: currentPassword, password: password})\r\n    };\r\n\r\n    apiFetch()\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if(!registerResponse) return;\r\n    props.setMsg(registerResponse!.msg)\r\n  }, [registerResponse]);\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <Row className=\"mt-auto mb-auto\">\r\n        <Col xs={3}></Col>\r\n        <Col xs={6}>\r\n          <Row className=\"justify-content-center\">\r\n            <h2>Reset Password</h2>\r\n          </Row>\r\n\r\n          <br/>\r\n\r\n          <Row>\r\n            <TextBox className=\"m-2 p-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"Current Password\" onBlur={(event) => setCurrentPassword(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"m-2 p-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"New Password\" onBlur={(event) => setPassword(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"m-2 p-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"Confirm Password\" onBlur={(event) => setConfirmPassword(event.target.value)}/>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs={2}></Col>\r\n            <Col xs={8}>\r\n              <Button className=\"mt-3 m-2 p-2 borderRadius-2 w-100\" onClick={() => setFetching(true)}>Update &#10140;</Button>\r\n            </Col>\r\n            <Col xs={2}></Col>\r\n          </Row>\r\n\r\n          <br/>\r\n        </Col>\r\n        <Col xs={3}></Col>\r\n      </Row>\r\n\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\Navbar.tsx",["147","148"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\n\r\n//First Party Imports\r\nimport './Navbar.scss'\r\nimport Logo from '../../Assets/icon.png'\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { UserElements } from \"./UserElements\";\r\n\r\n\r\nexport const NavBar = (props: IElevatedPageState) => {\r\n  const imageStyle = {height: \"auto\", width: \"auto\", maxHeight: \"30px\", maxWidth: \"30px\"}\r\n\r\n\r\n  return (\r\n    <div className=\"neumorphic borderRadius-2 mx-2 mt-2 w-100\">\r\n      <Navbar sticky=\"top\" expand=\"lg\">\r\n        <Navbar.Brand>\r\n          <NavLink to=\"/\" className=\"pl-2 borderRadius-2\">\r\n            <img style={imageStyle} src={Logo} alt=\"Shift\"/>\r\n          </NavLink>\r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link>\r\n              <NavLink to=\"/load\" activeClassName=\"navSelected\" className=\"nav-link borderRadius-2\">\r\n                Load\r\n              </NavLink>\r\n            </Nav.Link>\r\n          </Nav>\r\n          <Nav className=\"justify-content-end\" key={`${props.authenticated}`}>\r\n            <UserElements {...props}/>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Load\\Load.tsx",["149","150","151","152"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { Media } from '../../Components/Media/Media';\r\nimport { MediaList } from \"../../Components/MediaList/MediaList\";\r\nimport { FileDialog } from \"../../Components/FileDialog/FileDialog\"\r\nimport { defaultVideo } from \"../../Constants/defaultMedia\";\r\nimport { dropFiles, allowDrop } from '../../Helpers/dragAndDrop';\r\nimport { fileListToList } from '../../Helpers/Files';\r\nimport { fillArray } from \"../../Helpers/Arrays\";\r\nimport { useFetch } from \"../../Helpers/Fetch\";\r\n\r\n\r\ninterface loadRequestReturn {\r\n  msg: string,\r\n  shiftUUID: string\r\n}\r\n\r\nconst ListOfFiles: File[] = [];\r\nconst ListOfDataType: string[] = [];\r\n\r\n\r\nexport const Load = (props: IElevatedPageState) => {\r\n  const [trainingDataTypes, setTrainingDataTypes] = useState(ListOfDataType);\r\n  const [files, setFiles] = useState(ListOfFiles);\r\n  const [baseFiles, setBaseFiles] = useState(ListOfFiles);\r\n  const [maskFiles, setMaskFiles] = useState(ListOfFiles);\r\n  const [baseVideo, setBaseVideo] = useState(defaultVideo);\r\n\r\n  const history = useHistory()\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [loadResponse, setLoadResponse] = useState<loadRequestReturn>();\r\n\r\n  const prevShiftUUID = sessionStorage[\"shiftUUID\"];\r\n  let requestOptions: RequestInit = {};\r\n  const requestHeaders = new Headers();\r\n\r\n\r\n  const apiFetch = useFetch(setFetching, props.setError, setLoadResponse, `/api/loadData`, () => requestOptions, loadResponse)\r\n\r\n  \r\n  useEffect(() => {\r\n    if(!fetching) return;\r\n\r\n    const data = new FormData();\r\n    requestOptions = {\r\n      method: 'POST',\r\n      headers: {},\r\n      credentials: \"include\",\r\n    };\r\n\r\n    for (var fileIndex = 0; fileIndex < files.length; fileIndex++){\r\n      data.append(`file${fileIndex}`, files[fileIndex]);\r\n    }\r\n    requestOptions.body = data;\r\n\r\n    requestHeaders.append('trainingDataTypes', JSON.stringify(trainingDataTypes));\r\n    requestOptions.headers = requestHeaders;\r\n\r\n    apiFetch()\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if(!loadResponse) return;\r\n    props.setShiftUUID(loadResponse!.shiftUUID)\r\n    props.setMsg(loadResponse!.msg);\r\n  }, [loadResponse]);\r\n\r\n  useEffect(() => {\r\n    if(!props.shiftUUID() || props.shiftUUID() === prevShiftUUID) return;\r\n    history.push(\"/train\");\r\n  }, [props.shiftUUID()]);\r\n\r\n  useEffect(() => {\r\n    setFiles([baseVideo, ...baseFiles, ...maskFiles]);\r\n    setTrainingDataTypes([...fillArray(\"base\", baseFiles.length+1), ...fillArray(\"mask\", maskFiles.length)])\r\n  }, [baseVideo, baseFiles, maskFiles]);\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <h4>Base Face</h4>\r\n      <Row>\r\n        <Col xs={2}></Col>\r\n        <Col xs={8} className=\"neumorphic borderRadius-2\">\r\n          <Row>\r\n            <Col xs={11}></Col>\r\n            <Col xs={1} >\r\n              <FileDialog className=\"pr-4\" id=\"baseVideoUpload\" onChange={(event) => setBaseVideo(event.target.files![0])}>&#x21c6;</FileDialog>\r\n            </Col>\r\n          </Row>\r\n          <Media className=\"borderRadius-2 p-2\" key={baseVideo.name} onDragOver={(event) => allowDrop(event)}\r\n                 onDrop={(event) => setBaseVideo(dropFiles(event)[0])} mediaSrc={baseVideo} mediaType=\"video/mp4\" droppable={true}/>\r\n        </Col>\r\n        <Col xs={2}></Col>\r\n      </Row>\r\n      <Row className=\"mt-4\">\r\n        <Col>\r\n          <h4>More Base</h4>\r\n          <div className=\"neumorphic borderRadius-2\">\r\n            <Row>\r\n              <Col xs={11}></Col>\r\n              <Col xs={1} >\r\n                <FileDialog className=\"pr-4\" id=\"baseFileUpload\" mutipleSelect={true} onChange={(event) => setBaseFiles((current) => [...current, ...fileListToList(event.target.files!)])}>&#43;</FileDialog>\r\n              </Col>\r\n            </Row>\r\n            <MediaList className=\"mt-2 p-3\" onDragOver={(event) => allowDrop(event)}\r\n                       onDrop={(event) => setBaseFiles([...baseFiles, ...dropFiles(event)])} elementsPerRow={2} key={baseFiles.length}>\r\n              {baseFiles.map((file) => (\r\n                <Media mediaSrc={file} mediaType=\"video/mp4\"/>\r\n              ))}\r\n            </MediaList>\r\n          </div>\r\n        </Col>\r\n        <Col>\r\n          <h4>Mask Face</h4>\r\n          <div className=\"neumorphic borderRadius-2\">\r\n            <Row>\r\n              <Col xs={11}></Col>\r\n              <Col xs={1} >\r\n                <FileDialog className=\"pr-4\" id=\"maskFileUpload\" mutipleSelect={true} onChange={(event) => setMaskFiles((current) => [...current, ...fileListToList(event.target.files!)])}>&#43;</FileDialog>\r\n              </Col>\r\n            </Row>\r\n            <MediaList className=\"mt-2 borderRadius-2 p-3\" onDragOver={(event) => allowDrop(event)}\r\n                       onDrop={(event) => setMaskFiles([...maskFiles, ...dropFiles(event)])} elementsPerRow={2} key={maskFiles.length}>\r\n              {maskFiles.map((file) => (\r\n                <Media mediaSrc={file} mediaType=\"video/mp4\"/>\r\n              ))}\r\n            </MediaList>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-2\">\r\n        <Col xs={2}></Col>\r\n        <Col xs={8}>\r\n          <Button className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" disabled={fetching} onClick={() => setFetching(true)}>Load</Button>\r\n        </Col>\r\n        <Col xs={2}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\Train.tsx",["153","154","155","156","157"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { ITrainRequestReturn } from \"../../Interfaces/Train\";\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { Media } from '../../Components/Media/Media';\r\nimport { defaultVideo } from \"../../Constants/defaultMedia\";\r\nimport { useFetch } from \"../../Helpers/Fetch\";\r\nimport { useConvertImage } from \"../../Helpers/Images\";\r\n\r\n\r\nexport const Train = (props: IElevatedPageState) => {\r\n  const [stopTrain, setStopTrain] = useState(false);\r\n  const [imageString, setImageString] = useState(\"\");\r\n  const [image, setImage] = useState(defaultVideo);\r\n\r\n  const history = useHistory()\r\n\r\n  const [fetching, setFetching] = useState(true);\r\n  const [trainResponse, setTrainResponse] = useState<ITrainRequestReturn>();\r\n  const [converting, setConverting] = useState(false);\r\n\r\n  let requestOptions: RequestInit = {};\r\n\r\n\r\n  const apiFetch = useFetch(setFetching, props.setError, setTrainResponse, `/api/train`, () => requestOptions, trainResponse)\r\n  const convertImage = useConvertImage(setConverting, props.setError, setImage, () => imageString);\r\n\r\n  useEffect(() => {\r\n    if(!fetching || stopTrain) return;\r\n\r\n    requestOptions = {\r\n      method: 'POST',\r\n      credentials: \"include\",\r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify({shiftUUID: props.shiftUUID(),\r\n                            usePTM: false,\r\n                            prebuiltShiftModel: \"\",\r\n                            epochs: props.epochs,\r\n                            trainType: 'basic'})\r\n    };\r\n\r\n    apiFetch()\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if(!trainResponse) return;\r\n\r\n    props.setMsg(trainResponse!.msg)\r\n    setImageString(trainResponse!.exhibit[0]);\r\n  }, [trainResponse]);\r\n\r\n  useEffect(() => {\r\n\t\tif(!imageString) return;\r\n\t\tconvertImage()\r\n\t}, [imageString]);\r\n\r\n  useEffect(() => {\r\n    if(stopTrain){\r\n      history.push(\"/shift\")\r\n    }\r\n\r\n    if(image === defaultVideo) return;\r\n    console.log(image)\r\n    console.log(\"Image Converted\")\r\n    setFetching(true)\r\n  }, [image])\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\" key={image.lastModified}>\r\n      <Row className=\"my-2\">\r\n        <Media className=\"neumorphic borderRadius-2 my-2 w-100 p-2\" mediaSrc={image} mediaType=\"video/mp4\"/>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={2}></Col>\r\n        <Col xs={4}>\r\n          <Link to=\"/advancedTrain\" className=\"w-100\">\r\n            <Button className=\"p-2 mt-2 mb-2 mr-4 borderRadius-2 w-100\" disabled={stopTrain} onClick={() => setStopTrain(true)}>Advanced View</Button>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={4}>\r\n          <Button className=\"p-2 mt-2 mb-2 ml-4 borderRadius-2 w-100\" disabled={stopTrain} onClick={() => setStopTrain(true)}>Stop Training</Button>\r\n        </Col>\r\n        <Col xs={2}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Shift\\Shift.tsx",["158","159","160"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n//First Party Imports\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { Media } from '../../Components/Media/Media';\r\nimport { defaultVideo } from \"../../Constants/defaultMedia\";\r\nimport { useFetch } from \"../../Helpers/Fetch\";\r\nimport { useConvertImage } from \"../../Helpers/Images\";\r\n\r\n\r\ninterface shiftRequestReturn {\r\n\tmsg: string,\r\n\ttestImage: string\r\n}\r\n\r\n\r\nexport const Shift = (props: IElevatedPageState) => {\r\n\tconst [image, setImage] = useState(defaultVideo);\r\n\tconst [imageString, setImageString] = useState(\"\");\r\n\r\n\tconst [fetching, setFetching] = useState(true);\r\n  const [shiftResponse, setShiftResponse] = useState<shiftRequestReturn>();\r\n  const [converting, setConverting] = useState(false);\r\n\r\n\tlet requestOptions: RequestInit = {};\r\n\r\n\r\n\tconst apiFetch = useFetch(setFetching, props.setError, setShiftResponse, `/api/inference`, () => requestOptions, shiftResponse)\r\n\tconst convertImage = useConvertImage(setConverting, props.setError, setImage, () => imageString);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!fetching) return;\r\n\r\n\t\trequestOptions = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tcredentials: \"include\",\r\n\t\t\theaders: { 'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({shiftUUID: props.shiftUUID(),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tusePTM: false,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprebuiltShiftModel: \"\"})\r\n\t\t}\r\n\r\n\t\t apiFetch()\r\n\t}, [fetching]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!shiftResponse) return;\r\n\r\n\t\tprops.setMsg(shiftResponse!.msg)\r\n\t\tsetImageString(shiftResponse!.testImage)\r\n\t}, [shiftResponse]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!imageString) return;\r\n\t\tconvertImage()\r\n\t}, [imageString]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(image === defaultVideo) return;\r\n\r\n\t\tconsole.log(\"Image Converted\")\r\n\t}, [image]);\r\n\r\n\r\n\treturn (\r\n\t\t<Container className=\"d-flex justify-content-center h-100 flex-column\" key={image.lastModified}>\r\n\t\t\t<Row className=\"mb-2\">\r\n\t\t\t\t<Media className=\"neumorphic borderRadius-2 p-2 my-2 w-100\" mediaSrc={image} mediaType=\"video/mp4\"/>\r\n\t\t\t</Row>\r\n\t\t\t<Row className=\"my-3\">\r\n\t\t\t\t<Media className=\"neumorphic borderRadius-2 p-2 my-2 w-100\" mediaSrc={defaultVideo} mediaType=\"video/mp4\"/>\r\n\t\t\t</Row>\r\n\t\t\t<Row className=\"my-2\">\r\n\t\t\t\t<Col xs={1}></Col>\r\n\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t<Link to=\"/train\" className=\"w-100\">\r\n            <Button className=\"borderRadius-2 p-2 mr-4 w-100\" disabled={fetching || converting}>&#x2190; Train More</Button>\r\n          </Link>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t<Link to=\"/load\" className=\"w-100\">\r\n            <Button className=\"borderRadius-2 p-2 ml-4 w-100\" disabled={fetching || converting}>Shift Again &#x21ba;</Button>\r\n          </Link>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={1}></Col>\r\n\t\t\t\t<Col xs={5}>\r\n\t\t\t\t\t<Button className=\"borderRadius-2 p-2 w-100\" disabled={fetching || converting}>Share</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={1}></Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Media\\Media.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Image\\Image.tsx",[],["161","162"],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Video\\Video.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\MediaList\\MediaList.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\AdvancedTrain.tsx",["163","164","165","166","167","168","169","170"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { ITrainRequestReturn } from \"../../Interfaces/Train\";\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { Media } from '../../Components/Media/Media';\r\nimport { defaultVideo } from \"../../Constants/defaultMedia\";\r\nimport { useFetch } from \"../../Helpers/Fetch\";\r\nimport { useConvertImage } from \"../../Helpers/Images\";\r\n\r\n\r\nlet trainResponse: ITrainRequestReturn = {msg: \"\", exhibit: []}\r\n\r\n\r\nexport const AdvancedTrain = (props: IElevatedPageState) => {\r\n  const [stopTrain, setStopTrain] = useState(false);\r\n\r\n  const [imageString, setImageString] = useState(\"\");\r\n  const [baseImage, setBaseImage] = useState(defaultVideo);\r\n  const [baseRemake, setBaseRemake] = useState(defaultVideo);\r\n  const [maskImage, setMaskmage] = useState(defaultVideo);\r\n  const [maskRemake, setMaskRemake] = useState(defaultVideo);\r\n\r\n  const history = useHistory()\r\n\r\n  const [fetching, setFetching] = useState(true);\r\n  const [trainResponse, setTrainResponse] = useState<ITrainRequestReturn>();\r\n  const [converting, setConverting] = useState(false);\r\n\r\n  let requestOptions: RequestInit = {};\r\n\r\n\r\n  const apiFetch = useFetch(setFetching, props.setError, setTrainResponse, `/api/train`, () => requestOptions, trainResponse)\r\n  const convertImage = useConvertImage(setConverting, props.setError, setBaseImage, () => imageString);\r\n\r\n  useEffect(() => {\r\n    if(!fetching || stopTrain) return;\r\n\r\n    requestOptions = {\r\n      method: 'POST',\r\n      credentials: \"include\",\r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify({shiftUUID: props.shiftUUID(),\r\n                            usePTM: false,\r\n                            prebuiltShiftModel: \"\",\r\n                            epochs: props.epochs,\r\n                            trainType: 'basic'})\r\n    };\r\n\r\n    apiFetch()\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if(!converting || !trainResponse) return;\r\n\r\n    setImageString(trainResponse.exhibit[0]);\r\n  }, [trainResponse]);\r\n\r\n  useEffect(() => {\r\n\t\tif(!imageString) return;\r\n\t\tconvertImage()\r\n\t}, [imageString]);\r\n\r\n  useEffect(() => {\r\n    if(baseImage === defaultVideo) return;\r\n\r\n    if(stopTrain){\r\n      history.push(\"/shift\")\r\n    }\r\n\r\n    console.log(\"Image Converted\")\r\n    setFetching(true)\r\n  }, [baseImage, baseRemake, maskImage, maskRemake])\r\n\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\" key={baseImage.lastModified}>\r\n      <Row>\r\n        <Col className=\"my-2 px-2\" xs={6}>\r\n          <Row className=\"my-2 ml-4 py-2\">\r\n            <Media className=\"neumorphic borderRadius-2 my-1 w-100 p-2\" mediaSrc={baseImage} mediaType=\"video/mp4\"/>\r\n          </Row>\r\n          <Row className=\"my-2 ml-4 py-2\">\r\n            <Media className=\"neumorphic borderRadius-2 my-1 w-100 p-2\" mediaSrc={defaultVideo} mediaType=\"video/mp4\"/>\r\n          </Row>\r\n        </Col>\r\n        <Col className=\"my-2 px-2\" xs={6}>\r\n          <Row className=\"my-2 ml-4 py-2\">\r\n            <Media className=\"neumorphic borderRadius-2 my-1 w-100 p-2\" mediaSrc={defaultVideo} mediaType=\"video/mp4\"/>\r\n          </Row>\r\n          <Row className=\"my-2 ml-4 py-2\">\r\n            <Media className=\"neumorphic borderRadius-2 my-1 w-100 p-2\" mediaSrc={defaultVideo} mediaType=\"video/mp4\"/>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={2}></Col>\r\n        <Col xs={4} className=\"m-2\">\r\n          <Link to=\"/train\" className=\"w-100\">\r\n            <Button className=\"borderRadius-2 p-2 mr-2 w-100\" disabled={converting && fetching} onClick={() => setStopTrain(true)}>Basic View</Button>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={4} className=\"m-2\">\r\n          <Button className=\"borderRadius-2 p-2 ml-2 w-100\" disabled={stopTrain && fetching} onClick={() => setStopTrain(true)}>Stop Training</Button>\r\n        </Col>\r\n        <Col xs={2}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\FileDialog\\FileDialog.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\UserElements.tsx",["171","172","173","174"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\n\r\n//First Party Imports\r\nimport './Navbar.scss'\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { useFetch } from \"../../Helpers/Fetch\";\r\nimport { useAuthenticate } from '../../Helpers/Authenticate';\r\nimport { IAuthRequestReturn } from '../../Interfaces/Authenticate';\r\n\r\n\r\ninterface logoutRequestReturn {\r\n  msg: string\r\n}\r\n\r\n\r\nexport const UserElements = (props: IElevatedPageState) => {\r\n  const [authenticating, setAuthenticating] = useState(false);\r\n  const [authenticatedResponse, setAuthenticatedResponse] = useState<IAuthRequestReturn>()\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [logoutResponse, setLogoutResponse] = useState<logoutRequestReturn>();\r\n\r\n  const requestOptions: RequestInit = {\r\n    method: 'GET',\r\n    credentials: \"include\",\r\n    headers: { 'Content-Type': 'application/json'}\r\n  };\r\n\r\n  const auth = useAuthenticate(setAuthenticating, props.setError, setAuthenticatedResponse)\r\n  const apiFetch = useFetch(setFetching, props.setError, setLogoutResponse, `/api/users/logout`, () => requestOptions, logoutResponse)\r\n\r\n  useEffect(() => {\r\n    if(!fetching) return;\r\n    apiFetch()\r\n    setAuthenticating(true)\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if (!authenticating || !logoutResponse) return;\r\n    props.setMsg(logoutResponse!.msg)\r\n    auth()\r\n  }, [authenticating, logoutResponse]);\r\n\r\n  useEffect(() => {\r\n    if (!authenticatedResponse) return;\r\n    props.setAuthenticated(authenticatedResponse!.authenticated)\r\n  }, [authenticatedResponse]);\r\n\r\n\r\n  if(props.authenticated()){\r\n    return (\r\n      <>\r\n      <Nav.Link>\r\n        <NavLink to=\"/account\" activeClassName=\"navSelected\" className=\"nav-link borderRadius-2\">\r\n          Account\r\n        </NavLink>\r\n      </Nav.Link>\r\n      <Nav.Link>\r\n        <Button className=\"neumorphic borderRadius-2 py-2 px-3 w-100\" onClick={() => setFetching(true)} disabled={fetching || authenticating}>\r\n          Logout\r\n        </Button>\r\n      </Nav.Link>\r\n      </>\r\n    );\r\n  }\r\n  else{\r\n    return (\r\n      <>\r\n      <Nav.Link>\r\n        <NavLink to=\"/login\" activeClassName=\"navSelected\" className=\"nav-link borderRadius-2\">\r\n          Login\r\n        </NavLink>\r\n      </Nav.Link>\r\n      <Nav.Link>\r\n        <NavLink to=\"/register\" activeClassName=\"navSelected\" className=\"nav-link borderRadius-2\">\r\n          Register\r\n        </NavLink>\r\n      </Nav.Link>\r\n      </>\r\n    );\r\n  }\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Fetch.tsx",["175","176"],"//Third Party Imports\r\nimport React, { useEffect } from 'react';\r\n\r\n\r\nasync function returnFetch(url: string, options: RequestInit){\r\n  return await fetch(url, options)\r\n}\r\n\r\nexport function useFetch<T>(setLoading: React.Dispatch<React.SetStateAction<boolean>>,\r\n                            setError: React.Dispatch<React.SetStateAction<Error>>,\r\n                            setData: React.Dispatch<React.SetStateAction<T>>,\r\n                            url: string, requestOptions: () => RequestInit,\r\n                            defaultResponse: T): () => Promise<void>{\r\n\r\n  async function call(){\r\n    setLoading(true);\r\n\r\n    try{\r\n      const response = await fetch(url, requestOptions());\r\n      const json = await response.json();\r\n\r\n      setData(json);\r\n      setLoading(false);\r\n    }\r\n    catch (error){\r\n      setLoading(false);\r\n      setError(error);\r\n    }\r\n  }\r\n\r\n  return call\r\n}\r\n","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Authenticate.tsx",["177","178"],"//Third Party Imports\r\nimport React, { useEffect } from 'react';\r\n\r\n//First Party Imports\r\nimport { IAuthRequestReturn } from '../Interfaces/Authenticate'\r\n\r\n\r\nconst authRequestOptions: RequestInit = {\r\n  method: 'GET',\r\n  credentials: \"include\",\r\n  headers: { 'Content-Type': 'application/json' }\r\n};\r\n\r\nasync function returnFetch(url: string, options: RequestInit){\r\n  return await fetch(url, options)\r\n}\r\n\r\nexport function useAuthenticate(setLoading: React.Dispatch<React.SetStateAction<boolean>>,\r\n                                setError: React.Dispatch<React.SetStateAction<Error>>,\r\n                                setData: React.Dispatch<React.SetStateAction<IAuthRequestReturn | undefined>>){\r\n\r\n  async function call(){\r\n    setLoading(true);\r\n\r\n    try{\r\n      const response = await fetch(`/api/users/isAuthenticated`, authRequestOptions);\r\n      const json = await response.json();\r\n\r\n      setData(json);\r\n      setLoading(false);\r\n    }\r\n    catch (error){\r\n      setLoading(false);\r\n      setError(error);\r\n    }\r\n  }\r\n\r\n  return call\r\n}\r\n","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\dragAndDrop.ts",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Files.ts",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Arrays.ts",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Images.tsx",["179"],"//Third Party Imports\r\nimport React, { useEffect } from 'react';\r\n\r\n\r\nexport function useConvertImage(setLoading: React.Dispatch<React.SetStateAction<boolean>>,\r\n                                setError: React.Dispatch<React.SetStateAction<Error>>,\r\n                                setData: React.Dispatch<React.SetStateAction<File>>,\r\n                                imageString: () => string){\r\n\r\n  async function call(){\r\n    setLoading(true);\r\n\r\n    try{\r\n      const sliceSize = 512\r\n      const byteCharacters = atob(imageString());\r\n      const byteArrays = [];\r\n\r\n      for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n        const slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n        const byteNumbers = new Array(slice.length);\r\n        for (let i = 0; i < slice.length; i++) {\r\n          byteNumbers[i] = slice.charCodeAt(i);\r\n        }\r\n\r\n        const byteArray = new Uint8Array(byteNumbers);\r\n        byteArrays.push(byteArray);\r\n      }\r\n      const file = new File(byteArrays, \"image\");\r\n\r\n      setData(file);\r\n      setLoading(false);\r\n    }\r\n    catch (error){\r\n      setLoading(false);\r\n      setError(error);\r\n    }\r\n  }\r\n\r\n  return call\r\n}\r\n\r\n","C:\\Coding\\Projects\\Shift Webapp\\src\\Constants\\defaultMedia.tsx",["180","181","182","183","184"],"export const defaultVideo = new File(['C:\\Users\\naper\\OneDrive\\Pictures\\Camera Roll\\ChrisHemsworthMotivation.mp4'], 'chris.mp4', {\"type\": \"video/mp4\"}) //Check empty constructor\r\n",{"ruleId":"185","severity":1,"message":"186","line":50,"column":6,"nodeType":"187","endLine":50,"endColumn":16,"suggestions":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"185","severity":1,"message":"193","line":50,"column":22,"nodeType":"194","endLine":55,"endColumn":6},{"ruleId":"185","severity":1,"message":"195","line":66,"column":6,"nodeType":"187","endLine":66,"endColumn":40,"suggestions":"196"},{"ruleId":"185","severity":1,"message":"197","line":71,"column":6,"nodeType":"187","endLine":71,"endColumn":29,"suggestions":"198"},{"ruleId":"185","severity":1,"message":"199","line":76,"column":6,"nodeType":"187","endLine":76,"endColumn":29,"suggestions":"200"},{"ruleId":"185","severity":1,"message":"201","line":76,"column":7,"nodeType":"202","endLine":76,"endColumn":28},{"ruleId":"185","severity":1,"message":"193","line":42,"column":22,"nodeType":"194","endLine":49,"endColumn":6},{"ruleId":"185","severity":1,"message":"195","line":59,"column":6,"nodeType":"187","endLine":59,"endColumn":37,"suggestions":"203"},{"ruleId":"185","severity":1,"message":"197","line":64,"column":6,"nodeType":"187","endLine":64,"endColumn":29,"suggestions":"204"},{"ruleId":"185","severity":1,"message":"199","line":69,"column":6,"nodeType":"187","endLine":69,"endColumn":29,"suggestions":"205"},{"ruleId":"185","severity":1,"message":"201","line":69,"column":7,"nodeType":"202","endLine":69,"endColumn":28},{"ruleId":"185","severity":1,"message":"206","line":32,"column":6,"nodeType":"187","endLine":32,"endColumn":16,"suggestions":"207"},{"ruleId":"185","severity":1,"message":"193","line":40,"column":22,"nodeType":"194","endLine":45,"endColumn":6},{"ruleId":"185","severity":1,"message":"197","line":53,"column":6,"nodeType":"187","endLine":53,"endColumn":24,"suggestions":"208"},{"ruleId":"209","severity":1,"message":"210","line":2,"column":17,"nodeType":"211","messageId":"212","endLine":2,"endColumn":25},{"ruleId":"209","severity":1,"message":"213","line":2,"column":27,"nodeType":"211","messageId":"212","endLine":2,"endColumn":36},{"ruleId":"185","severity":1,"message":"193","line":52,"column":22,"nodeType":"194","endLine":56,"endColumn":6},{"ruleId":"185","severity":1,"message":"197","line":73,"column":6,"nodeType":"187","endLine":73,"endColumn":20,"suggestions":"214"},{"ruleId":"185","severity":1,"message":"215","line":78,"column":6,"nodeType":"187","endLine":78,"endColumn":25,"suggestions":"216"},{"ruleId":"185","severity":1,"message":"201","line":78,"column":7,"nodeType":"202","endLine":78,"endColumn":24},{"ruleId":"209","severity":1,"message":"217","line":25,"column":10,"nodeType":"211","messageId":"212","endLine":25,"endColumn":20},{"ruleId":"185","severity":1,"message":"193","line":36,"column":22,"nodeType":"194","endLine":45,"endColumn":6},{"ruleId":"185","severity":1,"message":"197","line":55,"column":6,"nodeType":"187","endLine":55,"endColumn":21,"suggestions":"218"},{"ruleId":"185","severity":1,"message":"219","line":60,"column":5,"nodeType":"187","endLine":60,"endColumn":18,"suggestions":"220"},{"ruleId":"185","severity":1,"message":"221","line":71,"column":6,"nodeType":"187","endLine":71,"endColumn":13,"suggestions":"222"},{"ruleId":"185","severity":1,"message":"193","line":40,"column":20,"nodeType":"194","endLine":47,"endColumn":4},{"ruleId":"185","severity":1,"message":"197","line":57,"column":5,"nodeType":"187","endLine":57,"endColumn":20,"suggestions":"223"},{"ruleId":"185","severity":1,"message":"219","line":62,"column":5,"nodeType":"187","endLine":62,"endColumn":18,"suggestions":"224"},{"ruleId":"189","replacedBy":"225"},{"ruleId":"191","replacedBy":"226"},{"ruleId":"209","severity":1,"message":"227","line":16,"column":5,"nodeType":"211","messageId":"212","endLine":16,"endColumn":39},{"ruleId":"209","severity":1,"message":"228","line":24,"column":22,"nodeType":"211","messageId":"212","endLine":24,"endColumn":35},{"ruleId":"209","severity":1,"message":"229","line":25,"column":21,"nodeType":"211","messageId":"212","endLine":25,"endColumn":32},{"ruleId":"209","severity":1,"message":"230","line":26,"column":22,"nodeType":"211","messageId":"212","endLine":26,"endColumn":35},{"ruleId":"185","severity":1,"message":"193","line":43,"column":22,"nodeType":"194","endLine":52,"endColumn":6},{"ruleId":"185","severity":1,"message":"231","line":61,"column":6,"nodeType":"187","endLine":61,"endColumn":21,"suggestions":"232"},{"ruleId":"185","severity":1,"message":"219","line":66,"column":5,"nodeType":"187","endLine":66,"endColumn":18,"suggestions":"233"},{"ruleId":"185","severity":1,"message":"221","line":77,"column":6,"nodeType":"187","endLine":77,"endColumn":52,"suggestions":"234"},{"ruleId":"209","severity":1,"message":"235","line":4,"column":10,"nodeType":"211","messageId":"212","endLine":4,"endColumn":16},{"ruleId":"185","severity":1,"message":"206","line":41,"column":6,"nodeType":"187","endLine":41,"endColumn":16,"suggestions":"236"},{"ruleId":"185","severity":1,"message":"195","line":47,"column":6,"nodeType":"187","endLine":47,"endColumn":38,"suggestions":"237"},{"ruleId":"185","severity":1,"message":"197","line":52,"column":6,"nodeType":"187","endLine":52,"endColumn":29,"suggestions":"238"},{"ruleId":"209","severity":1,"message":"213","line":2,"column":17,"nodeType":"211","messageId":"212","endLine":2,"endColumn":26},{"ruleId":"209","severity":1,"message":"239","line":5,"column":16,"nodeType":"211","messageId":"212","endLine":5,"endColumn":27},{"ruleId":"209","severity":1,"message":"213","line":2,"column":17,"nodeType":"211","messageId":"212","endLine":2,"endColumn":26},{"ruleId":"209","severity":1,"message":"239","line":14,"column":16,"nodeType":"211","messageId":"212","endLine":14,"endColumn":27},{"ruleId":"209","severity":1,"message":"213","line":2,"column":17,"nodeType":"211","messageId":"212","endLine":2,"endColumn":26},{"ruleId":"240","severity":1,"message":"241","line":1,"column":42,"nodeType":"242","messageId":"243","endLine":1,"endColumn":43,"suggestions":"244"},{"ruleId":"240","severity":1,"message":"245","line":1,"column":54,"nodeType":"242","messageId":"243","endLine":1,"endColumn":55,"suggestions":"246"},{"ruleId":"240","severity":1,"message":"247","line":1,"column":63,"nodeType":"242","messageId":"243","endLine":1,"endColumn":64,"suggestions":"248"},{"ruleId":"240","severity":1,"message":"249","line":1,"column":72,"nodeType":"242","messageId":"243","endLine":1,"endColumn":73,"suggestions":"250"},{"ruleId":"240","severity":1,"message":"249","line":1,"column":84,"nodeType":"242","messageId":"243","endLine":1,"endColumn":85,"suggestions":"251"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["252"],"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"Assignments to the 'requestOptions' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","React Hook useEffect has missing dependencies: 'auth' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["255"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["256"],"React Hook useEffect has missing dependencies: 'history' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["257"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression",["258"],["259"],["260"],"React Hook useEffect has a missing dependency: 'apiFetch'. Either include it or remove the dependency array.",["261"],["262"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["263"],"React Hook useEffect has missing dependencies: 'history', 'prevShiftUUID', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["264"],"'converting' is assigned a value but never used.",["265"],"React Hook useEffect has a missing dependency: 'convertImage'. Either include it or remove the dependency array.",["266"],"React Hook useEffect has missing dependencies: 'history' and 'stopTrain'. Either include them or remove the dependency array.",["267"],["268"],["269"],["253"],["254"],"'trainResponse' is assigned a value but never used.","'setBaseRemake' is assigned a value but never used.","'setMaskmage' is assigned a value but never used.","'setMaskRemake' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'converting'. Either include it or remove the dependency array.",["270"],["271"],["272"],"'Navbar' is defined but never used.",["273"],["274"],["275"],"'returnFetch' is defined but never used.","no-useless-escape","Unnecessary escape character: \\U.","Literal","unnecessaryEscape",["276","277"],"Unnecessary escape character: \\O.",["278","279"],"Unnecessary escape character: \\P.",["280","281"],"Unnecessary escape character: \\C.",["282","283"],["284","285"],{"desc":"286","fix":"287"},"no-global-assign","no-unsafe-negation",{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"290","fix":"296"},{"desc":"292","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"308","fix":"314"},{"desc":"315","fix":"316"},{"desc":"308","fix":"317"},{"desc":"318","fix":"319"},{"desc":"298","fix":"320"},{"desc":"321","fix":"322"},{"desc":"290","fix":"323"},{"messageId":"324","fix":"325","desc":"326"},{"messageId":"327","fix":"328","desc":"329"},{"messageId":"324","fix":"330","desc":"326"},{"messageId":"327","fix":"331","desc":"329"},{"messageId":"324","fix":"332","desc":"326"},{"messageId":"327","fix":"333","desc":"329"},{"messageId":"324","fix":"334","desc":"326"},{"messageId":"327","fix":"335","desc":"329"},{"messageId":"324","fix":"336","desc":"326"},{"messageId":"327","fix":"337","desc":"329"},"Update the dependencies array to be: [auth, fetching]",{"range":"338","text":"339"},"Update the dependencies array to be: [auth, authenticating, props, registerResponse]",{"range":"340","text":"341"},"Update the dependencies array to be: [authenticatedResponse, props]",{"range":"342","text":"343"},"Update the dependencies array to be: [history, props]",{"range":"344","text":"345"},"Update the dependencies array to be: [auth, authenticating, loginResponse, props]",{"range":"346","text":"347"},{"range":"348","text":"343"},{"range":"349","text":"345"},"Update the dependencies array to be: [apiFetch, fetching]",{"range":"350","text":"351"},"Update the dependencies array to be: [props, registerResponse]",{"range":"352","text":"353"},"Update the dependencies array to be: [loadResponse, props]",{"range":"354","text":"355"},"Update the dependencies array to be: [history, prevShiftUUID, props]",{"range":"356","text":"357"},"Update the dependencies array to be: [props, trainResponse]",{"range":"358","text":"359"},"Update the dependencies array to be: [convertImage, imageString]",{"range":"360","text":"361"},"Update the dependencies array to be: [history, image, stopTrain]",{"range":"362","text":"363"},"Update the dependencies array to be: [props, shiftResponse]",{"range":"364","text":"365"},{"range":"366","text":"361"},"Update the dependencies array to be: [converting, trainResponse]",{"range":"367","text":"368"},{"range":"369","text":"361"},"Update the dependencies array to be: [baseImage, baseRemake, history, maskImage, maskRemake, stopTrain]",{"range":"370","text":"371"},{"range":"372","text":"351"},"Update the dependencies array to be: [auth, authenticating, logoutResponse, props]",{"range":"373","text":"374"},{"range":"375","text":"343"},"removeEscape",{"range":"376","text":"377"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"378","text":"379"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"380","text":"377"},{"range":"381","text":"379"},{"range":"382","text":"377"},{"range":"383","text":"379"},{"range":"384","text":"377"},{"range":"385","text":"379"},{"range":"386","text":"377"},{"range":"387","text":"379"},[2139,2149],"[auth, fetching]",[2137,2171],"[auth, authenticating, props, registerResponse]",[2308,2331],"[authenticatedResponse, props]",[2426,2449],"[history, props]",[2072,2103],"[auth, authenticating, loginResponse, props]",[2240,2263],[2358,2381],[888,898],"[apiFetch, fetching]",[1590,1608],"[props, registerResponse]",[2434,2448],"[loadResponse, props]",[2584,2603],"[history, prevShiftUUID, props]",[1986,2001],"[props, trainResponse]",[2078,2091],"[convertImage, imageString]",[2305,2312],"[history, image, stopTrain]",[1725,1740],"[props, shiftResponse]",[1816,1829],[2239,2254],"[converting, trainResponse]",[2331,2344],[2540,2586],"[baseImage, baseRemake, history, maskImage, maskRemake, stopTrain]",[1417,1427],[1563,1595],"[auth, authenticating, logoutResponse, props]",[1734,1757],[41,42],"",[41,41],"\\",[53,54],[53,53],[62,63],[62,62],[71,72],[71,71],[83,84],[83,83]]