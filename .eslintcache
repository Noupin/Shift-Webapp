[{"C:\\Coding\\Projects\\Shift Webapp\\src\\App.tsx":"1","C:\\Coding\\Projects\\Shift Webapp\\src\\reportWebVitals.ts":"2","C:\\Coding\\Projects\\Shift Webapp\\src\\index.tsx":"3","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Register.tsx":"4","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Logout.tsx":"5","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Login.tsx":"6","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Button\\Button.tsx":"7","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\TextBox\\TextBox.tsx":"8","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Checkbox\\Checkbox.tsx":"9","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Account.tsx":"10","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\ForgotPassword.tsx":"11","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\Navbar.tsx":"12","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Load\\Load.tsx":"13","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\Train.tsx":"14","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Shift\\Shift.tsx":"15","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Media\\Media.tsx":"16","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Image\\Image.tsx":"17","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Video\\Video.tsx":"18","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\dragAndDrop.tsx":"19","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\MediaList\\MediaList.tsx":"20","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\AdvancedTrain.tsx":"21"},{"size":4571,"mtime":1609795145957,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1606695268610,"results":"24","hashOfConfig":"23"},{"size":501,"mtime":1607455320057,"results":"25","hashOfConfig":"23"},{"size":2974,"mtime":1609780892153,"results":"26","hashOfConfig":"23"},{"size":785,"mtime":1609781062767,"results":"27","hashOfConfig":"23"},{"size":3121,"mtime":1609780984446,"results":"28","hashOfConfig":"23"},{"size":581,"mtime":1609779389830,"results":"29","hashOfConfig":"23"},{"size":658,"mtime":1609779161561,"results":"30","hashOfConfig":"23"},{"size":645,"mtime":1609779978263,"results":"31","hashOfConfig":"23"},{"size":734,"mtime":1609550835414,"results":"32","hashOfConfig":"23"},{"size":2113,"mtime":1609779578905,"results":"33","hashOfConfig":"23"},{"size":1007,"mtime":1607531806969,"results":"34","hashOfConfig":"23"},{"size":2980,"mtime":1609801190022,"results":"35","hashOfConfig":"23"},{"size":1721,"mtime":1609795636504,"results":"36","hashOfConfig":"23"},{"size":2002,"mtime":1609799096079,"results":"37","hashOfConfig":"23"},{"size":1229,"mtime":1609796805509,"results":"38","hashOfConfig":"23"},{"size":513,"mtime":1609779963413,"results":"39","hashOfConfig":"23"},{"size":637,"mtime":1609780119815,"results":"40","hashOfConfig":"23"},{"size":650,"mtime":1609775682541,"results":"41","hashOfConfig":"23"},{"size":1281,"mtime":1609792338769,"results":"42","hashOfConfig":"23"},{"size":2401,"mtime":1609799852287,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1hd1ldu",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Coding\\Projects\\Shift Webapp\\src\\App.tsx",[],["94","95"],"C:\\Coding\\Projects\\Shift Webapp\\src\\reportWebVitals.ts",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\index.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Register.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Logout.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Login.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Button\\Button.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\TextBox\\TextBox.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Checkbox\\Checkbox.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Account.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\ForgotPassword.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\Navbar.tsx",["96","97","98","99","100"],"//Third Party Imports\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <>\r\n            <Nav>\r\n                <NavLink to=\"/\">\r\n                    <h1>Logo</h1>\r\n                </NavLink>\r\n                <Bars/>\r\n                <NavMenu>\r\n                    <NavLink to=\"/about\" activeStyle>\r\n                        About\r\n                    </NavLink>\r\n                    <NavLink to=\"/services\" activeStyle>\r\n                        Services\r\n                    </NavLink>\r\n                    <NavLink to=\"/contact-us\" activeStyle>\r\n                        Contact Us\r\n                    </NavLink>\r\n                    <NavLink to=\"/sign-up\" activeStyle>\r\n                        Sign Up\r\n                    </NavLink>\r\n                </NavMenu>\r\n                <NavBtn>\r\n                    <NavBtnLink to=\"/signin\">Sign In</NavBtnLink>\r\n                </NavBtn>\r\n            </Nav>\r\n        </>\r\n    );\r\n}",["101","102"],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Load\\Load.tsx",["103","104","105","106","107"],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\Train.tsx",["108"],"//Third Party Imports\r\nimport React, { useState } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { Media } from '../../Components/Media/Media';\r\n\r\n\r\ninterface trainRequestReturn {\r\n  msg: string\r\n}\r\n\r\nexport const Train = (props: IElevatedPageState) => {\r\n\r\n  const requestOptions: RequestInit = {\r\n    method: 'POST',\r\n    credentials: \"include\",\r\n    headers: { 'Content-Type': 'application/json'},\r\n    body: JSON.stringify({shiftUUID: props.shiftUUID,\r\n                          usePTM: false,\r\n                          prebuiltShiftModel: \"\"})\r\n  };\r\n\r\n  const trainShift = () => {\r\n    fetch(`/api/train`, requestOptions).then(res => res.json()).then((data: trainRequestReturn) => {\r\n      console.log(data);\r\n      props.setMsg(data.msg);\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <Row>\r\n        <Media className=\"neumorphic mt-2 mb-2 borderRadius-2\" mediaSrc=\"chris.mp4\" mediaType=\"video/mp4\"/>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={2}></Col>\r\n        <Col xs={4}>\r\n          <Link to=\"/advancedTrain\" className=\"w-100\">\r\n            <Button className=\"p-2 mt-2 mb-2 mr-4 borderRadius-2\">Advanced View</Button>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={4}>\r\n          <Button className=\"p-2 mt-2 mb-2 ml-4 borderRadius-2\" onClick={trainShift}>Shift</Button>\r\n        </Col>\r\n        <Col xs={2}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Shift\\Shift.tsx",["109","110"],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Media\\Media.tsx",["111"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n//First Party Imports\r\nimport { Image } from '../Image/Image';\r\nimport { Video } from '../Video/Video';\r\nimport { dropFiles, allowDrop } from '../../Helpers/dragAndDrop';\r\n\r\ninterface IMedia extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>{\r\n  mediaSrc: string\r\n  mediaType?: string\r\n}\r\n\r\nconst videoTypes: string[] = ['mp4', 'webm', 'ogg']\r\n\r\nexport const Media = (props: IMedia) => {\r\n  const {mediaSrc, mediaType, ...mediaProps} = props;\r\n  const cssClasses = mediaProps.className?.toString();\r\n\r\n  let element: JSX.Element\r\n  const [mediaSrcState, setMediaSrcState] = useState(mediaSrc);\r\n\r\n  if (videoTypes.indexOf(mediaSrcState.split('.').pop()!) !== -1){\r\n    element = <Video onDragOver={(event) => allowDrop(event)} onDrop={(event) => setMediaSrcState(dropFiles(event)[0].name)} videoSrc={mediaSrcState} videoType={mediaType!}/>;\r\n  }\r\n  else{\r\n    element = <Image onDragOver={(event) => allowDrop(event)} onDrop={(event) => setMediaSrcState(dropFiles(event)[0].name)} imageSrc={mediaSrcState}/>\r\n  }\r\n\r\n  return (\r\n    <div {...mediaProps} className={cssClasses}>\r\n      {element}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Image\\Image.tsx",["112","113","114"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n//First Party Imports\r\nimport './Image.scss';\r\n\r\ninterface IImage extends React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>{\r\n  imageSrc: string\r\n}\r\n\r\nexport const Image = (props: IImage) => {\r\n  const {imageSrc, ...imageProps} = props;\r\n  const cssClasses = imageProps.className?.toString();\r\n\r\n  return(\r\n    <img {...imageProps} className={cssClasses} src={props.imageSrc} alt=\"Image\"/>\r\n  );\r\n}\r\n","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Video\\Video.tsx",["115","116"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n//First Party Imports\r\nimport './Video.scss';\r\n\r\ninterface IVideo extends React.DetailedHTMLProps<React.VideoHTMLAttributes<HTMLVideoElement>, HTMLVideoElement>{\r\n  videoSrc: string\r\n  videoType: string\r\n}\r\n\r\nexport const Video = (props: IVideo) => {\r\n  const {videoSrc, videoType, ...videoProps} = props;\r\n  const cssClasses = videoProps.className?.toString();\r\n\r\n  return(\r\n    <video {...videoProps} className={cssClasses} controls>\r\n      <source src={videoSrc} type={videoType}/>\r\n      Your browser does not suppoer the video tag.\r\n    </video>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\dragAndDrop.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\MediaList\\MediaList.tsx",["117","118"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\n\r\ninterface IMediaList extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>{\r\n  elementsPerRow: number\r\n  insetNeumorphic: boolean\r\n  children: React.ReactNode\r\n}\r\n\r\nexport const MediaList = (props: IMediaList) =>{\r\n  const {elementsPerRow, insetNeumorphic, children, ...mediaListProps} = props;\r\n  let neumorphicType = \"neumorphic\";\r\n  if(insetNeumorphic){\r\n    neumorphicType = \"insetNeumorphic\"\r\n  }\r\n  const cssClasses = mediaListProps.className?.toString() + ` ${neumorphicType}`;\r\n  const [elements, setElements] = useState(React.Children.toArray(children));\r\n\r\n  let gridElements: React.ReactNode[][] = [[]]\r\n  let gridRow = 0;\r\n\r\n  for(let elementCoutner = 0; elementCoutner < elements.length; elementCoutner++){\r\n    if(elementCoutner % elementsPerRow === 0){\r\n      gridRow++;\r\n      gridElements.push([]);\r\n    }\r\n    gridElements[gridRow].push(elements[elementCoutner])\r\n  }\r\n\r\n\r\n  return (\r\n    <div {...mediaListProps} className={cssClasses}>\r\n      {gridElements.map((row, currentIndex) => (\r\n        <Row>\r\n          {row.map(element => (<Col>{element}</Col>))}\r\n        </Row>\r\n      ))}\r\n    </div>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\AdvancedTrain.tsx",["119"],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":2,"message":"125","line":9,"column":14,"nodeType":"126","endLine":9,"endColumn":17},{"ruleId":"124","severity":2,"message":"127","line":13,"column":18,"nodeType":"126","endLine":13,"endColumn":22},{"ruleId":"124","severity":2,"message":"128","line":14,"column":18,"nodeType":"126","endLine":14,"endColumn":25},{"ruleId":"124","severity":2,"message":"129","line":28,"column":18,"nodeType":"126","endLine":28,"endColumn":24},{"ruleId":"124","severity":2,"message":"130","line":29,"column":22,"nodeType":"126","endLine":29,"endColumn":32},{"ruleId":"120","replacedBy":"131"},{"ruleId":"122","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":4,"column":10,"nodeType":"135","messageId":"136","endLine":4,"endColumn":14},{"ruleId":"133","severity":1,"message":"137","line":23,"column":21,"nodeType":"135","messageId":"136","endLine":23,"endColumn":33},{"ruleId":"133","severity":1,"message":"138","line":24,"column":10,"nodeType":"135","messageId":"136","endLine":24,"endColumn":15},{"ruleId":"133","severity":1,"message":"139","line":24,"column":17,"nodeType":"135","messageId":"136","endLine":24,"endColumn":25},{"ruleId":"133","severity":1,"message":"140","line":25,"column":17,"nodeType":"135","messageId":"136","endLine":25,"endColumn":25},{"ruleId":"133","severity":1,"message":"141","line":2,"column":17,"nodeType":"135","messageId":"136","endLine":2,"endColumn":25},{"ruleId":"133","severity":1,"message":"142","line":2,"column":27,"nodeType":"135","messageId":"136","endLine":2,"endColumn":36},{"ruleId":"133","severity":1,"message":"138","line":19,"column":9,"nodeType":"135","messageId":"136","endLine":19,"endColumn":14},{"ruleId":"133","severity":1,"message":"142","line":2,"column":27,"nodeType":"135","messageId":"136","endLine":2,"endColumn":36},{"ruleId":"133","severity":1,"message":"141","line":2,"column":17,"nodeType":"135","messageId":"136","endLine":2,"endColumn":25},{"ruleId":"133","severity":1,"message":"142","line":2,"column":27,"nodeType":"135","messageId":"136","endLine":2,"endColumn":36},{"ruleId":"143","severity":1,"message":"144","line":16,"column":5,"nodeType":"145","endLine":16,"endColumn":83},{"ruleId":"133","severity":1,"message":"141","line":2,"column":17,"nodeType":"135","messageId":"136","endLine":2,"endColumn":25},{"ruleId":"133","severity":1,"message":"142","line":2,"column":27,"nodeType":"135","messageId":"136","endLine":2,"endColumn":36},{"ruleId":"133","severity":1,"message":"142","line":2,"column":27,"nodeType":"135","messageId":"136","endLine":2,"endColumn":36},{"ruleId":"133","severity":1,"message":"146","line":19,"column":20,"nodeType":"135","messageId":"136","endLine":19,"endColumn":31},{"ruleId":"133","severity":1,"message":"141","line":2,"column":17,"nodeType":"135","messageId":"136","endLine":2,"endColumn":25},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"react/jsx-no-undef","'Nav' is not defined.","JSXIdentifier","'Bars' is not defined.","'NavMenu' is not defined.","'NavBtn' is not defined.","'NavBtnLink' is not defined.",["147"],["148"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'setDataTypes' is assigned a value but never used.","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","'setFiles' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'setElements' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]