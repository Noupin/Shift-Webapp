[{"C:\\Coding\\Projects\\Shift Webapp\\src\\App.tsx":"1","C:\\Coding\\Projects\\Shift Webapp\\src\\reportWebVitals.ts":"2","C:\\Coding\\Projects\\Shift Webapp\\src\\index.tsx":"3","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Register.tsx":"4","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Login.tsx":"5","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Button\\Button.tsx":"6","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\TextBox\\TextBox.tsx":"7","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Checkbox\\Checkbox.tsx":"8","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Account.tsx":"9","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\ForgotPassword.tsx":"10","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\Navbar.tsx":"11","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Load\\Load.tsx":"12","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\Train.tsx":"13","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Shift\\Shift.tsx":"14","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Media\\Media.tsx":"15","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Image\\Image.tsx":"16","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Video\\Video.tsx":"17","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\MediaList\\MediaList.tsx":"18","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\AdvancedTrain.tsx":"19","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\FileDialog\\FileDialog.tsx":"20","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\UserElements.tsx":"21","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Fetch.tsx":"22","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Authenticate.tsx":"23","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\dragAndDrop.ts":"24","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Files.ts":"25","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Arrays.ts":"26","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Images.tsx":"27","C:\\Coding\\Projects\\Shift Webapp\\src\\Constants\\defaultMedia.tsx":"28"},{"size":4340,"mtime":1610079306564,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":1606695268610,"results":"31","hashOfConfig":"30"},{"size":501,"mtime":1607455320057,"results":"32","hashOfConfig":"30"},{"size":3365,"mtime":1610079220098,"results":"33","hashOfConfig":"30"},{"size":4020,"mtime":1610080067668,"results":"34","hashOfConfig":"30"},{"size":580,"mtime":1610064201558,"results":"35","hashOfConfig":"30"},{"size":658,"mtime":1609779161561,"results":"36","hashOfConfig":"30"},{"size":645,"mtime":1609779978263,"results":"37","hashOfConfig":"30"},{"size":1011,"mtime":1610079220098,"results":"38","hashOfConfig":"30"},{"size":2790,"mtime":1610079220098,"results":"39","hashOfConfig":"30"},{"size":1410,"mtime":1610055193056,"results":"40","hashOfConfig":"30"},{"size":5409,"mtime":1610079220098,"results":"41","hashOfConfig":"30"},{"size":3025,"mtime":1610079263196,"results":"42","hashOfConfig":"30"},{"size":2806,"mtime":1610079263196,"results":"43","hashOfConfig":"30"},{"size":1531,"mtime":1609894225899,"results":"44","hashOfConfig":"30"},{"size":507,"mtime":1609894222749,"results":"45","hashOfConfig":"30"},{"size":664,"mtime":1609894227238,"results":"46","hashOfConfig":"30"},{"size":1103,"mtime":1609894281598,"results":"47","hashOfConfig":"30"},{"size":4105,"mtime":1610079263196,"results":"48","hashOfConfig":"30"},{"size":869,"mtime":1609891206709,"results":"49","hashOfConfig":"30"},{"size":2507,"mtime":1610079284281,"results":"50","hashOfConfig":"30"},{"size":967,"mtime":1610079778743,"results":"51","hashOfConfig":"30"},{"size":1157,"mtime":1610079164061,"results":"52","hashOfConfig":"30"},{"size":556,"mtime":1610067717228,"results":"53","hashOfConfig":"30"},{"size":213,"mtime":1610067690532,"results":"54","hashOfConfig":"30"},{"size":169,"mtime":1610067728782,"results":"55","hashOfConfig":"30"},{"size":969,"mtime":1610079269570,"results":"56","hashOfConfig":"30"},{"size":179,"mtime":1610067075616,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1hd1ldu",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Coding\\Projects\\Shift Webapp\\src\\App.tsx",["122"],"C:\\Coding\\Projects\\Shift Webapp\\src\\reportWebVitals.ts",[],["123","124"],"C:\\Coding\\Projects\\Shift Webapp\\src\\index.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Register.tsx",["125"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { TextBox } from '../../Components/TextBox/TextBox';\r\nimport { useFetch } from '../../Helpers/Fetch';\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\n\r\n\r\ninterface registerRequestReturn {\r\n  msg: string\r\n}\r\n\r\n\r\nexport const Register = (props: IElevatedPageState) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [registerResponse, setRegisterResponse] = useState<registerRequestReturn>();\r\n\r\n  let requestOptions: RequestInit = {};\r\n\r\n\r\n  useFetch(() => fetching, setFetching, props.setError, setRegisterResponse, `/api/users/register`, () => requestOptions)\r\n\r\n\r\n  useEffect(() => {\r\n    if(fetching) return;\r\n\r\n    if (password !== confirmPassword){\r\n      console.log(\"Passwords do not match\");\r\n      setFetching(false)\r\n      return;\r\n    }\r\n\r\n    requestOptions = {\r\n      method: 'POST',\r\n      credentials: \"include\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ username: username, password: password, email: email})\r\n    };\r\n\r\n    props.setMsg(registerResponse!.msg);\r\n  }, [fetching]);\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <Row className=\"mt-auto mb-auto\">\r\n        <Col xs={3}></Col>\r\n        <Col xs={6}>\r\n          <Row className=\"justify-content-center\">\r\n            <h2>Sign Up</h2>\r\n          </Row>\r\n\r\n          <br/>\r\n\r\n          <Row>\r\n            <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"text\" placeholder=\"Username\" onBlur={(event) => setUsername(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"email\" placeholder=\"Email\" onBlur={(event) => setEmail(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"Password\" onBlur={(event) => setPassword(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"Confirm Password\" onBlur={(event) => setConfirmPassword(event.target.value)}/>\r\n          </Row>\r\n\r\n          <Row className=\"align-items-center\">\r\n            <Col xs={2}></Col>\r\n            <Col xs={8}>\r\n              <Button className=\"p-2 mt-4 mb-2 borderRadius-2 w-100\" onClick={() => {setFetching(true)}}>Register &#10140;</Button>\r\n            </Col>\r\n            <Col xs={2}></Col>\r\n          </Row>\r\n\r\n          <br/>\r\n        </Col>\r\n        <Col xs={3}></Col>\r\n      </Row>\r\n\r\n      <Row className=\"mt-auto mb-3\">\r\n        <Col xs={4}></Col>\r\n        <Col xs={4}>\r\n          <Link to=\"/login\" className=\"w-100\">\r\n            <Button className=\"p-2 mb-2 borderRadius-2 w-100\">Already Have An Account?</Button>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={4}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Login.tsx",["126","127"],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Button\\Button.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\TextBox\\TextBox.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Checkbox\\Checkbox.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Account.tsx",["128"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n//First Party Imports\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { useFetch } from \"../../Helpers/Fetch\";\r\n\r\n\r\ninterface accountRequestReturn {\r\n  username: string,\r\n}\r\n\r\n\r\nexport const Account = (props: IElevatedPageState) => {\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  const [accountResponse, setAccountResponse] = useState<accountRequestReturn>()\r\n  const [fetching, setFetching] = useState(false)\r\n\r\n  const requestOptions: RequestInit = {\r\n    method: 'GET',\r\n    credentials: \"include\",\r\n    headers: { 'Content-Type': 'application/json' }\r\n  };\r\n\r\n\r\n  useFetch(() => fetching, setFetching, props.setError, setAccountResponse, `/api/users/account`, () => requestOptions)\r\n\r\n  useEffect(() => {\r\n    if(fetching) return;\r\n    setUsername(accountResponse!.username)\r\n  }, [fetching]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <h2>{username}</h2>\r\n      <p>Your account page.</p>\r\n    </>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\ForgotPassword.tsx",["129"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n//First Party Imports\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { TextBox } from '../../Components/TextBox/TextBox';\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { useFetch } from \"../../Helpers/Fetch\";\r\n\r\n\r\ninterface resetPasswordRequestReturn {\r\n  msg: string\r\n}\r\n\r\n\r\nexport const ForgotPassword = (props: IElevatedPageState) => {\r\n\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [registerResponse, setRegisterResponse] = useState<resetPasswordRequestReturn>();\r\n  const [fetching, setFetching] = useState(false);\r\n\r\n  let requestOptions: RequestInit = {};\r\n\r\n\r\n  useFetch(() => fetching, setFetching, props.setError, setRegisterResponse, `/api/users/resetPassword`, () => requestOptions)\r\n\r\n  useEffect(() => {\r\n    if(fetching) return;\r\n\r\n    if (password !== confirmPassword){\r\n      console.log(\"Passwords do not match\");\r\n      setFetching(false)\r\n      return;\r\n    }\r\n\r\n    requestOptions = {\r\n      method: 'POST',\r\n      credentials: \"include\",\r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify({currentPassword: currentPassword, password: password})\r\n    };\r\n\r\n    props.setMsg(registerResponse!.msg)\r\n  }, [fetching]);\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <Row className=\"mt-auto mb-auto\">\r\n        <Col xs={3}></Col>\r\n        <Col xs={6}>\r\n          <Row className=\"justify-content-center\">\r\n            <h2>Reset Password</h2>\r\n          </Row>\r\n\r\n          <br/>\r\n\r\n          <Row>\r\n            <TextBox className=\"m-2 p-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"Current Password\" onBlur={(event) => setCurrentPassword(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"m-2 p-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"New Password\" onBlur={(event) => setPassword(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"m-2 p-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"Confirm Password\" onBlur={(event) => setConfirmPassword(event.target.value)}/>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs={2}></Col>\r\n            <Col xs={8}>\r\n              <Button className=\"mt-3 m-2 p-2 borderRadius-2 w-100\" onClick={() => setFetching(true)}>Update &#10140;</Button>\r\n            </Col>\r\n            <Col xs={2}></Col>\r\n          </Row>\r\n\r\n          <br/>\r\n        </Col>\r\n        <Col xs={3}></Col>\r\n      </Row>\r\n\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\Navbar.tsx",["130","131"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\n\r\n//First Party Imports\r\nimport './Navbar.scss'\r\nimport Logo from '../../Assets/icon.png'\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { UserElements } from \"./UserElements\";\r\n\r\n\r\nexport const NavBar = (props: IElevatedPageState) => {\r\n  const imageStyle = {height: \"auto\", width: \"auto\", maxHeight: \"30px\", maxWidth: \"30px\"}\r\n\r\n\r\n  return (\r\n    <div className=\"neumorphic borderRadius-2 mx-2 mt-2 w-100\">\r\n      <Navbar sticky=\"top\" expand=\"lg\">\r\n        <Navbar.Brand>\r\n          <NavLink to=\"/\" className=\"pl-2 borderRadius-2\">\r\n            <img style={imageStyle} src={Logo} alt=\"Shift\"/>\r\n          </NavLink>\r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link>\r\n              <NavLink to=\"/load\" activeClassName=\"navSelected\" className=\"nav-link borderRadius-2\">\r\n                Load\r\n              </NavLink>\r\n            </Nav.Link>\r\n          </Nav>\r\n          <Nav className=\"justify-content-end\" key={`${props.authenticated}`}>\r\n            <UserElements {...props}/>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Load\\Load.tsx",["132","133"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { Media } from '../../Components/Media/Media';\r\nimport { MediaList } from \"../../Components/MediaList/MediaList\";\r\nimport { FileDialog } from \"../../Components/FileDialog/FileDialog\"\r\nimport { defaultVideo } from \"../../Constants/defaultMedia\";\r\nimport { dropFiles, allowDrop } from '../../Helpers/dragAndDrop';\r\nimport { fileListToList } from '../../Helpers/Files';\r\nimport { fillArray } from \"../../Helpers/Arrays\";\r\nimport { useFetch } from \"../../Helpers/Fetch\";\r\n\r\n\r\ninterface loadRequestReturn {\r\n  msg: string,\r\n  shiftUUID: string\r\n}\r\n\r\nconst ListOfFiles: File[] = [];\r\nconst ListOfDataType: string[] = [];\r\n\r\n\r\nexport const Load = (props: IElevatedPageState) => {\r\n  const [trainingDataTypes, setTrainingDataTypes] = useState(ListOfDataType);\r\n  const [files, setFiles] = useState(ListOfFiles);\r\n  const [baseFiles, setBaseFiles] = useState(ListOfFiles);\r\n  const [maskFiles, setMaskFiles] = useState(ListOfFiles);\r\n  const [baseVideo, setBaseVideo] = useState(defaultVideo);\r\n\r\n  const history = useHistory()\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [loadResponse, setLoadResponse] = useState<loadRequestReturn>();\r\n\r\n  let requestOptions: RequestInit = {};\r\n  const requestHeaders = new Headers();\r\n\r\n\r\n  useFetch(() => fetching, setFetching, props.setError, setLoadResponse, `/api/users/load`, () => requestOptions)\r\n\r\n\r\n  useEffect(() => {\r\n    if(!fetching) return;\r\n\r\n    const data = new FormData();\r\n    requestOptions = {\r\n      method: 'POST',\r\n      headers: {},\r\n      credentials: \"include\",\r\n    };\r\n\r\n    for (var fileIndex = 0; fileIndex < files.length; fileIndex++){\r\n      console.log(files[fileIndex].name);\r\n      data.append(`file${fileIndex}`, files[fileIndex]);\r\n    }\r\n    requestOptions.body = data;\r\n\r\n    requestHeaders.append('trainingDataTypes', JSON.stringify(trainingDataTypes));\r\n    requestOptions.headers = requestHeaders;\r\n\r\n    props.setMsg(loadResponse!.msg)\r\n    props.setShiftUUID(loadResponse!.shiftUUID)\r\n    \r\n    //history.push(\"/train\")\r\n  });\r\n\r\n  useEffect(() => {\r\n    setFiles([baseVideo, ...baseFiles, ...maskFiles]);\r\n    setTrainingDataTypes([...fillArray(\"base\", baseFiles.length+1), ...fillArray(\"mask\", maskFiles.length)])\r\n  }, [baseVideo, baseFiles, maskFiles]);\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <h4>Base Face</h4>\r\n      <Row>\r\n        <Col xs={2}></Col>\r\n        <Col xs={8} className=\"neumorphic borderRadius-2\">\r\n          <Row>\r\n            <Col xs={11}></Col>\r\n            <Col xs={1} >\r\n              <FileDialog className=\"pr-4\" id=\"baseVideoUpload\" onChange={(event) => setBaseVideo(event.target.files![0])}>&#x21c6;</FileDialog>\r\n            </Col>\r\n          </Row>\r\n          <Media className=\"borderRadius-2 p-2\" key={baseVideo.name} onDragOver={(event) => allowDrop(event)}\r\n                 onDrop={(event) => setBaseVideo(dropFiles(event)[0])} mediaSrc={baseVideo} mediaType=\"video/mp4\" droppable={true}/>\r\n        </Col>\r\n        <Col xs={2}></Col>\r\n      </Row>\r\n      <Row className=\"mt-4\">\r\n        <Col>\r\n          <h4>More Base</h4>\r\n          <div className=\"neumorphic borderRadius-2\">\r\n            <Row>\r\n              <Col xs={11}></Col>\r\n              <Col xs={1} >\r\n                <FileDialog className=\"pr-4\" id=\"baseFileUpload\" mutipleSelect={true} onChange={(event) => setBaseFiles((current) => [...current, ...fileListToList(event.target.files!)])}>&#43;</FileDialog>\r\n              </Col>\r\n            </Row>\r\n            <MediaList className=\"mt-2 p-3\" onDragOver={(event) => allowDrop(event)}\r\n                       onDrop={(event) => setBaseFiles([...baseFiles, ...dropFiles(event)])} elementsPerRow={2} key={baseFiles.length}>\r\n              {baseFiles.map((file) => (\r\n                <Media mediaSrc={file} mediaType=\"video/mp4\"/>\r\n              ))}\r\n            </MediaList>\r\n          </div>\r\n        </Col>\r\n        <Col>\r\n          <h4>Mask Face</h4>\r\n          <div className=\"neumorphic borderRadius-2\">\r\n            <Row>\r\n              <Col xs={11}></Col>\r\n              <Col xs={1} >\r\n                <FileDialog className=\"pr-4\" id=\"maskFileUpload\" mutipleSelect={true} onChange={(event) => setMaskFiles((current) => [...current, ...fileListToList(event.target.files!)])}>&#43;</FileDialog>\r\n              </Col>\r\n            </Row>\r\n            <MediaList className=\"mt-2 borderRadius-2 p-3\" onDragOver={(event) => allowDrop(event)}\r\n                       onDrop={(event) => setMaskFiles([...maskFiles, ...dropFiles(event)])} elementsPerRow={2} key={maskFiles.length}>\r\n              {maskFiles.map((file) => (\r\n                <Media mediaSrc={file} mediaType=\"video/mp4\"/>\r\n              ))}\r\n            </MediaList>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-2\">\r\n        <Col xs={2}></Col>\r\n        <Col xs={8}>\r\n          <Button className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" disabled={fetching} onClick={() => setFetching(true)}>Load</Button>\r\n        </Col>\r\n        <Col xs={2}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\Train.tsx",["134","135"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { ITrainRequestReturn } from \"../../Interfaces/Train\";\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { Media } from '../../Components/Media/Media';\r\nimport { defaultVideo } from \"../../Constants/defaultMedia\";\r\nimport { useFetch } from \"../../Helpers/Fetch\";\r\nimport { convertImage } from \"../../Helpers/Images\";\r\n\r\n\r\nexport const Train = (props: IElevatedPageState) => {\r\n  const [stopTrain, setStopTrain] = useState(false);\r\n  const [imageString, setImageString] = useState(\"\");\r\n  const [image, setImage] = useState(defaultVideo);\r\n\r\n  const history = useHistory()\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [trainResponse, setTrainResponse] = useState<ITrainRequestReturn>();\r\n  const [converting, setConverting] = useState(false);\r\n\r\n  let requestOptions: RequestInit = {};\r\n\r\n\r\n  useFetch(() => fetching, setFetching, props.setError, setTrainResponse, `/api/users/train`, () => requestOptions)\r\n  convertImage(() => converting, setConverting, props.setError, setImage, () => imageString);\r\n\r\n  useEffect(() => {\r\n    if(!fetching) return;\r\n    requestOptions = {\r\n      method: 'POST',\r\n      credentials: \"include\",\r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify({shiftUUID: props.shiftUUID,\r\n                            usePTM: false,\r\n                            prebuiltShiftModel: \"\",\r\n                            epochs: props.epochs,\r\n                            trainType: 'basic'})\r\n    };\r\n\r\n    props.setMsg(trainResponse!.msg);\r\n    setImageString(trainResponse!.exhibit[0]);\r\n    setConverting(true);\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if(!converting) return;\r\n    console.log(\"Converted Image\");\r\n  }, [converting]);\r\n\r\n  useEffect(() => {\r\n    if (stopTrain){\r\n      history.push(\"/shift\");\r\n      return;\r\n    }\r\n\r\n    setFetching(true);\r\n  }, [image]); //may need stopTrain in dependencies\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <Row className=\"my-2\">\r\n        <Media className=\"neumorphic borderRadius-2 my-2 w-100 p-2\" mediaSrc={image} mediaType=\"video/mp4\"/>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={2}></Col>\r\n        <Col xs={4}>\r\n          <Link to=\"/advancedTrain\" className=\"w-100\">\r\n            <Button className=\"p-2 mt-2 mb-2 mr-4 borderRadius-2 w-100\" disabled={converting && fetching} onClick={() => setStopTrain(true)}>Advanced View</Button>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={4}>\r\n          <Button className=\"p-2 mt-2 mb-2 ml-4 borderRadius-2 w-100\" disabled={stopTrain && fetching} onClick={() => setStopTrain(true)}>Stop Training</Button>\r\n        </Col>\r\n        <Col xs={2}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Shift\\Shift.tsx",["136"],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Media\\Media.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Image\\Image.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Video\\Video.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\MediaList\\MediaList.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\AdvancedTrain.tsx",["137","138","139","140","141","142"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { ITrainRequestReturn } from \"../../Interfaces/Train\";\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { Media } from '../../Components/Media/Media';\r\nimport { defaultVideo } from \"../../Constants/defaultMedia\";\r\nimport { useFetch } from \"../../Helpers/Fetch\";\r\nimport { convertImage } from \"../../Helpers/Images\";\r\n\r\n\r\nlet trainResponse: ITrainRequestReturn = {msg: \"\", exhibit: []}\r\n\r\n\r\nexport const AdvancedTrain = (props: IElevatedPageState) => {\r\n  const [stopTrain, setStopTrain] = useState(false);\r\n\r\n  const [imageString, setImageString] = useState(\"\");\r\n  const [baseImage, setBaseImage] = useState(defaultVideo);\r\n  const [baseRemake, setBaseRemake] = useState(defaultVideo);\r\n  const [maskImage, setMaskmage] = useState(defaultVideo);\r\n  const [maskRemake, setMaskRemake] = useState(defaultVideo);\r\n\r\n  const history = useHistory()\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [trainResponse, setTrainResponse] = useState<ITrainRequestReturn>();\r\n  const [converting, setConverting] = useState(false);\r\n\r\n  let requestOptions: RequestInit = {};\r\n\r\n\r\n  useFetch(() => fetching, setFetching, props.setError, setTrainResponse, `/api/users/advancedTrain`, () => requestOptions)\r\n  convertImage(() => converting, setConverting, props.setError, setBaseImage, () => imageString);\r\n\r\n  useEffect(() => {\r\n    if(!fetching) return;\r\n    requestOptions = {\r\n      method: 'POST',\r\n      credentials: \"include\",\r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify({shiftUUID: props.shiftUUID,\r\n                            usePTM: false,\r\n                            prebuiltShiftModel: \"\",\r\n                            epochs: props.epochs,\r\n                            trainType: 'advanced'})\r\n    };\r\n\r\n    props.setMsg(trainResponse!.msg);\r\n    setImageString(trainResponse!.exhibit[0]);\r\n    setConverting(true);\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if(!converting) return;\r\n    console.log(\"Converted Image\");\r\n  }, [converting]);\r\n\r\n  useEffect(() => {\r\n    if (stopTrain){\r\n      setFetching(false);\r\n      history.push(\"/shift\");\r\n      return;\r\n    }\r\n\r\n    setFetching(true);\r\n  }, [baseImage, baseRemake, maskImage, maskRemake]); //may need stopTrain in dependencies\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <Row>\r\n        <Col className=\"my-2 px-2\" xs={6}>\r\n          <Row className=\"my-2 ml-4 py-2\">\r\n            <Media className=\"neumorphic borderRadius-2 my-1 w-100 p-2\" mediaSrc={defaultVideo} mediaType=\"video/mp4\"/>\r\n          </Row>\r\n          <Row className=\"my-2 ml-4 py-2\">\r\n            <Media className=\"neumorphic borderRadius-2 my-1 w-100 p-2\" mediaSrc={defaultVideo} mediaType=\"video/mp4\"/>\r\n          </Row>\r\n        </Col>\r\n        <Col className=\"my-2 px-2\" xs={6}>\r\n          <Row className=\"my-2 ml-4 py-2\">\r\n            <Media className=\"neumorphic borderRadius-2 my-1 w-100 p-2\" mediaSrc={defaultVideo} mediaType=\"video/mp4\"/>\r\n          </Row>\r\n          <Row className=\"my-2 ml-4 py-2\">\r\n            <Media className=\"neumorphic borderRadius-2 my-1 w-100 p-2\" mediaSrc={defaultVideo} mediaType=\"video/mp4\"/>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={2}></Col>\r\n        <Col xs={4} className=\"m-2\">\r\n          <Link to=\"/train\" className=\"w-100\">\r\n            <Button className=\"borderRadius-2 p-2 mr-2 w-100\" disabled={converting && fetching} onClick={() => setStopTrain(true)}>Basic View</Button>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={4} className=\"m-2\">\r\n          <Button className=\"borderRadius-2 p-2 ml-2 w-100\" disabled={stopTrain && fetching} onClick={() => setStopTrain(true)}>Stop Training</Button>\r\n        </Col>\r\n        <Col xs={2}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\FileDialog\\FileDialog.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\UserElements.tsx",["143","144","145"],"C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Fetch.tsx",["146","147"],"C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Authenticate.tsx",["148","149"],"C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\dragAndDrop.ts",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Files.ts",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Arrays.ts",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Images.tsx",["150","151","152"],"C:\\Coding\\Projects\\Shift Webapp\\src\\Constants\\defaultMedia.tsx",["153","154","155","156","157"],{"ruleId":"158","severity":1,"message":"159","line":28,"column":10,"nodeType":"160","messageId":"161","endLine":28,"endColumn":15},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":42,"column":22,"nodeType":"168","endLine":47,"endColumn":6},{"ruleId":"166","severity":1,"message":"167","line":41,"column":22,"nodeType":"168","endLine":48,"endColumn":6},{"ruleId":"166","severity":1,"message":"169","line":56,"column":6,"nodeType":"170","endLine":56,"endColumn":22,"suggestions":"171"},{"ruleId":"166","severity":1,"message":"172","line":32,"column":6,"nodeType":"170","endLine":32,"endColumn":16,"suggestions":"173"},{"ruleId":"166","severity":1,"message":"167","line":40,"column":22,"nodeType":"168","endLine":45,"endColumn":6},{"ruleId":"158","severity":1,"message":"174","line":2,"column":17,"nodeType":"160","messageId":"161","endLine":2,"endColumn":25},{"ruleId":"158","severity":1,"message":"175","line":2,"column":27,"nodeType":"160","messageId":"161","endLine":2,"endColumn":36},{"ruleId":"158","severity":1,"message":"176","line":35,"column":9,"nodeType":"160","messageId":"161","endLine":35,"endColumn":16},{"ruleId":"166","severity":1,"message":"167","line":51,"column":22,"nodeType":"168","endLine":55,"endColumn":6},{"ruleId":"166","severity":1,"message":"167","line":35,"column":22,"nodeType":"168","endLine":44,"endColumn":6},{"ruleId":"166","severity":1,"message":"177","line":63,"column":6,"nodeType":"170","endLine":63,"endColumn":13,"suggestions":"178"},{"ruleId":"166","severity":1,"message":"167","line":40,"column":20,"nodeType":"168","endLine":47,"endColumn":4},{"ruleId":"158","severity":1,"message":"179","line":16,"column":5,"nodeType":"160","messageId":"161","endLine":16,"endColumn":39},{"ruleId":"158","severity":1,"message":"180","line":24,"column":22,"nodeType":"160","messageId":"161","endLine":24,"endColumn":35},{"ruleId":"158","severity":1,"message":"181","line":25,"column":21,"nodeType":"160","messageId":"161","endLine":25,"endColumn":32},{"ruleId":"158","severity":1,"message":"182","line":26,"column":22,"nodeType":"160","messageId":"161","endLine":26,"endColumn":35},{"ruleId":"166","severity":1,"message":"167","line":42,"column":22,"nodeType":"168","endLine":51,"endColumn":6},{"ruleId":"166","severity":1,"message":"177","line":71,"column":6,"nodeType":"170","endLine":71,"endColumn":52,"suggestions":"183"},{"ruleId":"158","severity":1,"message":"184","line":4,"column":10,"nodeType":"160","messageId":"161","endLine":4,"endColumn":16},{"ruleId":"158","severity":1,"message":"185","line":20,"column":5,"nodeType":"160","messageId":"161","endLine":20,"endColumn":40},{"ruleId":"166","severity":1,"message":"186","line":42,"column":6,"nodeType":"170","endLine":42,"endColumn":29,"suggestions":"187"},{"ruleId":"166","severity":1,"message":"188","line":32,"column":6,"nodeType":"170","endLine":32,"endColumn":20,"suggestions":"189"},{"ruleId":"166","severity":1,"message":"190","line":32,"column":7,"nodeType":"191","endLine":32,"endColumn":19},{"ruleId":"166","severity":1,"message":"192","line":39,"column":6,"nodeType":"170","endLine":39,"endColumn":20,"suggestions":"193"},{"ruleId":"166","severity":1,"message":"190","line":39,"column":7,"nodeType":"191","endLine":39,"endColumn":19},{"ruleId":"158","severity":1,"message":"194","line":5,"column":16,"nodeType":"160","messageId":"161","endLine":5,"endColumn":27},{"ruleId":"166","severity":1,"message":"195","line":31,"column":6,"nodeType":"170","endLine":31,"endColumn":20,"suggestions":"196"},{"ruleId":"166","severity":1,"message":"190","line":31,"column":7,"nodeType":"191","endLine":31,"endColumn":19},{"ruleId":"197","severity":1,"message":"198","line":1,"column":42,"nodeType":"199","messageId":"200","endLine":1,"endColumn":43,"suggestions":"201"},{"ruleId":"197","severity":1,"message":"202","line":1,"column":54,"nodeType":"199","messageId":"200","endLine":1,"endColumn":55,"suggestions":"203"},{"ruleId":"197","severity":1,"message":"204","line":1,"column":63,"nodeType":"199","messageId":"200","endLine":1,"endColumn":64,"suggestions":"205"},{"ruleId":"197","severity":1,"message":"206","line":1,"column":72,"nodeType":"199","messageId":"200","endLine":1,"endColumn":73,"suggestions":"207"},{"ruleId":"197","severity":1,"message":"206","line":1,"column":84,"nodeType":"199","messageId":"200","endLine":1,"endColumn":85,"suggestions":"208"},"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["209"],"no-negated-in-lhs",["210"],"react-hooks/exhaustive-deps","Assignments to the 'requestOptions' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","React Hook useEffect has missing dependencies: 'authenticated' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["211"],"React Hook useEffect has a missing dependency: 'accountResponse'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setUsername' needs the current value of 'accountResponse'.",["212"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'stopTrain'. Either include them or remove the dependency array.",["213"],"'trainResponse' is assigned a value but never used.","'setBaseRemake' is assigned a value but never used.","'setMaskmage' is assigned a value but never used.","'setMaskRemake' is assigned a value but never used.",["214"],"'Navbar' is defined but never used.","'logoutResponse' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["215"],"React Hook useEffect has missing dependencies: 'getLoading', 'requestOptions', 'setData', 'setError', 'setLoading', and 'url'. Either include them or remove the dependency array. If 'getLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["216"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has missing dependencies: 'getLoading', 'setData', 'setError', and 'setLoading'. Either include them or remove the dependency array. If 'getLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["217"],"'returnFetch' is defined but never used.","React Hook useEffect has missing dependencies: 'getLoading', 'imageString', 'setData', 'setError', and 'setLoading'. Either include them or remove the dependency array. If 'getLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["218"],"no-useless-escape","Unnecessary escape character: \\U.","Literal","unnecessaryEscape",["219","220"],"Unnecessary escape character: \\O.",["221","222"],"Unnecessary escape character: \\P.",["223","224"],"Unnecessary escape character: \\C.",["225","226"],["227","228"],"no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"messageId":"245","fix":"246","desc":"247"},{"messageId":"248","fix":"249","desc":"250"},{"messageId":"245","fix":"251","desc":"247"},{"messageId":"248","fix":"252","desc":"250"},{"messageId":"245","fix":"253","desc":"247"},{"messageId":"248","fix":"254","desc":"250"},{"messageId":"245","fix":"255","desc":"247"},{"messageId":"248","fix":"256","desc":"250"},{"messageId":"245","fix":"257","desc":"247"},{"messageId":"248","fix":"258","desc":"250"},"Update the dependencies array to be: [authenticated, authenticating, props]",{"range":"259","text":"260"},"Update the dependencies array to be: [accountResponse, fetching]",{"range":"261","text":"262"},"Update the dependencies array to be: [history, image, stopTrain]",{"range":"263","text":"264"},"Update the dependencies array to be: [baseImage, baseRemake, history, maskImage, maskRemake, stopTrain]",{"range":"265","text":"266"},"Update the dependencies array to be: [authenticatedResponse, props]",{"range":"267","text":"268"},"Update the dependencies array to be: [getLoading, requestOptions, setData, setError, setLoading, url]",{"range":"269","text":"270"},"Update the dependencies array to be: [getLoading, setData, setError, setLoading]",{"range":"271","text":"272"},"Update the dependencies array to be: [getLoading, imageString, setData, setError, setLoading]",{"range":"273","text":"274"},"removeEscape",{"range":"275","text":"276"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"277","text":"278"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"279","text":"276"},{"range":"280","text":"278"},{"range":"281","text":"276"},{"range":"282","text":"278"},{"range":"283","text":"276"},{"range":"284","text":"278"},{"range":"285","text":"276"},{"range":"286","text":"278"},[1977,1993],"[authenticated, authenticating, props]",[899,909],"[accountResponse, fetching]",[2140,2147],"[history, image, stopTrain]",[2455,2501],"[baseImage, baseRemake, history, maskImage, maskRemake, stopTrain]",[1498,1521],"[authenticatedResponse, props]",[946,960],"[getLoading, requestOptions, setData, setError, setLoading, url]",[1136,1150],"[getLoading, setData, setError, setLoading]",[946,960],"[getLoading, imageString, setData, setError, setLoading]",[41,42],"",[41,41],"\\",[53,54],[53,53],[62,63],[62,62],[71,72],[71,71],[83,84],[83,83]]