[{"C:\\Coding\\Projects\\Shift Webapp\\src\\App.tsx":"1","C:\\Coding\\Projects\\Shift Webapp\\src\\reportWebVitals.ts":"2","C:\\Coding\\Projects\\Shift Webapp\\src\\index.tsx":"3","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Register.tsx":"4","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Login.tsx":"5","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Button\\Button.tsx":"6","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\TextBox\\TextBox.tsx":"7","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Checkbox\\Checkbox.tsx":"8","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Account.tsx":"9","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\ForgotPassword.tsx":"10","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\Navbar.tsx":"11","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Load\\Load.tsx":"12","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\Train.tsx":"13","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Shift\\Shift.tsx":"14","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Media\\Media.tsx":"15","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Image\\Image.tsx":"16","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Video\\Video.tsx":"17","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\MediaList\\MediaList.tsx":"18","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\AdvancedTrain.tsx":"19","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\FileDialog\\FileDialog.tsx":"20","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\UserElements.tsx":"21","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\dragAndDrop.ts":"22","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Files.ts":"23","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Arrays.ts":"24","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Authenticate.ts":"25","C:\\Coding\\Projects\\Shift Webapp\\src\\constants.tsx":"26","C:\\Coding\\Projects\\Shift Webapp\\src\\Hooks\\Fetch.ts":"27","C:\\Coding\\Projects\\Shift Webapp\\src\\Hooks\\Images.ts":"28","C:\\Coding\\Projects\\Shift Webapp\\src\\Hooks\\Interval.ts":"29"},{"size":4988,"mtime":1617932051898,"results":"30","hashOfConfig":"31"},{"size":425,"mtime":1606695268610,"results":"32","hashOfConfig":"31"},{"size":501,"mtime":1607455320057,"results":"33","hashOfConfig":"31"},{"size":4522,"mtime":1617759005287,"results":"34","hashOfConfig":"31"},{"size":4568,"mtime":1617758991218,"results":"35","hashOfConfig":"31"},{"size":580,"mtime":1610064201558,"results":"36","hashOfConfig":"31"},{"size":658,"mtime":1609779161561,"results":"37","hashOfConfig":"31"},{"size":645,"mtime":1609779978263,"results":"38","hashOfConfig":"31"},{"size":1217,"mtime":1617758994006,"results":"39","hashOfConfig":"31"},{"size":3006,"mtime":1617758992969,"results":"40","hashOfConfig":"31"},{"size":1589,"mtime":1617932076104,"results":"41","hashOfConfig":"31"},{"size":7847,"mtime":1617758989168,"results":"42","hashOfConfig":"31"},{"size":5094,"mtime":1617758996466,"results":"43","hashOfConfig":"31"},{"size":4066,"mtime":1617922772998,"results":"44","hashOfConfig":"31"},{"size":1842,"mtime":1617116183107,"results":"45","hashOfConfig":"31"},{"size":507,"mtime":1609894222749,"results":"46","hashOfConfig":"31"},{"size":664,"mtime":1609894227238,"results":"47","hashOfConfig":"31"},{"size":1103,"mtime":1609894281598,"results":"48","hashOfConfig":"31"},{"size":4837,"mtime":1617758995368,"results":"49","hashOfConfig":"31"},{"size":869,"mtime":1609891206709,"results":"50","hashOfConfig":"31"},{"size":2805,"mtime":1617758988198,"results":"51","hashOfConfig":"31"},{"size":1036,"mtime":1610147726531,"results":"52","hashOfConfig":"31"},{"size":724,"mtime":1610141908459,"results":"53","hashOfConfig":"31"},{"size":169,"mtime":1610067728782,"results":"54","hashOfConfig":"31"},{"size":1109,"mtime":1610143563065,"results":"55","hashOfConfig":"31"},{"size":277,"mtime":1610135361351,"results":"56","hashOfConfig":"31"},{"size":1241,"mtime":1617756264330,"results":"57","hashOfConfig":"31"},{"size":1258,"mtime":1617756260740,"results":"58","hashOfConfig":"31"},{"size":1234,"mtime":1617759908139,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1hd1ldu",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Coding\\Projects\\Shift Webapp\\src\\App.tsx",["130","131","132","133"],"C:\\Coding\\Projects\\Shift Webapp\\src\\reportWebVitals.ts",[],["134","135"],"C:\\Coding\\Projects\\Shift Webapp\\src\\index.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Register.tsx",["136","137","138","139","140","141"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { TextBox } from '../../Components/TextBox/TextBox';\r\nimport { useAuthenticate } from '../../Helpers/Authenticate';\r\nimport { useFetch } from '../../Hooks/Fetch';\r\nimport { IAuthRequestReturn } from '../../Interfaces/Authenticate';\r\nimport { IElevatedStateProps } from '../../Interfaces/ElevatedStateProps';\r\n\r\n\r\ninterface registerRequestReturn {\r\n  msg: string\r\n}\r\n\r\n\r\nexport function Register (props: IElevatedStateProps){\r\n  const {elevatedState, setElevatedState, ...registerProps} = props;\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [registerResponse, setRegisterResponse] = useState<registerRequestReturn>();\r\n  const [authenticating, setAuthenticating] = useState(false);\r\n  const [authenticatedResponse, setAuthenticatedResponse] = useState<IAuthRequestReturn>();\r\n\r\n  const history = useHistory();\r\n\r\n\r\n  let requestOptions: RequestInit = {};\r\n\r\n\r\n  const fetchRegister = useFetch(setFetching, setElevatedState, setRegisterResponse, `/api/users/register`, () => requestOptions, registerResponse)\r\n  const auth = useAuthenticate(setAuthenticating, props.setElevatedState, setAuthenticatedResponse)\r\n\r\n\r\n  useEffect(() => {\r\n    if(!fetching) return;\r\n\r\n    if (password !== confirmPassword){\r\n      setElevatedState((prev) => ({...prev, msg: \"Passwords do not match\"}))\r\n      setFetching(false)\r\n      return;\r\n    }\r\n\r\n    requestOptions = {\r\n      method: 'POST',\r\n      credentials: \"include\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ username: username, password: password, email: email})\r\n    };\r\n\r\n    fetchRegister()\r\n    setAuthenticating(true)\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if(!authenticating || !registerResponse) return;\r\n\r\n    setElevatedState((prev) => ({...prev, msg: registerResponse!.msg}))\r\n    auth()\r\n  }, [authenticating, registerResponse]);\r\n\r\n  useEffect(() => {\r\n    if(!authenticatedResponse) return;\r\n\r\n    setElevatedState((prev) => ({...prev, authenticated: authenticatedResponse.authenticated}))\r\n  }, [authenticatedResponse]);\r\n\r\n  useEffect(() => {\r\n    if(!elevatedState().authenticated) return;\r\n    history.push(\"/\")\r\n  }, [elevatedState().authenticated]);\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <Row className=\"mt-auto mb-auto\">\r\n        <Col xs={3}></Col>\r\n        <Col xs={6}>\r\n          <Row className=\"justify-content-center\">\r\n            <h2>Sign Up</h2>\r\n          </Row>\r\n\r\n          <br/>\r\n\r\n          <Row>\r\n            <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"text\" placeholder=\"Username\" onBlur={(event) => setUsername(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"email\" placeholder=\"Email\" onBlur={(event) => setEmail(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"Password\" onBlur={(event) => setPassword(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"Confirm Password\" onBlur={(event) => setConfirmPassword(event.target.value)}/>\r\n          </Row>\r\n\r\n          <Row className=\"align-items-center\">\r\n            <Col xs={2}></Col>\r\n            <Col xs={8}>\r\n              <Button className=\"p-2 mt-4 mb-2 borderRadius-2 w-100\" disabled={fetching || authenticating} onClick={() => {setFetching(true)}}>Register &#10140;</Button>\r\n            </Col>\r\n            <Col xs={2}></Col>\r\n          </Row>\r\n\r\n          <br/>\r\n        </Col>\r\n        <Col xs={3}></Col>\r\n      </Row>\r\n\r\n      <Row className=\"mt-auto mb-3\">\r\n        <Col xs={4}></Col>\r\n        <Col xs={4}>\r\n          <Link to=\"/login\" className=\"w-100\">\r\n            <Button className=\"p-2 mb-2 borderRadius-2 w-100\">Already Have An Account?</Button>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={4}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Login.tsx",["142","143","144","145","146","147"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { TextBox } from '../../Components/TextBox/TextBox';\r\nimport { Checkbox } from '../../Components/Checkbox/Checkbox';\r\nimport { IAuthRequestReturn } from \"../../Interfaces/Authenticate\";\r\nimport { useFetch } from \"../../Hooks/Fetch\";\r\nimport { useAuthenticate } from '../../Helpers/Authenticate';\r\nimport { IElevatedStateProps } from '../../Interfaces/ElevatedStateProps';\r\n\r\n\r\ninterface loginRequestReturn {\r\n  msg: string\r\n}\r\n\r\n\r\nexport function Login (props: IElevatedStateProps){\r\n  const {elevatedState, setElevatedState, ...loginProps} = props;\r\n\r\n  const [usernameOrEmail, setUsernameOrEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [loginResponse, setLoginResponse] = useState<loginRequestReturn>();\r\n  const [authenticating, setAuthenticating] = useState(false);\r\n  const [authenticatedResponse, setAuthenticatedResponse] = useState<IAuthRequestReturn>();\r\n\r\n  const history = useHistory();\r\n\r\n  let requestOptions: RequestInit = {};\r\n\r\n  const fetchLogin = useFetch(setFetching, setElevatedState, setLoginResponse, `/api/users/login`, () => requestOptions, loginResponse);\r\n  const auth = useAuthenticate(setAuthenticating, setElevatedState, setAuthenticatedResponse);\r\n\r\n\r\n  useEffect(() => {\r\n    if(!fetching) return;\r\n\r\n    requestOptions = {\r\n      method: 'POST',\r\n      credentials: \"include\",\r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify({usernameOrEmail: usernameOrEmail,\r\n                            password: password,\r\n                            remember: rememberMe})\r\n    };\r\n\r\n    fetchLogin()\r\n    setAuthenticating(true)\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if(!authenticating || !loginResponse) return;\r\n    setElevatedState((prev) => ({...prev, msg: loginResponse!.msg}));\r\n    auth()\r\n  }, [authenticating, loginResponse]);\r\n\r\n  useEffect(() => {\r\n    if(!authenticatedResponse) return;\r\n    setElevatedState((prev) => ({...prev, authenticated: authenticatedResponse.authenticated}))\r\n  }, [authenticatedResponse]);\r\n\r\n  useEffect(() => {\r\n    if(!elevatedState().authenticated) return;\r\n    history.push(\"/\")\r\n  }, [elevatedState().authenticated]);\r\n\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <Row className=\"mt-auto mb-auto\">\r\n        <Col xs={3}></Col>\r\n        <Col xs={6}>\r\n          <Row className=\"justify-content-center\">\r\n            <h2>Login</h2>\r\n          </Row>\r\n\r\n          <br/>\r\n\r\n          <Row>\r\n            <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"text\" placeholder=\"Username/Email\" onBlur={(event) => setUsernameOrEmail(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n           <TextBox className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"Password\" onBlur={(event) => setPassword(event.target.value)}/>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs={2}></Col>\r\n            <Col xs={8}>\r\n              <Button className=\"p-2 mt-4 mb-2 borderRadius-2 w-100\" disabled={fetching || authenticating} onClick={() => {setFetching(true)}}>Login &#10140;</Button>\r\n            </Col>\r\n            <Col xs={2}></Col>\r\n          </Row>\r\n\r\n          <br/>\r\n\r\n          <Row className=\"align-items-center\">\r\n            <Col xs={1}></Col>\r\n            <Col xs={3} className=\"pr-1 text-right\">\r\n              Remember Me\r\n            </Col>\r\n            <Col xs={1} className=\"p-2\">\r\n              <Checkbox checked={rememberMe} onChange={() => setRememberMe(!rememberMe)}/>\r\n            </Col>\r\n            <Col xs={2}></Col>\r\n            <Col xs={1}></Col>\r\n            <Col xs={3}>\r\n              <Link to=\"/forgotPassword\">Forgot Password?</Link>\r\n            </Col>\r\n            <Col xs={1}></Col>\r\n          </Row>\r\n\r\n          <br/>\r\n        </Col>\r\n        <Col xs={3}></Col>\r\n      </Row>\r\n\r\n      <Row className=\"mt-auto mb-3\">\r\n        <Col xs={4}></Col>\r\n        <Col xs={4}>\r\n          <Link to=\"/register\" className=\"w-100\">\r\n            <Button className=\"p-2 mb-2 borderRadius-2 w-100\">Don't Have An Account?</Button>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={4}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Button\\Button.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\TextBox\\TextBox.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Checkbox\\Checkbox.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Account.tsx",["148","149"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n//First Party Imports\r\nimport { useFetch } from \"../../Hooks/Fetch\";\r\nimport { IElevatedStateProps } from '../../Interfaces/ElevatedStateProps';\r\n\r\n\r\ninterface accountRequestReturn {\r\n  username: string,\r\n}\r\n\r\n\r\nexport function Account (props: IElevatedStateProps){\r\n  const {elevatedState, setElevatedState, ...accountProps} = props;\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  const [fetching, setFetching] = useState(true);\r\n  const [accountResponse, setAccountResponse] = useState<accountRequestReturn>()\r\n\r\n  const requestOptions: RequestInit = {\r\n    method: 'GET',\r\n    credentials: \"include\",\r\n    headers: { 'Content-Type': 'application/json' }\r\n  };\r\n\r\n\r\n  const fetchAccount = useFetch(setFetching, setElevatedState, setAccountResponse, `/api/users/account`, () => requestOptions, accountResponse)\r\n\r\n  useEffect(() => {\r\n    if(!fetching) return;\r\n    fetchAccount()\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if(!accountResponse) return;\r\n    setUsername(accountResponse!.username);\r\n  }, [accountResponse]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <h2>{username}</h2>\r\n      <p>Your account page.</p>\r\n    </>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\ForgotPassword.tsx",["150","151"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n//First Party Imports\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { TextBox } from '../../Components/TextBox/TextBox';\r\nimport { useFetch } from \"../../Hooks/Fetch\";\r\nimport { IElevatedStateProps } from '../../Interfaces/ElevatedStateProps';\r\n\r\n\r\ninterface resetPasswordRequestReturn {\r\n  msg: string\r\n}\r\n\r\n\r\nexport function ForgotPassword (props: IElevatedStateProps){\r\n  const {elevatedState, setElevatedState, ...forgotPasswordProps} = props;\r\n\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [registerResponse, setRegisterResponse] = useState<resetPasswordRequestReturn>();\r\n\r\n  let requestOptions: RequestInit = {};\r\n\r\n\r\n  const fetchResetPassword = useFetch(setFetching, setElevatedState, setRegisterResponse, `/api/users/resetPassword`, () => requestOptions, registerResponse)\r\n\r\n  useEffect(() => {\r\n    if(fetching) return;\r\n\r\n    if (password !== confirmPassword){\r\n      setElevatedState((prev) => ({...prev, msg: \"Passwords do not match\"}));\r\n      setFetching(false)\r\n      return;\r\n    }\r\n\r\n    requestOptions = {\r\n      method: 'POST',\r\n      credentials: \"include\",\r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify({currentPassword: currentPassword, password: password})\r\n    };\r\n\r\n    fetchResetPassword()\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if(!registerResponse) return;\r\n  }, [registerResponse]);\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <Row className=\"mt-auto mb-auto\">\r\n        <Col xs={3}></Col>\r\n        <Col xs={6}>\r\n          <Row className=\"justify-content-center\">\r\n            <h2>Reset Password</h2>\r\n          </Row>\r\n\r\n          <br/>\r\n\r\n          <Row>\r\n            <TextBox className=\"m-2 p-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"Current Password\" onBlur={(event) => setCurrentPassword(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"m-2 p-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"New Password\" onBlur={(event) => setPassword(event.target.value)}/>\r\n          </Row>\r\n          <Row>\r\n            <TextBox className=\"m-2 p-2 borderRadius-2 w-100\" type=\"password\" placeholder=\"Confirm Password\" onBlur={(event) => setConfirmPassword(event.target.value)}/>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs={2}></Col>\r\n            <Col xs={8}>\r\n              <Button className=\"mt-3 m-2 p-2 borderRadius-2 w-100\" onClick={() => setFetching(true)}>Update &#10140;</Button>\r\n            </Col>\r\n            <Col xs={2}></Col>\r\n          </Row>\r\n\r\n          <br/>\r\n        </Col>\r\n        <Col xs={3}></Col>\r\n      </Row>\r\n\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\Navbar.tsx",["152","153","154"],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Load\\Load.tsx",["155","156","157","158","159","160"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { Media } from '../../Components/Media/Media';\r\nimport { MediaList } from \"../../Components/MediaList/MediaList\";\r\nimport { FileDialog } from \"../../Components/FileDialog/FileDialog\"\r\nimport { defaultVideo, validMediaFileExtesnions } from \"../../constants\";\r\nimport { dropFiles, allowDrop } from '../../Helpers/dragAndDrop';\r\nimport { validateFileList } from '../../Helpers/Files';\r\nimport { fillArray } from \"../../Helpers/Arrays\";\r\nimport { useFetch } from \"../../Hooks/Fetch\";\r\nimport { IElevatedStateProps } from '../../Interfaces/ElevatedStateProps';\r\n\r\n\r\ninterface loadRequestReturn {\r\n  msg: string,\r\n  shiftUUID: string\r\n}\r\n\r\nconst ListOfFiles: File[] = [];\r\nconst ListOfDataType: string[] = [];\r\n\r\n\r\nexport function Load (props: IElevatedStateProps){\r\n  const {elevatedState, setElevatedState, ...loadProps} = props;\r\n\r\n  const [trainingDataTypes, setTrainingDataTypes] = useState(ListOfDataType);\r\n  const [files, setFiles] = useState(ListOfFiles);\r\n  const [baseFiles, setBaseFiles] = useState(ListOfFiles);\r\n  const [maskFiles, setMaskFiles] = useState(ListOfFiles);\r\n  const [baseVideo, setBaseVideo] = useState(defaultVideo);\r\n\r\n  const history = useHistory()\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [loadResponse, setLoadResponse] = useState<loadRequestReturn>();\r\n\r\n  const prevShiftUUID = sessionStorage[\"shiftUUID\"];\r\n  let requestOptions: RequestInit = {};\r\n  const requestHeaders = new Headers();\r\n\r\n\r\n  const fetchLoad = useFetch(setFetching, setElevatedState, setLoadResponse, `/api/loadData`, () => requestOptions, loadResponse)\r\n\r\n  \r\n  useEffect(() => {setElevatedState((prev) => ({...prev, prebuiltShiftModel: \"\"}))}, []);\r\n\r\n  useEffect(() => {\r\n    if(!fetching) return;\r\n\r\n    if(baseVideo === defaultVideo){\r\n      setElevatedState((prev) => ({...prev, msg: \"Make sure you have a priamry base media\"}))\r\n      return;\r\n    }\r\n\r\n    const data = new FormData();\r\n    requestOptions = {\r\n      method: 'POST',\r\n      headers: {},\r\n      credentials: \"include\",\r\n    };\r\n\r\n    for (var fileIndex = 0; fileIndex < files.length; fileIndex++){\r\n      data.append(`file${fileIndex}`, files[fileIndex]);\r\n    }\r\n    requestOptions.body = data;\r\n\r\n    requestHeaders.append('trainingDataTypes', JSON.stringify(trainingDataTypes));\r\n    requestOptions.headers = requestHeaders;\r\n\r\n    fetchLoad()\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if(!loadResponse) return;\r\n    setElevatedState((prev) => ({...prev, shiftUUID: loadResponse!.shiftUUID}))\r\n    setElevatedState((prev) => ({...prev, msg: loadResponse!.msg}));\r\n  }, [loadResponse]);\r\n\r\n  useEffect(() => {\r\n    if(!elevatedState().shiftUUID || elevatedState().shiftUUID === prevShiftUUID) return;\r\n    history.push(`/${elevatedState().defaultTrainView === \"basic\" ? \"train\" : \"advancedTrain\"}`);\r\n  }, [elevatedState().shiftUUID]);\r\n\r\n  useEffect(() => {\r\n    setFiles([baseVideo, ...baseFiles, ...maskFiles]);\r\n    setTrainingDataTypes([...fillArray(\"base\", baseFiles.length+1), ...fillArray(\"mask\", maskFiles.length)])\r\n  }, [baseVideo, baseFiles, maskFiles]);\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <h4>Base Face</h4>\r\n      <Row>\r\n        <Col xs={2}></Col>\r\n        <Col xs={8} className=\"neumorphic borderRadius-2\">\r\n          <Row>\r\n            <Col xs={11}></Col>\r\n            <Col xs={1}>\r\n              <FileDialog className=\"pr-4\" id=\"baseVideoUpload\" onChange={(event) => {\r\n                const [filteredFiles, badExtensions] = validateFileList(event.target.files!, validMediaFileExtesnions)\r\n\r\n                if(badExtensions.length > 0){\r\n                  setElevatedState((prev) => ({...prev, msg: `The file type ${badExtensions[0]} is not allowed to be selected`}))\r\n                }\r\n                if(filteredFiles.length === 0){\r\n                  setBaseVideo(defaultVideo)\r\n                }\r\n                else{\r\n                  setBaseVideo(filteredFiles[0])\r\n                }\r\n              }}>&#x21c6;</FileDialog>\r\n            </Col>\r\n          </Row>\r\n          <Media setElevatedState={setElevatedState} className=\"borderRadius-2 p-2\" key={baseVideo.name} onDragOver={(event) => allowDrop(event)}\r\n                 onDrop={(event) => setBaseVideo(dropFiles(event, setElevatedState, validMediaFileExtesnions)[0])} mediaSrc={baseVideo} mediaType=\"video/mp4\" droppable={true}/>\r\n        </Col>\r\n        <Col xs={2}></Col>\r\n      </Row>\r\n      <Row className=\"mt-4\">\r\n        <Col>\r\n          <h4>Extra Base Faces</h4>\r\n          <div className=\"neumorphic borderRadius-2\">\r\n            <Row>\r\n              <Col xs={11}></Col>\r\n              <Col xs={1} >\r\n                <FileDialog className=\"pr-4\" id=\"baseFileUpload\" mutipleSelect={true} onChange={(event) => {\r\n                  const [filteredFiles, badExtensions] = validateFileList(event.target.files!, validMediaFileExtesnions)\r\n\r\n                  if(badExtensions.length > 0){\r\n                    setElevatedState((prev) => ({...prev,\r\n                      msg: badExtensions.length <= 1 ? `The file type ${badExtensions[0]} is not allowed to be selected` : `The file types ${badExtensions} are not allowed to be selected`}))\r\n                  }\r\n  \r\n                  setBaseFiles((current) => [...current, ...filteredFiles])\r\n                }}>&#43;</FileDialog>\r\n              </Col>\r\n            </Row>\r\n            <MediaList className=\"mt-2 p-3\" onDragOver={(event) => allowDrop(event)}\r\n                       onDrop={(event) => setBaseFiles([...baseFiles, ...dropFiles(event, setElevatedState, validMediaFileExtesnions)])} elementsPerRow={2} key={baseFiles.length}>\r\n              {baseFiles.map((file) => (\r\n                <Media setElevatedState={setElevatedState} mediaSrc={file} mediaType=\"video/mp4\"/>\r\n              ))}\r\n            </MediaList>\r\n          </div>\r\n        </Col>\r\n        <Col>\r\n          <h4>Mask Face</h4>\r\n          <div className=\"neumorphic borderRadius-2\">\r\n            <Row>\r\n              <Col xs={11}></Col>\r\n              <Col xs={1} >\r\n                <FileDialog className=\"pr-4\" id=\"maskFileUpload\" mutipleSelect={true} onChange={(event) => {\r\n                  const [filteredFiles, badExtensions] = validateFileList(event.target.files!, validMediaFileExtesnions)\r\n\r\n                  if(badExtensions.length > 0){\r\n                    setElevatedState((prev) => ({...prev,\r\n                      msg: badExtensions.length <= 1 ? `The file type ${badExtensions[0]} is not allowed to be selected` : `The file types ${badExtensions} are not allowed to be selected`}))\r\n                  }\r\n  \r\n                  setMaskFiles((current) => [...current, ...filteredFiles])\r\n                }}>&#43;</FileDialog>\r\n              </Col>\r\n            </Row>\r\n            <MediaList className=\"mt-2 borderRadius-2 p-3\" onDragOver={(event) => allowDrop(event)}\r\n                       onDrop={(event) => setMaskFiles([...maskFiles, ...dropFiles(event, setElevatedState, validMediaFileExtesnions)])} elementsPerRow={2} key={maskFiles.length}>\r\n              {maskFiles.map((file) => (\r\n                <Media setElevatedState={setElevatedState} mediaSrc={file} mediaType=\"video/mp4\"/>\r\n              ))}\r\n            </MediaList>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-2\">\r\n        <Col xs={2}></Col>\r\n        <Col xs={8}>\r\n          <Button className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" disabled={fetching} onClick={() => setFetching(true)}>Load</Button>\r\n        </Col>\r\n        <Col xs={2}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\Train.tsx",["161","162","163","164","165","166","167","168","169","170","171"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { ITrainRequestReturn } from \"../../Interfaces/Train\";\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { Media } from '../../Components/Media/Media';\r\nimport { defaultVideo } from \"../../constants\";\r\nimport { useFetch } from \"../../Hooks/Fetch\";\r\nimport { useConvertImage } from \"../../Hooks/Images\";\r\nimport { IElevatedStateProps } from '../../Interfaces/ElevatedStateProps';\r\n\r\n\r\nexport function Train (props: IElevatedStateProps){\r\n  const {elevatedState, setElevatedState, ...trainProps} = props;\r\n  useEffect(() => {\r\n    setElevatedState((prev) => ({...prev, shiftUUID: sessionStorage[\"shiftUUID\"]}))\r\n    setElevatedState((prev) => ({...prev, prebuiltShiftModel: elevatedState().shiftUUID}))\r\n  }, []);\r\n\r\n  const [stopTrain, setStopTrain] = useState(false);\r\n  const [stopping, setStopping] = useState(false);\r\n  const [advancedView, setAdvancedView] = useState(false);\r\n  const [imageString, setImageString] = useState(\"\");\r\n  const [image, setImage] = useState(defaultVideo);\r\n\r\n  const history = useHistory()\r\n\r\n  const [training, setTraining] = useState(true);\r\n  const [updating, setUpdating] = useState(false);\r\n  const [stop, setStop] = useState(false);\r\n  const [trainResponse, setTrainResponse] = useState<ITrainRequestReturn>();\r\n  const [converting, setConverting] = useState(false);\r\n\r\n  let requestOptions: RequestInit = {};\r\n\r\n  function updateRequestOptions(){\r\n    requestOptions = {\r\n      method: 'POST',\r\n      credentials: \"include\",\r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify({shiftUUID: elevatedState().shiftUUID,\r\n                            usePTM: elevatedState().usePTM,\r\n                            prebuiltShiftModel: elevatedState().prebuiltShiftModel,\r\n                            epochs: elevatedState().trainStatusInterval,\r\n                            trainType: 'basic'})\r\n    };\r\n  }\r\n\r\n\r\n  const startTraining = useFetch(setTraining, setElevatedState, setTrainResponse, `/api/train`, () => requestOptions, trainResponse)\r\n  const updateStatus = useFetch(setUpdating, setElevatedState, setTrainResponse, `/api/trainStatus`, () => requestOptions, trainResponse)\r\n  const stopTraining = useFetch(setStop, setElevatedState, setTrainResponse, `/api/stopTraining`, () => requestOptions, trainResponse)\r\n  const convertImage = useConvertImage(setConverting, setElevatedState, setImage, () => imageString);\r\n\r\n\r\n  //Start training the AI on the backend\r\n  useEffect(() => {\r\n    if(!training) return;\r\n\r\n    updateRequestOptions()\r\n\r\n    startTraining()\r\n  }, [training]);\r\n\r\n  //Get the updated shift image\r\n  useEffect(() => {\r\n    if(!updating) return;\r\n\r\n    updateRequestOptions()\r\n\r\n    updateStatus()\r\n  }, [updating]);\r\n\r\n  //Stop training the AI on the backend\r\n  useEffect(() => {\r\n    if(!stop) return;\r\n\r\n    updateRequestOptions()\r\n\r\n    stopTraining();\r\n    setStopping(true);\r\n  }, [stop]);\r\n\r\n  //Update training status every second\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if(stopping && !stopTrain){\r\n        updateRequestOptions();\r\n        updateStatus();\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [stopping]);\r\n\r\n\r\n  //Update the image displayed to the user and stop the training interval\r\n  useEffect(() => {\r\n    if(!trainResponse) return;\r\n\r\n    setElevatedState((prev) => ({...prev, msg: trainResponse!.msg}));\r\n\r\n    if(trainResponse!.stopped){\r\n      setStopTrain(true);\r\n    }\r\n\r\n    if(!trainResponse!.exhibit) return;\r\n\r\n    setImageString(trainResponse!.exhibit[0]);\r\n  }, [trainResponse]);\r\n\r\n  //Convert imageString to a useable image\r\n  useEffect(() => {\r\n    if(!imageString) return;\r\n\r\n\t\tconvertImage()\r\n\t}, [imageString]);\r\n\r\n  //Move the user to other pages on button clicks\r\n  useEffect(() => {\r\n    if(stopTrain){\r\n      history.push(\"/shift\")\r\n    }\r\n\r\n    if(advancedView){\r\n      history.push(\"/advancedTrain\")\r\n    }\r\n\r\n  }, [stopTrain, advancedView])\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\" key={image.lastModified}>\r\n      <Row className=\"my-2\">\r\n        <Media setElevatedState={setElevatedState} className=\"neumorphic borderRadius-2 my-2 w-100 p-2\" mediaSrc={image} mediaType=\"video/mp4\"/>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={2}></Col>\r\n        <Col xs={4}>\r\n          <Button className=\"p-2 mt-2 mb-2 mr-4 borderRadius-2 w-100\" disabled={advancedView} onClick={() => setAdvancedView(true)}>Advanced View</Button>\r\n        </Col>\r\n        <Col xs={4}>\r\n          <Button className=\"p-2 mt-2 mb-2 ml-4 borderRadius-2 w-100\" disabled={stopTrain} onClick={() => setStop(true)}>Stop Training</Button>\r\n        </Col>\r\n        <Col xs={2}><Button className=\"p-2 mt-2 mb-2 ml-4 borderRadius-2 w-100\" disabled={stopTrain} onClick={() => setUpdating(true)}>Update</Button></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Shift\\Shift.tsx",["172","173","174","175"],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Media\\Media.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Image\\Image.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Video\\Video.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\MediaList\\MediaList.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\AdvancedTrain.tsx",["176","177","178","179","180","181","182","183","184","185"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { ITrainRequestReturn } from \"../../Interfaces/Train\";\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { Media } from '../../Components/Media/Media';\r\nimport { defaultVideo } from \"../../constants\";\r\nimport { useFetch } from \"../../Hooks/Fetch\";\r\nimport { useConvertImage } from \"../../Hooks/Images\";\r\nimport { IElevatedStateProps } from '../../Interfaces/ElevatedStateProps';\r\n\r\n\r\nlet trainResponse: ITrainRequestReturn = {msg: \"\", exhibit: [], stopped: false}\r\n\r\n\r\nexport function AdvancedTrain (props: IElevatedStateProps){\r\n  const {elevatedState, setElevatedState, ...advancedTrainProps} = props;\r\n  useEffect(() => {\r\n    setElevatedState((prev) => ({...prev, shiftUUID: sessionStorage[\"shiftUUID\"]}))\r\n    setElevatedState((prev) => ({...prev, prebuiltShiftModel: elevatedState().shiftUUID}))\r\n  }, []);\r\n\r\n  const [basicView, setBasicView] = useState(false);\r\n  const [stopTrain, setStopTrain] = useState(false);\r\n\r\n  const [imageString, setImageString] = useState(\"\");\r\n  const [baseImage, setBaseImage] = useState(defaultVideo);\r\n  const [baseRemake, setBaseRemake] = useState(defaultVideo);\r\n  const [maskImage, setMaskmage] = useState(defaultVideo);\r\n  const [maskRemake, setMaskRemake] = useState(defaultVideo);\r\n\r\n  const history = useHistory()\r\n\r\n  const [fetching, setFetching] = useState(true);\r\n  const [trainResponse, setTrainResponse] = useState<ITrainRequestReturn>();\r\n  const [converting, setConverting] = useState(false);\r\n\r\n  let requestOptions: RequestInit = {};\r\n\r\n\r\n  const fetchTrain = useFetch(setFetching, setElevatedState, setTrainResponse, `/api/train`, () => requestOptions, trainResponse)\r\n  const convertImage = useConvertImage(setConverting, setElevatedState, setBaseImage, () => imageString);\r\n\r\n\r\n  useEffect(() => {\r\n    if(!fetching || stopTrain || basicView) return;\r\n\r\n    requestOptions = {\r\n      method: 'POST',\r\n      credentials: \"include\",\r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify({shiftUUID: elevatedState().shiftUUID,\r\n                            usePTM: elevatedState().usePTM,\r\n                            prebuiltShiftModel: elevatedState().prebuiltShiftModel,\r\n                            epochs: elevatedState().trainStatusInterval,\r\n                            trainType: 'basic'})\r\n    };\r\n\r\n    fetchTrain()\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if(!converting || !trainResponse) return;\r\n\r\n    setElevatedState((prev) => ({...prev, msg: trainResponse!.msg}))\r\n    setImageString(trainResponse.exhibit[0]);\r\n  }, [trainResponse]);\r\n\r\n  useEffect(() => {\r\n\t\tif(!imageString) return;\r\n\t\tconvertImage()\r\n\t}, [imageString]);\r\n\r\n  useEffect(() => {\r\n    if(stopTrain){\r\n      history.push(\"/shift\")\r\n    }\r\n    if(basicView){\r\n      history.push(\"/train\")\r\n    }\r\n\r\n    if(baseImage === defaultVideo) return;\r\n\r\n    setFetching(true)\r\n  }, [baseImage, baseRemake, maskImage, maskRemake])\r\n\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\" key={baseImage.lastModified}>\r\n      <Row>\r\n        <Col className=\"my-2 px-2\" xs={6}>\r\n          <Row className=\"my-2 ml-4 py-2\">\r\n            <Media setElevatedState={setElevatedState} className=\"neumorphic borderRadius-2 my-1 w-100 p-2\" mediaSrc={baseImage} mediaType=\"video/mp4\"/>\r\n          </Row>\r\n          <Row className=\"my-2 ml-4 py-2\">\r\n            <Media setElevatedState={setElevatedState} className=\"neumorphic borderRadius-2 my-1 w-100 p-2\" mediaSrc={defaultVideo} mediaType=\"video/mp4\"/>\r\n          </Row>\r\n        </Col>\r\n        <Col className=\"my-2 px-2\" xs={6}>\r\n          <Row className=\"my-2 ml-4 py-2\">\r\n            <Media setElevatedState={setElevatedState} className=\"neumorphic borderRadius-2 my-1 w-100 p-2\" mediaSrc={defaultVideo} mediaType=\"video/mp4\"/>\r\n          </Row>\r\n          <Row className=\"my-2 ml-4 py-2\">\r\n            <Media setElevatedState={setElevatedState} className=\"neumorphic borderRadius-2 my-1 w-100 p-2\" mediaSrc={defaultVideo} mediaType=\"video/mp4\"/>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={2}></Col>\r\n        <Col xs={4} className=\"m-2\">\r\n          <Link to=\"/train\" className=\"w-100\">\r\n            <Button className=\"borderRadius-2 p-2 mr-2 w-100\" disabled={ basicView} onClick={() => setBasicView(true)}>Basic View</Button>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={4} className=\"m-2\">\r\n          <Button className=\"borderRadius-2 p-2 ml-2 w-100\" disabled={stopTrain} onClick={() => setStopTrain(true)}>Stop Training</Button>\r\n        </Col>\r\n        <Col xs={2}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\FileDialog\\FileDialog.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\UserElements.tsx",["186","187","188","189","190"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\n\r\n//First Party Imports\r\nimport './Navbar.scss'\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { useFetch } from \"../../Hooks/Fetch\";\r\nimport { useAuthenticate } from '../../Helpers/Authenticate';\r\nimport { IAuthRequestReturn } from '../../Interfaces/Authenticate';\r\nimport { IElevatedStateProps } from '../../Interfaces/ElevatedStateProps';\r\n\r\n\r\ninterface logoutRequestReturn {\r\n  msg: string\r\n}\r\n\r\n\r\nexport function UserElements (props: IElevatedStateProps){\r\n  const {elevatedState, setElevatedState, ...useElementsProps} = props;\r\n\r\n  const [authenticating, setAuthenticating] = useState(false);\r\n  const [authenticatedResponse, setAuthenticatedResponse] = useState<IAuthRequestReturn>()\r\n\r\n  const [fetching, setFetching] = useState(false);\r\n  const [logoutResponse, setLogoutResponse] = useState<logoutRequestReturn>();\r\n\r\n  const requestOptions: RequestInit = {\r\n    method: 'GET',\r\n    credentials: \"include\",\r\n    headers: { 'Content-Type': 'application/json'}\r\n  };\r\n\r\n  const auth = useAuthenticate(setAuthenticating, setElevatedState, setAuthenticatedResponse)\r\n  const fetchLogout = useFetch(setFetching, setElevatedState, setLogoutResponse, `/api/users/logout`, () => requestOptions, logoutResponse)\r\n\r\n  useEffect(() => {\r\n    if(!fetching) return;\r\n    fetchLogout()\r\n    setAuthenticating(true)\r\n  }, [fetching]);\r\n\r\n  useEffect(() => {\r\n    if (!authenticating || !logoutResponse) return;\r\n    setElevatedState((prev) => ({...prev, msg: logoutResponse!.msg}))\r\n    auth()\r\n  }, [authenticating, logoutResponse]);\r\n\r\n  useEffect(() => {\r\n    if (!authenticatedResponse) return;\r\n    setElevatedState((prev) => ({...prev, authenticated: authenticatedResponse!.authenticated}))\r\n  }, [authenticatedResponse]);\r\n\r\n\r\n  if(elevatedState().authenticated){\r\n    return (\r\n      <>\r\n      <Nav.Link>\r\n        <NavLink to=\"/account\" activeClassName=\"navSelected\" className=\"nav-link borderRadius-2\">\r\n          Account\r\n        </NavLink>\r\n      </Nav.Link>\r\n      <Nav.Link>\r\n        <Button className=\"neumorphic borderRadius-2 py-2 px-3 w-100\" onClick={() => setFetching(true)} disabled={fetching || authenticating}>\r\n          Logout\r\n        </Button>\r\n      </Nav.Link>\r\n      </>\r\n    );\r\n  }\r\n  else{\r\n    return (\r\n      <>\r\n      <Nav.Link>\r\n        <NavLink to=\"/login\" activeClassName=\"navSelected\" className=\"nav-link borderRadius-2\">\r\n          Login\r\n        </NavLink>\r\n      </Nav.Link>\r\n      <Nav.Link>\r\n        <NavLink to=\"/register\" activeClassName=\"navSelected\" className=\"nav-link borderRadius-2\">\r\n          Register\r\n        </NavLink>\r\n      </Nav.Link>\r\n      </>\r\n    );\r\n  }\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\dragAndDrop.ts",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Files.ts",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Arrays.ts",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Authenticate.ts",["191"],"//First Party Imports\r\nimport { IAuthRequestReturn } from '../Interfaces/Authenticate'\r\nimport { IElevatedPageState } from '../Interfaces/PageState';\r\n\r\n\r\nconst authRequestOptions: RequestInit = {\r\n  method: 'GET',\r\n  credentials: \"include\",\r\n  headers: { 'Content-Type': 'application/json' }\r\n};\r\n\r\nasync function returnFetch(url: string, options: RequestInit){\r\n  return await fetch(url, options)\r\n}\r\n\r\nexport function useAuthenticate(setLoading: React.Dispatch<React.SetStateAction<boolean>>,\r\n                                setElevatedState: React.Dispatch<React.SetStateAction<IElevatedPageState>>,\r\n                                setData: React.Dispatch<React.SetStateAction<IAuthRequestReturn | undefined>>){\r\n\r\n  async function call(){\r\n    setLoading(true);\r\n\r\n    try{\r\n      const response = await fetch(`/api/users/isAuthenticated`, authRequestOptions);\r\n      const json = await response.json();\r\n\r\n      setData(json);\r\n      setLoading(false);\r\n    }\r\n    catch (error){\r\n      setLoading(false);\r\n      setElevatedState((prev) => ({...prev, error: error}));\r\n    }\r\n  }\r\n\r\n  return call\r\n}\r\n","C:\\Coding\\Projects\\Shift Webapp\\src\\constants.tsx",["192","193","194","195","196"],"export const defaultVideo = new File(['C:\\Users\\naper\\OneDrive\\Pictures\\Camera Roll\\ChrisHemsworthMotivation.mp4'], 'chris.mp4', {\"type\": \"video/mp4\"}) //Check empty constructor\r\nexport const validMediaFileExtesnions = ['png', 'jpg', 'jpeg', 'gif', 'heic', 'mp4', 'm4a', 'mov']","C:\\Coding\\Projects\\Shift Webapp\\src\\Hooks\\Fetch.ts",["197"],"import { IElevatedPageState } from \"../Interfaces/PageState\";\r\n\r\n\r\nexport function useFetch<T>(setLoading: React.Dispatch<React.SetStateAction<boolean>>,\r\n                            setElevatedState: React.Dispatch<React.SetStateAction<IElevatedPageState>>,\r\n                            setData: React.Dispatch<React.SetStateAction<T>>,\r\n                            url: string, requestOptions: () => RequestInit,\r\n                            defaultResponse: T): (responseType?: string) => Promise<void>{\r\n\r\n  async function call(responseType='json'){\r\n    setLoading(true);\r\n\r\n    try{\r\n      var response = await fetch(url, requestOptions());\r\n      var convertedResponse = null;\r\n\r\n      if(responseType === 'json'){\r\n        convertedResponse = await response.json();\r\n      }\r\n      else if(responseType === 'blob'){\r\n        convertedResponse = await response.blob();\r\n      }\r\n      else{\r\n        convertedResponse = response;\r\n      }\r\n\r\n      if(convertedResponse == null){\r\n        throw \"Fetch Response is Null\";\r\n      }\r\n\r\n      setData(convertedResponse!);\r\n      setLoading(false);\r\n    }\r\n    catch (error){\r\n      setLoading(false);\r\n      setElevatedState((prev) => ({...prev, error}));\r\n    }\r\n  }\r\n\r\n  return call\r\n}\r\n","C:\\Coding\\Projects\\Shift Webapp\\src\\Hooks\\Images.ts",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Hooks\\Interval.ts",[],{"ruleId":"198","severity":1,"message":"199","line":6,"column":25,"nodeType":"200","messageId":"201","endLine":6,"endColumn":34},{"ruleId":"202","severity":1,"message":"203","line":50,"column":6,"nodeType":"204","endLine":50,"endColumn":8,"suggestions":"205"},{"ruleId":"202","severity":1,"message":"206","line":55,"column":6,"nodeType":"204","endLine":55,"endColumn":16,"suggestions":"207"},{"ruleId":"202","severity":1,"message":"203","line":60,"column":6,"nodeType":"204","endLine":60,"endColumn":29,"suggestions":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"198","severity":1,"message":"213","line":21,"column":46,"nodeType":"200","messageId":"201","endLine":21,"endColumn":59},{"ruleId":"202","severity":1,"message":"214","line":52,"column":22,"nodeType":"215","endLine":57,"endColumn":6},{"ruleId":"202","severity":1,"message":"216","line":68,"column":6,"nodeType":"204","endLine":68,"endColumn":40,"suggestions":"217"},{"ruleId":"202","severity":1,"message":"218","line":74,"column":6,"nodeType":"204","endLine":74,"endColumn":29,"suggestions":"219"},{"ruleId":"202","severity":1,"message":"220","line":79,"column":6,"nodeType":"204","endLine":79,"endColumn":37,"suggestions":"221"},{"ruleId":"202","severity":1,"message":"222","line":79,"column":7,"nodeType":"223","endLine":79,"endColumn":36},{"ruleId":"198","severity":1,"message":"224","line":22,"column":46,"nodeType":"200","messageId":"201","endLine":22,"endColumn":56},{"ruleId":"202","severity":1,"message":"214","line":44,"column":22,"nodeType":"215","endLine":51,"endColumn":6},{"ruleId":"202","severity":1,"message":"216","line":61,"column":6,"nodeType":"204","endLine":61,"endColumn":37,"suggestions":"225"},{"ruleId":"202","severity":1,"message":"218","line":66,"column":6,"nodeType":"204","endLine":66,"endColumn":29,"suggestions":"226"},{"ruleId":"202","severity":1,"message":"220","line":71,"column":6,"nodeType":"204","endLine":71,"endColumn":37,"suggestions":"227"},{"ruleId":"202","severity":1,"message":"222","line":71,"column":7,"nodeType":"223","endLine":71,"endColumn":36},{"ruleId":"198","severity":1,"message":"228","line":15,"column":46,"nodeType":"200","messageId":"201","endLine":15,"endColumn":58},{"ruleId":"202","severity":1,"message":"229","line":34,"column":6,"nodeType":"204","endLine":34,"endColumn":16,"suggestions":"230"},{"ruleId":"198","severity":1,"message":"231","line":18,"column":46,"nodeType":"200","messageId":"201","endLine":18,"endColumn":65},{"ruleId":"202","severity":1,"message":"214","line":41,"column":22,"nodeType":"215","endLine":46,"endColumn":6},{"ruleId":"198","severity":1,"message":"232","line":2,"column":17,"nodeType":"200","messageId":"201","endLine":2,"endColumn":25},{"ruleId":"198","severity":1,"message":"233","line":2,"column":27,"nodeType":"200","messageId":"201","endLine":2,"endColumn":36},{"ruleId":"198","severity":1,"message":"234","line":15,"column":46,"nodeType":"200","messageId":"201","endLine":15,"endColumn":54},{"ruleId":"198","severity":1,"message":"235","line":29,"column":46,"nodeType":"200","messageId":"201","endLine":29,"endColumn":55},{"ruleId":"202","severity":1,"message":"218","line":50,"column":86,"nodeType":"204","endLine":50,"endColumn":88,"suggestions":"236"},{"ruleId":"202","severity":1,"message":"214","line":61,"column":22,"nodeType":"215","endLine":65,"endColumn":6},{"ruleId":"202","severity":1,"message":"218","line":82,"column":6,"nodeType":"204","endLine":82,"endColumn":20,"suggestions":"237"},{"ruleId":"202","severity":1,"message":"238","line":87,"column":6,"nodeType":"204","endLine":87,"endColumn":33,"suggestions":"239"},{"ruleId":"202","severity":1,"message":"222","line":87,"column":7,"nodeType":"223","endLine":87,"endColumn":32},{"ruleId":"198","severity":1,"message":"240","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":14},{"ruleId":"198","severity":1,"message":"241","line":17,"column":46,"nodeType":"200","messageId":"201","endLine":17,"endColumn":56},{"ruleId":"202","severity":1,"message":"242","line":21,"column":6,"nodeType":"204","endLine":21,"endColumn":8,"suggestions":"243"},{"ruleId":"198","severity":1,"message":"244","line":35,"column":10,"nodeType":"200","messageId":"201","endLine":35,"endColumn":20},{"ruleId":"202","severity":1,"message":"245","line":66,"column":6,"nodeType":"204","endLine":66,"endColumn":16,"suggestions":"246"},{"ruleId":"202","severity":1,"message":"247","line":75,"column":6,"nodeType":"204","endLine":75,"endColumn":16,"suggestions":"248"},{"ruleId":"202","severity":1,"message":"249","line":85,"column":6,"nodeType":"204","endLine":85,"endColumn":12,"suggestions":"250"},{"ruleId":"202","severity":1,"message":"251","line":97,"column":6,"nodeType":"204","endLine":97,"endColumn":16,"suggestions":"252"},{"ruleId":"202","severity":1,"message":"218","line":113,"column":6,"nodeType":"204","endLine":113,"endColumn":21,"suggestions":"253"},{"ruleId":"202","severity":1,"message":"254","line":120,"column":5,"nodeType":"204","endLine":120,"endColumn":18,"suggestions":"255"},{"ruleId":"202","severity":1,"message":"256","line":132,"column":6,"nodeType":"204","endLine":132,"endColumn":31,"suggestions":"257"},{"ruleId":"198","severity":1,"message":"258","line":23,"column":45,"nodeType":"200","messageId":"201","endLine":23,"endColumn":55},{"ruleId":"198","severity":1,"message":"259","line":31,"column":9,"nodeType":"200","messageId":"201","endLine":31,"endColumn":23},{"ruleId":"202","severity":1,"message":"260","line":61,"column":5,"nodeType":"204","endLine":61,"endColumn":15,"suggestions":"261"},{"ruleId":"202","severity":1,"message":"218","line":67,"column":5,"nodeType":"204","endLine":67,"endColumn":20,"suggestions":"262"},{"ruleId":"198","severity":1,"message":"263","line":16,"column":5,"nodeType":"200","messageId":"201","endLine":16,"endColumn":39},{"ruleId":"198","severity":1,"message":"264","line":20,"column":46,"nodeType":"200","messageId":"201","endLine":20,"endColumn":64},{"ruleId":"202","severity":1,"message":"242","line":24,"column":6,"nodeType":"204","endLine":24,"endColumn":8,"suggestions":"265"},{"ruleId":"198","severity":1,"message":"266","line":31,"column":22,"nodeType":"200","messageId":"201","endLine":31,"endColumn":35},{"ruleId":"198","severity":1,"message":"267","line":32,"column":21,"nodeType":"200","messageId":"201","endLine":32,"endColumn":32},{"ruleId":"198","severity":1,"message":"268","line":33,"column":22,"nodeType":"200","messageId":"201","endLine":33,"endColumn":35},{"ruleId":"202","severity":1,"message":"214","line":51,"column":22,"nodeType":"215","endLine":60,"endColumn":6},{"ruleId":"202","severity":1,"message":"269","line":70,"column":6,"nodeType":"204","endLine":70,"endColumn":21,"suggestions":"270"},{"ruleId":"202","severity":1,"message":"254","line":75,"column":5,"nodeType":"204","endLine":75,"endColumn":18,"suggestions":"271"},{"ruleId":"202","severity":1,"message":"272","line":88,"column":6,"nodeType":"204","endLine":88,"endColumn":52,"suggestions":"273"},{"ruleId":"198","severity":1,"message":"274","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":16},{"ruleId":"198","severity":1,"message":"275","line":22,"column":46,"nodeType":"200","messageId":"201","endLine":22,"endColumn":62},{"ruleId":"202","severity":1,"message":"276","line":43,"column":6,"nodeType":"204","endLine":43,"endColumn":16,"suggestions":"277"},{"ruleId":"202","severity":1,"message":"216","line":49,"column":6,"nodeType":"204","endLine":49,"endColumn":38,"suggestions":"278"},{"ruleId":"202","severity":1,"message":"218","line":54,"column":6,"nodeType":"204","endLine":54,"endColumn":29,"suggestions":"279"},{"ruleId":"198","severity":1,"message":"280","line":12,"column":16,"nodeType":"200","messageId":"201","endLine":12,"endColumn":27},{"ruleId":"281","severity":1,"message":"282","line":1,"column":42,"nodeType":"283","messageId":"284","endLine":1,"endColumn":43,"suggestions":"285"},{"ruleId":"281","severity":1,"message":"286","line":1,"column":54,"nodeType":"283","messageId":"284","endLine":1,"endColumn":55,"suggestions":"287"},{"ruleId":"281","severity":1,"message":"288","line":1,"column":63,"nodeType":"283","messageId":"284","endLine":1,"endColumn":64,"suggestions":"289"},{"ruleId":"281","severity":1,"message":"290","line":1,"column":72,"nodeType":"283","messageId":"284","endLine":1,"endColumn":73,"suggestions":"291"},{"ruleId":"281","severity":1,"message":"290","line":1,"column":84,"nodeType":"283","messageId":"284","endLine":1,"endColumn":85,"suggestions":"292"},{"ruleId":"293","severity":1,"message":"294","line":28,"column":9,"nodeType":"295","messageId":"296","endLine":28,"endColumn":40},"@typescript-eslint/no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'elevatedState'. Either include it or remove the dependency array. You can also do a functional update 'setElevatedState(e => ...)' if you only need 'elevatedState' in the 'setElevatedState' call.","ArrayExpression",["297"],"React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.",["298"],["299"],"no-native-reassign",["300"],"no-negated-in-lhs",["301"],"'registerProps' is assigned a value but never used.","Assignments to the 'requestOptions' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","React Hook useEffect has missing dependencies: 'auth' and 'setElevatedState'. Either include them or remove the dependency array.",["302"],"React Hook useEffect has a missing dependency: 'setElevatedState'. Either include it or remove the dependency array.",["303"],"React Hook useEffect has missing dependencies: 'elevatedState' and 'history'. Either include them or remove the dependency array.",["304"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'loginProps' is assigned a value but never used.",["305"],["306"],["307"],"'accountProps' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchAccount'. Either include it or remove the dependency array.",["308"],"'forgotPasswordProps' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'navProps' is assigned a value but never used.","'loadProps' is assigned a value but never used.",["309"],["310"],"React Hook useEffect has missing dependencies: 'elevatedState', 'history', and 'prevShiftUUID'. Either include them or remove the dependency array.",["311"],"'Link' is defined but never used.","'trainProps' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'elevatedState' and 'setElevatedState'. Either include them or remove the dependency array.",["312"],"'converting' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'startTraining' and 'updateRequestOptions'. Either include them or remove the dependency array.",["313"],"React Hook useEffect has missing dependencies: 'updateRequestOptions' and 'updateStatus'. Either include them or remove the dependency array.",["314"],"React Hook useEffect has missing dependencies: 'stopTraining' and 'updateRequestOptions'. Either include them or remove the dependency array.",["315"],"React Hook useEffect has missing dependencies: 'stopTrain', 'updateRequestOptions', and 'updateStatus'. Either include them or remove the dependency array.",["316"],["317"],"React Hook useEffect has a missing dependency: 'convertImage'. Either include it or remove the dependency array.",["318"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["319"],"'shiftProps' is assigned a value but never used.","'updateProgress' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchInference' and 'updateRequestOptions'. Either include them or remove the dependency array.",["320"],["321"],"'trainResponse' is assigned a value but never used.","'advancedTrainProps' is assigned a value but never used.",["322"],"'setBaseRemake' is assigned a value but never used.","'setMaskmage' is assigned a value but never used.","'setMaskRemake' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'converting' and 'setElevatedState'. Either include them or remove the dependency array.",["323"],["324"],"React Hook useEffect has missing dependencies: 'basicView', 'history', and 'stopTrain'. Either include them or remove the dependency array.",["325"],"'Navbar' is defined but never used.","'useElementsProps' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchLogout'. Either include it or remove the dependency array.",["326"],["327"],["328"],"'returnFetch' is defined but never used.","no-useless-escape","Unnecessary escape character: \\U.","Literal","unnecessaryEscape",["329","330"],"Unnecessary escape character: \\O.",["331","332"],"Unnecessary escape character: \\P.",["333","334"],"Unnecessary escape character: \\C.",["335","336"],["337","338"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object",{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},"no-global-assign","no-unsafe-negation",{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"347","fix":"353"},{"desc":"349","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"363","fix":"383"},{"desc":"384","fix":"385"},{"desc":"375","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"347","fix":"393"},{"messageId":"394","fix":"395","desc":"396"},{"messageId":"397","fix":"398","desc":"399"},{"messageId":"394","fix":"400","desc":"396"},{"messageId":"397","fix":"401","desc":"399"},{"messageId":"394","fix":"402","desc":"396"},{"messageId":"397","fix":"403","desc":"399"},{"messageId":"394","fix":"404","desc":"396"},{"messageId":"397","fix":"405","desc":"399"},{"messageId":"394","fix":"406","desc":"396"},{"messageId":"397","fix":"407","desc":"399"},"Update the dependencies array to be: [elevatedState]",{"range":"408","text":"409"},"Update the dependencies array to be: [auth, fetching]",{"range":"410","text":"411"},"Update the dependencies array to be: [authenticatedResponse, elevatedState]",{"range":"412","text":"413"},"Update the dependencies array to be: [auth, authenticating, registerResponse, setElevatedState]",{"range":"414","text":"415"},"Update the dependencies array to be: [authenticatedResponse, setElevatedState]",{"range":"416","text":"417"},"Update the dependencies array to be: [elevatedState, history]",{"range":"418","text":"419"},"Update the dependencies array to be: [auth, authenticating, loginResponse, setElevatedState]",{"range":"420","text":"421"},{"range":"422","text":"417"},{"range":"423","text":"419"},"Update the dependencies array to be: [fetchAccount, fetching]",{"range":"424","text":"425"},"Update the dependencies array to be: [setElevatedState]",{"range":"426","text":"427"},"Update the dependencies array to be: [loadResponse, setElevatedState]",{"range":"428","text":"429"},"Update the dependencies array to be: [elevatedState, history, prevShiftUUID]",{"range":"430","text":"431"},"Update the dependencies array to be: [elevatedState, setElevatedState]",{"range":"432","text":"433"},"Update the dependencies array to be: [startTraining, training, updateRequestOptions]",{"range":"434","text":"435"},"Update the dependencies array to be: [updateRequestOptions, updateStatus, updating]",{"range":"436","text":"437"},"Update the dependencies array to be: [stop, stopTraining, updateRequestOptions]",{"range":"438","text":"439"},"Update the dependencies array to be: [stopTrain, stopping, updateRequestOptions, updateStatus]",{"range":"440","text":"441"},"Update the dependencies array to be: [setElevatedState, trainResponse]",{"range":"442","text":"443"},"Update the dependencies array to be: [convertImage, imageString]",{"range":"444","text":"445"},"Update the dependencies array to be: [stopTrain, advancedView, history]",{"range":"446","text":"447"},"Update the dependencies array to be: [fetchInference, shifting, updateRequestOptions]",{"range":"448","text":"449"},"Update the dependencies array to be: [setElevatedState, shiftResponse]",{"range":"450","text":"451"},{"range":"452","text":"433"},"Update the dependencies array to be: [converting, setElevatedState, trainResponse]",{"range":"453","text":"454"},{"range":"455","text":"445"},"Update the dependencies array to be: [baseImage, baseRemake, basicView, history, maskImage, maskRemake, stopTrain]",{"range":"456","text":"457"},"Update the dependencies array to be: [fetchLogout, fetching]",{"range":"458","text":"459"},"Update the dependencies array to be: [auth, authenticating, logoutResponse, setElevatedState]",{"range":"460","text":"461"},{"range":"462","text":"417"},"removeEscape",{"range":"463","text":"464"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"465","text":"466"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"467","text":"464"},{"range":"468","text":"466"},{"range":"469","text":"464"},{"range":"470","text":"466"},{"range":"471","text":"464"},{"range":"472","text":"466"},{"range":"473","text":"464"},{"range":"474","text":"466"},[1806,1808],"[elevatedState]",[1873,1883],"[auth, fetching]",[2045,2068],"[authenticatedResponse, elevatedState]",[2298,2332],"[auth, authenticating, registerResponse, setElevatedState]",[2503,2526],"[authenticatedResponse, setElevatedState]",[2629,2660],"[elevatedState, history]",[2188,2219],"[auth, authenticating, loginResponse, setElevatedState]",[2388,2411],[2514,2545],[975,985],"[fetchAccount, fetching]",[1937,1939],"[setElevatedState]",[2840,2854],"[loadResponse, setElevatedState]",[3076,3103],"[elevatedState, history, prevShiftUUID]",[941,943],"[elevatedState, setElevatedState]",[2772,2782],"[startTraining, training, updateRequestOptions]",[2926,2936],"[updateRequestOptions, updateStatus, updating]",[3109,3115],"[stop, stopTraining, updateRequestOptions]",[3392,3402],"[stopTrain, stopping, updateRequestOptions, updateStatus]",[3778,3793],"[setElevatedState, trainResponse]",[3918,3931],"[convertImage, imageString]",[4143,4168],"[stopTrain, advancedView, history]",[2190,2200],"[fetchInference, shifting, updateRequestOptions]",[2330,2345],"[setElevatedState, shiftResponse]",[1042,1044],[2759,2774],"[converting, setElevatedState, trainResponse]",[2851,2864],[3081,3127],"[baseImage, baseRemake, basicView, history, maskImage, maskRemake, stopTrain]",[1508,1518],"[fetchLogout, fetching]",[1686,1718],"[auth, authenticating, logoutResponse, setElevatedState]",[1889,1912],[41,42],"",[41,41],"\\",[53,54],[53,53],[62,63],[62,62],[71,72],[71,71],[83,84],[83,83]]