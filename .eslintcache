[{"C:\\Coding\\Projects\\Shift Webapp\\src\\App.tsx":"1","C:\\Coding\\Projects\\Shift Webapp\\src\\reportWebVitals.ts":"2","C:\\Coding\\Projects\\Shift Webapp\\src\\index.tsx":"3","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Register.tsx":"4","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Logout.tsx":"5","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Login.tsx":"6","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Button\\Button.tsx":"7","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\TextBox\\TextBox.tsx":"8","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Checkbox\\Checkbox.tsx":"9","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Account.tsx":"10","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\ForgotPassword.tsx":"11","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\Navbar.tsx":"12","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Load\\Load.tsx":"13","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\Train.tsx":"14","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Shift\\Shift.tsx":"15","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Media\\Media.tsx":"16","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Image\\Image.tsx":"17","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Video\\Video.tsx":"18","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\dragAndDrop.tsx":"19","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\MediaList\\MediaList.tsx":"20","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\AdvancedTrain.tsx":"21","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\defaultMedia.tsx":"22","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Arrays.tsx":"23","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Files.tsx":"24","C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\FileDialog\\FileDialog.tsx":"25","C:\\Coding\\Projects\\Shift Webapp\\src\\Hooks\\Images.tsx":"26","C:\\Coding\\Projects\\Shift Webapp\\src\\Hooks\\Fetch.tsx":"27"},{"size":4379,"mtime":1609977801888,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1606695268610,"results":"30","hashOfConfig":"29"},{"size":501,"mtime":1607455320057,"results":"31","hashOfConfig":"29"},{"size":3016,"mtime":1609896970568,"results":"32","hashOfConfig":"29"},{"size":797,"mtime":1609896965600,"results":"33","hashOfConfig":"29"},{"size":3151,"mtime":1609896956468,"results":"34","hashOfConfig":"29"},{"size":581,"mtime":1609779389830,"results":"35","hashOfConfig":"29"},{"size":658,"mtime":1609779161561,"results":"36","hashOfConfig":"29"},{"size":645,"mtime":1609779978263,"results":"37","hashOfConfig":"29"},{"size":787,"mtime":1609976619140,"results":"38","hashOfConfig":"29"},{"size":2440,"mtime":1609896947555,"results":"39","hashOfConfig":"29"},{"size":2141,"mtime":1609977736381,"results":"40","hashOfConfig":"29"},{"size":5268,"mtime":1609962167792,"results":"41","hashOfConfig":"29"},{"size":2030,"mtime":1609962130757,"results":"42","hashOfConfig":"29"},{"size":2711,"mtime":1609961623529,"results":"43","hashOfConfig":"29"},{"size":1531,"mtime":1609894225899,"results":"44","hashOfConfig":"29"},{"size":507,"mtime":1609894222749,"results":"45","hashOfConfig":"29"},{"size":664,"mtime":1609894227238,"results":"46","hashOfConfig":"29"},{"size":556,"mtime":1609880398388,"results":"47","hashOfConfig":"29"},{"size":1103,"mtime":1609894281598,"results":"48","hashOfConfig":"29"},{"size":2654,"mtime":1609962134029,"results":"49","hashOfConfig":"29"},{"size":179,"mtime":1609894232124,"results":"50","hashOfConfig":"29"},{"size":169,"mtime":1609894228991,"results":"51","hashOfConfig":"29"},{"size":213,"mtime":1609894230699,"results":"52","hashOfConfig":"29"},{"size":869,"mtime":1609891206709,"results":"53","hashOfConfig":"29"},{"size":763,"mtime":1609960946537,"results":"54","hashOfConfig":"29"},{"size":749,"mtime":1609977052183,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1hd1ldu",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Coding\\Projects\\Shift Webapp\\src\\App.tsx",["116","117"],"C:\\Coding\\Projects\\Shift Webapp\\src\\reportWebVitals.ts",[],["118","119"],"C:\\Coding\\Projects\\Shift Webapp\\src\\index.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Register.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Logout.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Login.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Button\\Button.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\TextBox\\TextBox.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Checkbox\\Checkbox.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\Account.tsx",["120"],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\User\\ForgotPassword.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Navbar\\Navbar.tsx",["121","122"],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Load\\Load.tsx",["123"],"//Third Party Imports\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { Media } from '../../Components/Media/Media';\r\nimport { MediaList } from \"../../Components/MediaList/MediaList\";\r\nimport { FileDialog } from \"../../Components/FileDialog/FileDialog\"\r\nimport { defaultVideo } from \"../../Helpers/defaultMedia\";\r\nimport { dropFiles, allowDrop } from '../../Helpers/dragAndDrop';\r\nimport { fileListToList } from '../../Helpers/Files';\r\nimport { fillArray } from \"../../Helpers/Arrays\";\r\nimport { useFetch } from \"../../Hooks/Fetch\";\r\n\r\n\r\ninterface loadRequestReturn {\r\n  msg: string,\r\n  shiftUUID: string\r\n}\r\n\r\nlet loadResponse: loadRequestReturn = {msg: \"\", shiftUUID: \"\"}\r\n\r\nconst ListOfFiles: File[] = [];\r\nconst ListOfDataType: string[] = [];\r\n\r\n\r\nexport const Load = (props: IElevatedPageState) => {\r\n  const [trainingDataTypes, setTrainingDataTypes] = useState(ListOfDataType);\r\n  const [files, setFiles] = useState(ListOfFiles);\r\n  const [baseFiles, setBaseFiles] = useState(ListOfFiles);\r\n  const [maskFiles, setMaskFiles] = useState(ListOfFiles);\r\n  const [baseVideo, setBaseVideo] = useState(defaultVideo);\r\n  const [apiFetch, apiResponse, apiError, apiLoading] = useFetch(loadResponse);  \r\n\r\n  const requestHeaders = new Headers();\r\n  const requestOptions: RequestInit = {\r\n    method: 'POST',\r\n    headers: {},\r\n    credentials: \"include\",\r\n  };\r\n\r\n\r\n  async function load(){\r\n    const data = new FormData();\r\n    for (var fileIndex = 0; fileIndex < files.length; fileIndex++){\r\n      console.log(files[fileIndex].name);\r\n      data.append(`file${fileIndex}`, files[fileIndex]);\r\n    }\r\n    requestOptions.body = data;\r\n\r\n    requestHeaders.append('trainingDataTypes', JSON.stringify(trainingDataTypes));\r\n    requestOptions.headers = requestHeaders;\r\n\r\n    apiFetch(`/api/loadData`, requestOptions)\r\n    props.setMsg(apiResponse.msg)\r\n    props.setShiftUUID(apiResponse.shiftUUID)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    setFiles([baseVideo, ...baseFiles, ...maskFiles]);\r\n    setTrainingDataTypes([...fillArray(\"base\", baseFiles.length+1), ...fillArray(\"mask\", maskFiles.length)])\r\n  }, [baseVideo, baseFiles, maskFiles]);\r\n\r\n  useEffect(() => {\r\n\t\tconsole.error(apiError);\r\n\t}, [apiError]);\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <h4>Base Face</h4>\r\n      <Row>\r\n        <Col xs={2}></Col>\r\n        <Col xs={8} className=\"neumorphic borderRadius-2\">\r\n          <Row>\r\n            <Col xs={11}></Col>\r\n            <Col xs={1} >\r\n              <FileDialog className=\"pr-2\" id=\"baseVideoUpload\" onChange={(event) => setBaseVideo(event.target.files![0])}>&#x21c6;</FileDialog>\r\n            </Col>\r\n          </Row>\r\n          <Media className=\"borderRadius-2 p-2\" key={baseVideo.name} onDragOver={(event) => allowDrop(event)}\r\n                 onDrop={(event) => setBaseVideo(dropFiles(event)[0])} mediaSrc={baseVideo} mediaType=\"video/mp4\" droppable={true}/>\r\n        </Col>\r\n        <Col xs={2}></Col>\r\n      </Row>\r\n      <Row className=\"mt-4\">\r\n        <Col>\r\n          <h4>More Base</h4>\r\n          <div className=\"neumorphic borderRadius-2\">\r\n            <Row>\r\n              <Col xs={11}></Col>\r\n              <Col xs={1} >\r\n                <FileDialog className=\"pr-2\" id=\"baseFileUpload\" mutipleSelect={true} onChange={(event) => setBaseFiles((current) => [...current, ...fileListToList(event.target.files!)])}>&#43;</FileDialog>\r\n              </Col>\r\n            </Row>\r\n            <MediaList className=\"mt-2 p-3\" onDragOver={(event) => allowDrop(event)}\r\n                       onDrop={(event) => setBaseFiles([...baseFiles, ...dropFiles(event)])} elementsPerRow={2} key={baseFiles.length}>\r\n              {baseFiles.map((file) => (\r\n                <Media mediaSrc={file} mediaType=\"video/mp4\"/>\r\n              ))}\r\n            </MediaList>\r\n          </div>\r\n        </Col>\r\n        <Col>\r\n          <h4>Mask Face</h4>\r\n          <div className=\"neumorphic borderRadius-2\">\r\n            <Row>\r\n              <Col xs={11}></Col>\r\n              <Col xs={1} >\r\n                <FileDialog className=\"pr-2\" id=\"maskFileUpload\" mutipleSelect={true} onChange={(event) => setMaskFiles((current) => [...current, ...fileListToList(event.target.files!)])}>&#43;</FileDialog>\r\n              </Col>\r\n            </Row>\r\n            <MediaList className=\"mt-2 borderRadius-2 p-3\" onDragOver={(event) => allowDrop(event)}\r\n                       onDrop={(event) => setMaskFiles([...maskFiles, ...dropFiles(event)])} elementsPerRow={2} key={maskFiles.length}>\r\n              {maskFiles.map((file) => (\r\n                <Media mediaSrc={file} mediaType=\"video/mp4\"/>\r\n              ))}\r\n            </MediaList>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-2\">\r\n        <Col xs={2}></Col>\r\n        <Col xs={8}>\r\n          <Button className=\"p-2 mt-2 mb-2 borderRadius-2 w-100\" disabled={apiLoading} onClick={load}>Load</Button>\r\n        </Col>\r\n        <Col xs={2}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\Train.tsx",["124","125"],"//Third Party Imports\r\nimport React, { useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { Media } from '../../Components/Media/Media';\r\nimport { defaultVideo } from \"../../Helpers/defaultMedia\";\r\nimport { useFetch } from \"../../Hooks/Fetch\";\r\nimport { useBinaryImageCovnersion } from \"../../Hooks/Images\";\r\n\r\n\r\ninterface trainRequestReturn {\r\n  msg: string\r\n}\r\n\r\nlet trainResponse: trainRequestReturn = {msg: \"\"}\r\n\r\n\r\nexport const Train = (props: IElevatedPageState) => {\r\n  const [apiFetch, apiResponse, apiError, apiLoading] = useFetch(trainResponse);  \r\n\r\n  const requestOptions: RequestInit = {\r\n    method: 'POST',\r\n    credentials: \"include\",\r\n    headers: { 'Content-Type': 'application/json'},\r\n    body: JSON.stringify({shiftUUID: props.shiftUUID,\r\n                          usePTM: false,\r\n                          prebuiltShiftModel: \"\",\r\n                          epochs: 10})\r\n  };\r\n\r\n  \r\n  async function train(){\r\n    apiFetch(`/api/train`, requestOptions)\r\n    props.setMsg(apiResponse.msg)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    console.error(apiError)\r\n  }, [apiError]);\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <Row className=\"my-2\">\r\n        <Media className=\"neumorphic borderRadius-2 my-2 w-100 p-2\" mediaSrc={defaultVideo} mediaType=\"video/mp4\"/>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={2}></Col>\r\n        <Col xs={4}>\r\n          <Link to=\"/advancedTrain\" className=\"w-100\">\r\n            <Button className=\"p-2 mt-2 mb-2 mr-4 borderRadius-2 w-100\">Advanced View</Button>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={4}>\r\n          <Button className=\"p-2 mt-2 mb-2 ml-4 borderRadius-2 w-100\" onClick={train}>Shift</Button>\r\n        </Col>\r\n        <Col xs={2}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Shift\\Shift.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Media\\Media.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Image\\Image.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\Video\\Video.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\dragAndDrop.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\MediaList\\MediaList.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Modules\\Train\\AdvancedTrain.tsx",["126"],"//Third Party Imports\r\nimport React, { useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//First Party Imports\r\nimport { IElevatedPageState } from \"../../Interfaces/PageState\";\r\nimport { Button } from '../../Components/Button/Button';\r\nimport { Media } from '../../Components/Media/Media';\r\nimport { defaultVideo } from \"../../Helpers/defaultMedia\";\r\nimport { useFetch } from \"../../Hooks/Fetch\";\r\n\r\n\r\ninterface trainRequestReturn {\r\n  msg: string\r\n}\r\n\r\nlet trainResponse: trainRequestReturn = {msg: \"\"}\r\n\r\n\r\nexport const AdvancedTrain = (props: IElevatedPageState) => {\r\n  const [apiFetch, apiResponse, apiError, apiLoading] = useFetch(trainResponse);  \r\n\r\n  const requestOptions: RequestInit = {\r\n    method: 'POST',\r\n    credentials: \"include\",\r\n    headers: { 'Content-Type': 'application/json'},\r\n    body: JSON.stringify({shiftUUID: props.shiftUUID,\r\n                          usePTM: false,\r\n                          prebuiltShiftModel: \"\"})\r\n  };\r\n\r\n  \r\n  async function train(){\r\n    apiFetch(`/api/train`, requestOptions)\r\n    props.setMsg(apiResponse.msg)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    console.error(apiError)\r\n  }, [apiError]);\r\n\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center h-100 flex-column\">\r\n      <Row>\r\n        <Col className=\"my-2 px-2\" xs={6}>\r\n          <Row className=\"my-2 ml-4 py-2\">\r\n            <Media className=\"neumorphic borderRadius-2 my-1 w-100 p-2\" mediaSrc={defaultVideo} mediaType=\"video/mp4\"/>\r\n          </Row>\r\n          <Row className=\"my-2 ml-4 py-2\">\r\n            <Media className=\"neumorphic borderRadius-2 my-1 w-100 p-2\" mediaSrc={defaultVideo} mediaType=\"video/mp4\"/>\r\n          </Row>\r\n        </Col>\r\n        <Col className=\"my-2 px-2\" xs={6}>\r\n          <Row className=\"my-2 ml-4 py-2\">\r\n            <Media className=\"neumorphic borderRadius-2 my-1 w-100 p-2\" mediaSrc={defaultVideo} mediaType=\"video/mp4\"/>\r\n          </Row>\r\n          <Row className=\"my-2 ml-4 py-2\">\r\n            <Media className=\"neumorphic borderRadius-2 my-1 w-100 p-2\" mediaSrc={defaultVideo} mediaType=\"video/mp4\"/>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={2}></Col>\r\n        <Col xs={4} className=\"m-2\">\r\n          <Link to=\"/train\" className=\"w-100\">\r\n            <Button className=\"borderRadius-2 p-2 mr-2 w-100\">Basic View</Button>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={4} className=\"m-2\">\r\n          <Button className=\"borderRadius-2 p-2 ml-2 w-100\" onClick={train}>Shift</Button>\r\n        </Col>\r\n        <Col xs={2}></Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\defaultMedia.tsx",["127","128","129","130","131"],"export const defaultVideo = new File(['C:\\Users\\naper\\OneDrive\\Pictures\\Camera Roll\\ChrisHemsworthMotivation.mp4'], 'chris.mp4', {\"type\": \"video/mp4\"}) //Check empty constructor\r\n","C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Arrays.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Helpers\\Files.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Components\\FileDialog\\FileDialog.tsx",[],"C:\\Coding\\Projects\\Shift Webapp\\src\\Hooks\\Images.tsx",["132"],"//Third Party Imports\r\nimport React, { useState } from 'react';\r\n\r\n\r\nexport function useBinaryImageCovnersion(): [(imageString: string) => Promise<void>, File, any, boolean]{\r\n  const [response, setResponse] = useState(new File([], ''));\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  async function call(imageString: string){\r\n    setIsLoading(true);\r\n\r\n    try{\r\n      const response = await fetch(imageString);\r\n      const blob = await response.blob();\r\n      setResponse(new File([blob], `image${imageString.substring(23, 33)}`));\r\n      setIsLoading(false);\r\n    }\r\n    catch (error){\r\n      setIsLoading(false);\r\n      setError(error);\r\n    }\r\n  }\r\n\r\n  return [call, response, error, isLoading]\r\n}\r\n","C:\\Coding\\Projects\\Shift Webapp\\src\\Hooks\\Fetch.tsx",["133"],{"ruleId":"134","severity":1,"message":"135","line":33,"column":33,"nodeType":"136","messageId":"137","endLine":33,"endColumn":41},{"ruleId":"134","severity":1,"message":"138","line":33,"column":43,"nodeType":"136","messageId":"137","endLine":33,"endColumn":53},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":26,"column":6,"nodeType":"145","endLine":26,"endColumn":8,"suggestions":"146"},{"ruleId":"134","severity":1,"message":"147","line":2,"column":17,"nodeType":"136","messageId":"137","endLine":2,"endColumn":25},{"ruleId":"134","severity":1,"message":"148","line":2,"column":27,"nodeType":"136","messageId":"137","endLine":2,"endColumn":36},{"ruleId":"134","severity":1,"message":"149","line":4,"column":10,"nodeType":"136","messageId":"137","endLine":4,"endColumn":14},{"ruleId":"134","severity":1,"message":"150","line":12,"column":10,"nodeType":"136","messageId":"137","endLine":12,"endColumn":34},{"ruleId":"134","severity":1,"message":"138","line":23,"column":43,"nodeType":"136","messageId":"137","endLine":23,"endColumn":53},{"ruleId":"134","severity":1,"message":"138","line":22,"column":43,"nodeType":"136","messageId":"137","endLine":22,"endColumn":53},{"ruleId":"151","severity":1,"message":"152","line":1,"column":42,"nodeType":"153","messageId":"154","endLine":1,"endColumn":43,"suggestions":"155"},{"ruleId":"151","severity":1,"message":"156","line":1,"column":54,"nodeType":"153","messageId":"154","endLine":1,"endColumn":55,"suggestions":"157"},{"ruleId":"151","severity":1,"message":"158","line":1,"column":63,"nodeType":"153","messageId":"154","endLine":1,"endColumn":64,"suggestions":"159"},{"ruleId":"151","severity":1,"message":"160","line":1,"column":72,"nodeType":"153","messageId":"154","endLine":1,"endColumn":73,"suggestions":"161"},{"ruleId":"151","severity":1,"message":"160","line":1,"column":84,"nodeType":"153","messageId":"154","endLine":1,"endColumn":85,"suggestions":"162"},{"ruleId":"134","severity":1,"message":"163","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":13},{"ruleId":"134","severity":1,"message":"163","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":13},"@typescript-eslint/no-unused-vars","'apiError' is assigned a value but never used.","Identifier","unusedVar","'apiLoading' is assigned a value but never used.","no-native-reassign",["164"],"no-negated-in-lhs",["165"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAccountData'. Either include it or remove the dependency array.","ArrayExpression",["166"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'useBinaryImageCovnersion' is defined but never used.","no-useless-escape","Unnecessary escape character: \\U.","Literal","unnecessaryEscape",["167","168"],"Unnecessary escape character: \\O.",["169","170"],"Unnecessary escape character: \\P.",["171","172"],"Unnecessary escape character: \\C.",["173","174"],["175","176"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"messageId":"179","fix":"180","desc":"181"},{"messageId":"182","fix":"183","desc":"184"},{"messageId":"179","fix":"185","desc":"181"},{"messageId":"182","fix":"186","desc":"184"},{"messageId":"179","fix":"187","desc":"181"},{"messageId":"182","fix":"188","desc":"184"},{"messageId":"179","fix":"189","desc":"181"},{"messageId":"182","fix":"190","desc":"184"},{"messageId":"179","fix":"191","desc":"181"},{"messageId":"182","fix":"192","desc":"184"},"Update the dependencies array to be: [getAccountData]",{"range":"193","text":"194"},"removeEscape",{"range":"195","text":"196"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"197","text":"198"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"199","text":"196"},{"range":"200","text":"198"},{"range":"201","text":"196"},{"range":"202","text":"198"},{"range":"203","text":"196"},{"range":"204","text":"198"},{"range":"205","text":"196"},{"range":"206","text":"198"},[683,685],"[getAccountData]",[41,42],"",[41,41],"\\",[53,54],[53,53],[62,63],[62,62],[71,72],[71,71],[83,84],[83,83]]